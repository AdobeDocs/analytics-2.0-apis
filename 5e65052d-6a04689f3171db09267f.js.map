{"version":3,"file":"5e65052d-6a04689f3171db09267f.js","mappings":"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","sources":["webpack://analytics-2.0-apis/./node_modules/@adobe/gatsby-theme-aio/src/components/Hero/index.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { Children, cloneElement, useContext } from 'react';\nimport { withPrefix } from 'gatsby';\nimport { css } from '@emotion/react';\nimport { AnchorButton } from '../AnchorButton';\nimport '@spectrum-css/typography';\nimport PropTypes from 'prop-types';\nimport {\n  cleanRootFix,\n  cloneChildren,\n  DEFAULT_HOME,\n  DESKTOP_SCREEN_WIDTH,\n  findSelectedTopPage,\n  findSelectedTopPageMenu,\n  getElementChild,\n  MOBILE_SCREEN_WIDTH,\n  rootFix,\n  rootFixPages,\n  TABLET_SCREEN_WIDTH\n} from '../../utils';\nimport Context from '../Context';\nimport { Breadcrumbs } from '../Breadcrumbs';\nimport classNames from 'classnames';\n\nconst setImageLoading = (child) => {\n  if (child?.props?.mdxType === 'img') {\n    return cloneElement(child, {\n      loading: 'eager'\n    });\n  }\n\n  return child;\n};\n\nconst HeroButtons = ({ buttons, styles = ['fill', 'outline'], variants = ['accent', 'secondary'], className }) =>\n  buttons ? (\n    <div\n      className={className}\n      css={css`\n        display: flex;\n        flex-wrap: wrap;\n        gap: var(--spectrum-global-dimension-size-200);\n      `}>\n      {Children.map(buttons.props.children, (item, i) => {\n        let variant = variants[0];\n        let style = styles[0];\n\n        if (i > 0) {\n          variant = variants[1];\n          style = styles[1];\n        }\n\n        const link = getElementChild(item);\n\n        return (\n          <div key={i}>\n            <AnchorButton href={link.props.href} style={style} variant={variant}>\n              <span class=\"spectrum-Button-label\">{link.props.children}</span>\n            </AnchorButton>\n          </div>\n        );\n      })}\n    </div>\n  ) : null;\n\nconst HeroImage = ({ image, styles }) =>\n  image\n    ? cloneElement(image, {\n        children: cloneChildren(image.props.children, setImageLoading),\n        css: css`\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 100%;\n          width: 100%;\n          margin-top: 0;\n          ${styles}\n\n          .gatsby-resp-image-wrapper {\n            max-width: none !important;\n            width: 100% !important;\n            height: 100% !important;\n          }\n\n          .gatsby-resp-image-background-image {\n            padding-bottom: unset !important;\n          }\n\n          .gatsby-resp-image-image {\n            object-fit: cover;\n          }\n        `\n      })\n    : null;\n\nconst HeroTexts = ({ texts }) => {\n  const textKeys = Object.keys(texts).filter((key) => key.startsWith('text'));\n  return textKeys.map((textKey) =>\n    cloneElement(texts[textKey], {\n      className: 'spectrum-Body spectrum-Body--sizeL',\n      css: css`\n        &.spectrum-Body--sizeL {\n          margin-top: 0 !important;\n\n          &:last-of-type {\n            margin-bottom: 0 !important;\n          }\n        }\n      `\n    })\n  );\n};\n\nconst HeroHeading = ({ heading, variant }) =>\n  heading\n    ? cloneElement(heading, {\n        className:\n          variant === 'default' ? 'spectrum-Heading--sizeXL' : 'spectrum-Heading--sizeXXL spectrum-Heading--serif',\n        css: css`\n          margin-top: 0;\n          margin-bottom: var(--spectrum-global-dimension-size-200);\n\n          & + p {\n            margin-bottom: var(--spectrum-global-dimension-size-200);\n          }\n        `\n      })\n    : null;\n\nconst Hero = ({\n  className,\n  background,\n  theme = 'dark',\n  heading,\n  image,\n  icon,\n  buttons,\n  variant = 'default',\n  width = DESKTOP_SCREEN_WIDTH,\n  hideBreadcrumbNav = false,\n  ...props\n}) => {\n  const { siteMetadata, location } = useContext(Context);\n\n  if (!variant || variant === 'default') {\n    const { home, pages } = siteMetadata;\n    const pathWithRootFix = rootFix(location.pathname);\n    const pagesWithRootFix = rootFixPages(pages);\n    const selectedTopPage = findSelectedTopPage(pathWithRootFix, pagesWithRootFix);\n    const selectedTopPageMenu = findSelectedTopPageMenu(pathWithRootFix, selectedTopPage);\n    if (typeof hideBreadcrumbNav != 'boolean') {\n      throw new Error('hideBreadcrumbNav is not a boolean. Correct use hideBreadcrumbNav={false}');\n    }\n\n    return (\n      <section\n        className={classNames(className, `spectrum--${theme}`)}\n        css={css`\n          position: relative;\n          height: var(--spectrum-global-dimension-size-3400);\n          margin-bottom: var(--spectrum-global-dimension-size-400);\n          background-color: ${background ?? 'rgb( 29, 125, 238)'};\n          width: 100%;\n          display: flex;\n\n          @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n            overflow: auto;\n          }\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            height: calc(100vh - var(--spectrum-global-dimension-size-1200));\n          }\n        `}>\n        <HeroImage image={image} styles={`position: absolute;`} />\n        <div\n          css={css`\n            margin: auto;\n            display: flex;\n            position: relative;\n            height: 100%;\n            max-width: ${width};\n            flex-direction: row;\n            width: 100%;\n            align-items: center;\n\n            & > p {\n              margin-top: 0 !important;\n            }\n          `}>\n          <div\n            css={css`\n              width: calc(5 * 100% / 12);\n              position: absolute;\n              display: flex;\n              flex-direction: column;\n\n              & > p {\n                margin-top: var(--spectrum-global-dimension-size-225) !important;\n                margin-bottom: 0 !important;\n              }\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                width: auto;\n                padding: 0 var(--spectrum-global-dimension-size-400);\n              }\n            `}>\n            {!hideBreadcrumbNav && home?.hidden !== true && home?.title && home?.href && selectedTopPage && (\n              <Breadcrumbs\n                pages={[\n                  DEFAULT_HOME,\n                  home,\n                  { ...selectedTopPage, href: withPrefix(cleanRootFix(selectedTopPage.href)) },\n                  selectedTopPageMenu && { ...selectedTopPageMenu, href: withPrefix(selectedTopPageMenu.href) }\n                ]}\n              />\n            )}\n\n            <HeroHeading heading={heading} variant={variant} />\n\n            <HeroTexts texts={props} />\n          </div>\n        </div>\n      </section>\n    );\n  } else {\n    const height = 'calc(var(--spectrum-global-dimension-size-6000) + var(--spectrum-global-dimension-size-250))';\n\n    if (variant === 'fullwidth') {\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            position: relative;\n            width: 100%;\n            height: ${height};\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              overflow: auto;\n            }\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              height: 100vh;\n\n              .spectrum-Heading--sizeXXL {\n                font-size: var(--spectrum-alias-heading-xl-text-size);\n              }\n            }\n          `}>\n          <HeroImage image={image} />\n\n          <div\n            css={css`\n              height: 100%;\n              position: absolute;\n              top: 0;\n              width: 100%;\n              box-sizing: border-box;\n              padding: 0 calc(var(--spectrum-global-dimension-size-3600) + var(--spectrum-global-dimension-size-125));\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              justify-content: center;\n              text-align: center;\n\n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                padding: 0 var(--spectrum-global-dimension-size-400);\n              }\n            `}>\n            <HeroHeading heading={heading} variant={variant} />\n\n            <HeroTexts texts={props} />\n\n            <HeroButtons\n              buttons={buttons}\n              variants={['secondary', 'accent']}\n              styles={['outline', 'fill']}\n              css={css`\n                margin-top: var(--spectrum-global-dimension-size-400);\n              `}\n            />\n          </div>\n        </section>\n      );\n    } else if (variant === 'halfwidth') {\n      return (\n        <section\n          className={classNames(className, `spectrum--lightest`)}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            width: 100%;\n            height: ${height};\n            overflow: hidden;\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n          `}>\n          <div\n            css={css`\n              display: flex;\n              height: 100%;\n              justify-content: center;\n            `}>\n            <div\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                width: calc(5 * 100% / 12);\n                margin-left: var(--spectrum-global-dimension-size-800);\n                margin-right: var(--spectrum-global-dimension-size-400);\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  width: 100%;\n                  margin: 0;\n                }\n              `}>\n              {icon &&\n                cloneElement(icon, {\n                  children: cloneChildren(icon.props.children, setImageLoading),\n                  css: css`\n                    height: var(--spectrum-global-dimension-size-600);\n                    width: var(--spectrum-global-dimension-size-600);\n                    margin-top: 0 !important;\n                    margin-bottom: var(--spectrum-global-dimension-size-300) !important;\n\n                    .gatsby-resp-image-wrapper {\n                      max-width: none !important;\n                      width: 100% !important;\n                      height: 100% !important;\n                    }\n\n                    .gatsby-resp-image-image {\n                      height: 100%;\n                      object-fit: contain;\n                    }\n                  `\n                })}\n\n              <HeroHeading heading={heading} isVariant />\n\n              <HeroTexts texts={props} />\n\n              <HeroButtons\n                buttons={buttons}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                `}\n              />\n            </div>\n            <div\n              css={css`\n                flex: 1;\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  display: none;\n                }\n              `}>\n              <HeroImage image={image} />\n            </div>\n          </div>\n        </section>\n      );\n    }\n  }\n};\n\nHero.propTypes = {\n  background: PropTypes.string,\n  heading: PropTypes.element,\n  text: PropTypes.element,\n  image: PropTypes.element,\n  icon: PropTypes.element,\n  buttons: PropTypes.element,\n  variant: PropTypes.string,\n  width: PropTypes.string,\n  theme: PropTypes.string,\n  showBreadcrumbNav: PropTypes.bool\n};\n\nHeroButtons.propTypes = {\n  buttons: PropTypes.element,\n  variants: PropTypes.array,\n  styles: PropTypes.array\n};\n\nHeroImage.propTypes = {\n  image: PropTypes.element\n};\n\nexport { Hero, HeroImage, HeroButtons };\n"],"names":["setImageLoading","child","props","mdxType","cloneElement","loading","HeroButtons","buttons","styles","variants","className","css","Children","children","item","i","variant","style","link","getElementChild","key","A","href","class","HeroImage","image","cloneChildren","HeroTexts","texts","Object","keys","filter","startsWith","map","textKey","HeroHeading","heading","Hero","background","theme","icon","width","DESKTOP_SCREEN_WIDTH","hideBreadcrumbNav","useContext","Context","siteMetadata","location","home","pages","pathWithRootFix","rootFix","pathname","pagesWithRootFix","rootFixPages","selectedTopPage","findSelectedTopPage","selectedTopPageMenu","findSelectedTopPageMenu","Error","classNames","MOBILE_SCREEN_WIDTH","hidden","title","DEFAULT_HOME","withPrefix","cleanRootFix","height","TABLET_SCREEN_WIDTH","isVariant"],"sourceRoot":""}