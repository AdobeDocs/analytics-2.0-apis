{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/endpoints/bulk-data-insertion/customer-id.md"],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"mappings":"2OAUsBA,E,wEAFTC,EAAe,GAOtBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,qDADR,sDAGA,SAACT,EAAD,CAAaU,QAAQ,OAAOC,MAAM,OAAOF,QAAQ,iBACjD,6PACA,uYAAwX,uBAAYG,WAAW,KAAvB,kCAAxX,iCAAme,uBAAYA,WAAW,KAAvB,wCAAne,wMACA,eACE,GAAM,mDADR,oDAGA,wCAAyB,uBAAYA,WAAW,KAAvB,cAAzB,+BAA8G,uBAAYA,WAAW,KAAvB,kBAA9G,iDAAyN,uBAAYA,WAAW,KAAvB,kBAAzN,wHAA2Y,uBAAYA,WAAW,KAAvB,kBAA3Y,MACA,0LAA2K,uBAAYA,WAAW,KAAvB,kCAA3K,QAA6P,uBAAYA,WAAW,KAAvB,iBAA7P,aAAmU,uBAAYA,WAAW,KAAvB,2BAAnU,0FAAge,uBAAYA,WAAW,KAAvB,kCAAhe,QAAkjB,uBAAYA,WAAW,KAAvB,iBAAljB,aAAwnB,uBAAYA,WAAW,KAAvB,2BAAxnB,6BACA,0BAAW,cAAGA,WAAW,IACrB,KAAQ,kBADD,eAAX,OAGA,eACE,GAAM,gCADR,iCAGA,gGACA,oBACE,eAAIA,WAAW,MAAf,QAA4B,uBAAYA,WAAW,MAAvB,kBAA5B,qBACA,eAAIA,WAAW,MAAf,QAA4B,uBAAYA,WAAW,MAAvB,aAA5B,SAA2F,uBAAYA,WAAW,MAAvB,YAA3F,gEACA,eAAIA,WAAW,MAAf,2EACE,eAAIA,WAAW,OACb,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,kCAApB,UAAyG,uBAAYA,WAAW,MAAvB,wCAAzG,YAAsM,uBAAYA,WAAW,MAAvB,UACtM,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,eACpB,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,6BACpB,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,iBAGxB,eAAIA,WAAW,MAAf,OAA2B,uBAAYA,WAAW,MAAvB,YAA3B,QAAwF,uBAAYA,WAAW,MAAvB,QAAxF,MAA+I,uBAAYA,WAAW,MAAvB,cAA/I,qBACA,eAAIA,WAAW,MAAf,iDAAqE,uBAAYA,WAAW,MAAvB,YAArE,mHAMNL,EAAWM,gBAAiB","file":"component---src-pages-guides-endpoints-bulk-data-insertion-customer-id-md-481a8d9c8fa5c07402f0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-2.0-apis/analytics-2.0-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"customer-id-and-experience-cloud-visitor-id-seeds\"\n    }}>{`Customer ID and Experience Cloud Visitor ID seeds`}</h1>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Before using this feature, the Adobe BDIA team must coordinate with the Adobe Audience Manager team to configure the report suite for ECID auto-generation. Contact your Adobe consultant or Account Manager to initiate this process.`}</p>\n    <p>{`BDIA provides a way for a customer ID to be specified which Adobe will use as a seed to automatically generate an Experience Cloud Visitor ID. This functionality simplifies the process of generating your own ECID, which would require a separate server call for every visitor. Providing your own customer ID as a seed for an ECID is done by adding a column to specify a `}<inlineCode parentName=\"p\">{`customerID.[customerIDType].id`}</inlineCode>{` and another boolean column, `}<inlineCode parentName=\"p\">{`customerID.[customerIDType].ismcseed`}</inlineCode>{` to denote which customer ID should be used as the seed. Other columns can be used to further define the customer ID as well. See the table below for more information about the available columns.`}</p>\n    <h2 {...{\n      \"id\": \"customer-id-columns-and-query-string-parameters\"\n    }}>{`Customer ID columns and query string parameters`}</h2>\n    <p>{`When specifying a `}<inlineCode parentName=\"p\">{`customerID`}</inlineCode>{` column, you must choose a `}<inlineCode parentName=\"p\">{`customerIDType`}</inlineCode>{` to correlate the columns to each other. The `}<inlineCode parentName=\"p\">{`customerIDType`}</inlineCode>{` can be any alpha-numeric string, and is case sensitive. If using Audience Manager, your \"Integration Code\" is your `}<inlineCode parentName=\"p\">{`customerIDType`}</inlineCode>{`.`}</p>\n    <p>{`For example, you have two ways that your site can identify a visitor: a user ID and an e-mail address. If a visitor logs in using their user ID, then you would set `}<inlineCode parentName=\"p\">{`customerID.userIdent.authState`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`AUTHENTICATED`}</inlineCode>{` and set `}<inlineCode parentName=\"p\">{`customerID.userIdent.id`}</inlineCode>{` to their user ID. If a visitor logs in using their email address, then you would set `}<inlineCode parentName=\"p\">{`customerID.userEmail.authState`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`AUTHENTICATED`}</inlineCode>{` and set `}<inlineCode parentName=\"p\">{`customerID.userEmail.id`}</inlineCode>{` to their email address.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"file-format.md\"\n      }}>{`File format`}</a>{` f`}</p>\n    <h2 {...{\n      \"id\": \"customer-id-validation-rules\"\n    }}>{`Customer ID Validation Rules`}</h2>\n    <p>{`The following validation rules are applicable to the Customer ID columns:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`customerIDType`}</inlineCode>{` cannot be empty`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`authState`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`isMCSeed`}</inlineCode>{` must be one of the valid values stated in the table above.`}</li>\n      <li parentName=\"ul\">{`At least one of the following Visitor IDs must be provided in each row:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`customerID.[customerIDType].id`}</inlineCode>{` with `}<inlineCode parentName=\"li\">{`customerID.[customerIDType].isMCSeed`}</inlineCode>{` set to `}<inlineCode parentName=\"li\">{`true`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`VisitorID`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MarketingCloudVisitorID`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ipAddress`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`If `}<inlineCode parentName=\"li\">{`isMCSeed`}</inlineCode>{` is `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`customerID`}</inlineCode>{` cannot be empty`}</li>\n      <li parentName=\"ul\">{`There can only be ONE field specified as the `}<inlineCode parentName=\"li\">{`isMCSeed`}</inlineCode>{` per IMS Organization. This field name must be communicated to Adobe's BDIA team for provisioning before use.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}