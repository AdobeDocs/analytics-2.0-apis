{"version":3,"file":"bca8bde3-a217a84b08bfc5aed57e.js","mappings":"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","sources":["webpack://analytics-2.0-apis/./node_modules/@adobe/gatsby-theme-aio/src/components/GlobalHeader/index.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { Fragment, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport nextId from 'react-id-generator';\nimport { withPrefix } from 'gatsby';\nimport { GatsbyLink } from '../GatsbyLink';\nimport {\n  DEFAULT_HOME,\n  DESKTOP_SCREEN_WIDTH,\n  findSelectedTopPage,\n  findSelectedTopPageMenu,\n  getExternalLinkProps,\n  MOBILE_SCREEN_WIDTH,\n  rootFix,\n  rootFixPages\n} from '../../utils';\nimport { css } from '@emotion/react';\nimport { AnchorButton } from '../AnchorButton';\nimport { Button } from '../Button';\nimport { ProgressCircle } from '../ProgressCircle';\nimport { Adobe, ChevronDown, Close, Magnify, TripleGripper } from '../Icons';\nimport { ActionButton, Text as ActionButtonLabel } from '../ActionButton';\nimport { PickerButton } from '../Picker';\nimport { Item as MenuItem, Menu } from '../Menu';\nimport { Popover } from '../Popover';\nimport { Image } from '../Image';\nimport { Link } from '../Link';\nimport {\n  animateIndicator,\n  Item as TabsItem,\n  Label as TabsItemLabel,\n  positionIndicator,\n  Tabs,\n  TabsIndicator\n} from '../Tabs';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/assetlist';\nimport { Divider } from '../Divider';\nimport DEFAULT_AVATAR from './avatar.svg';\n\nconst clearQueryStringParameters = () => {\n  window.history.replaceState({}, '', `${window.location.pathname}`);\n};\n\nconst getSelectedTabIndex = (location, pages) => {\n  const pathWithRootFix = rootFix(location.pathname);\n  const pagesWithRootFix = rootFixPages(pages);\n\n  let selectedIndex = pagesWithRootFix.indexOf(findSelectedTopPage(pathWithRootFix, pagesWithRootFix));\n\n  // Assume first item is selected\n  if (selectedIndex === -1) {\n    selectedIndex = 0;\n  }\n\n  return selectedIndex;\n};\n\nconst getAvatar = async (userId) => {\n  try {\n    const req = await fetch(`https://cc-api-behance.adobe.io/v2/users/${userId}?api_key=SUSI2`);\n    const res = await req.json();\n    return res?.user?.images?.['138'] ?? DEFAULT_AVATAR;\n  } catch (e) {\n    console.warn(e);\n    return DEFAULT_AVATAR;\n  }\n};\n\nconst toggleSideNavExpanded = (setSideNavExpanded) => {\n  setSideNavExpanded((sideNavExpanded) => !sideNavExpanded);\n};\n\nconst GlobalHeader = ({\n  hasIMS,\n  ims,\n  isLoadingIms,\n  home,\n  versions,\n  pages,\n  docs,\n  location,\n  toggleSideNav,\n  hasSideNav,\n  hasSearch,\n  showSearch,\n  setShowSearch,\n  searchButtonId\n}) => {\n  const [selectedTabIndex, setSelectedTabIndex] = useState(getSelectedTabIndex(location, pages));\n  const tabsRef = useRef(null);\n  const tabsContainerRef = useRef(null);\n  const selectedTabIndicatorRef = useRef(null);\n  // Don't animate the tab indicator by default\n  const [isAnimated, setIsAnimated] = useState(false);\n  const versionPopoverRef = useRef(null);\n  const profilePopoverRef = useRef(null);\n  const [openVersion, setOpenVersion] = useState(false);\n  const [openProfile, setOpenProfile] = useState(false);\n  const [openMenuIndex, setOpenMenuIndex] = useState(-1);\n  const [profile, setProfile] = useState(null);\n  const [avatar, setAvatar] = useState(DEFAULT_AVATAR);\n  const [isLoadingProfile, setIsLoadingProfile] = useState(true);\n  const [sideNavExpanded, setSideNavExpanded] = useState(false);\n\n  const POPOVER_ANIMATION_DELAY = 200;\n  const versionPopoverId = nextId();\n  const profilePopoverId = nextId();\n  const hasHome = home?.hidden !== true;\n\n  const positionSelectedTabIndicator = (index) => {\n    const selectedTab = pages[index].tabRef;\n\n    if (selectedTab?.current) {\n      positionIndicator(selectedTabIndicatorRef, selectedTab);\n    }\n  };\n\n  useEffect(() => {\n    const index = getSelectedTabIndex(location, pages);\n    setSelectedTabIndex(index);\n\n    animateIndicator(selectedTabIndicatorRef, isAnimated);\n    positionSelectedTabIndicator(index);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    (async () => {\n      if (ims && ims.isSignedInUser()) {\n        const profile = await ims.getProfile();\n        setProfile(profile);\n        setAvatar(await getAvatar(profile.userId));\n        setIsLoadingProfile(false);\n      } else if (!isLoadingIms) {\n        setIsLoadingProfile(false);\n      }\n    })();\n  }, [ims]);\n\n  useEffect(() => {\n    if (versionPopoverRef.current) {\n      if (openVersion) {\n        const { top, left } = versionPopoverRef.current.getBoundingClientRect();\n\n        versionPopoverRef.current.style.left = `calc(${left}px + var(--spectrum-global-dimension-size-160))`;\n        versionPopoverRef.current.style.top = `${top}px`;\n        versionPopoverRef.current.style.position = 'fixed';\n      } else {\n        // Wait for animation to finish\n        setTimeout(() => {\n          versionPopoverRef.current.style = '';\n        }, POPOVER_ANIMATION_DELAY);\n      }\n    }\n  }, [openVersion]);\n\n  useEffect(() => {\n    if (openMenuIndex !== -1) {\n      const menuRef = pages[openMenuIndex].menuRef;\n\n      const { top, left } = menuRef.current.getBoundingClientRect();\n\n      menuRef.current.style.left = `${left}px`;\n      menuRef.current.style.top = `${top}px`;\n      menuRef.current.style.position = 'fixed';\n    } else {\n      pages.forEach((page) => {\n        const menuRef = page.menuRef;\n        if (menuRef) {\n          // Wait for animation to finish\n          setTimeout(() => {\n            menuRef.current.style = '';\n          }, POPOVER_ANIMATION_DELAY);\n        }\n      });\n    }\n  }, [openMenuIndex]);\n\n  useEffect(() => {\n    // Clicking outside of menu should close menu\n    const onClick = (event) => {\n      if (versionPopoverRef.current && !versionPopoverRef.current.contains(event.target)) {\n        setOpenVersion(false);\n      }\n\n      if (profilePopoverRef?.current && !profilePopoverRef.current.contains(event.target)) {\n        setOpenProfile(false);\n      }\n\n      pages.some((page) => {\n        if (page?.menuRef?.current && !page.menuRef.current.contains(event.target)) {\n          setOpenMenuIndex(-1);\n        }\n      });\n    };\n\n    document.addEventListener('click', onClick);\n\n    return () => document.removeEventListener('click', onClick);\n  }, []);\n\n  useEffect(() => {\n    const onScroll = () => {\n      setOpenVersion(false);\n      setOpenMenuIndex(-1);\n    };\n\n    tabsContainerRef.current.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => tabsContainerRef.current.removeEventListener('scroll', onScroll);\n  }, []);\n\n  return (\n    <header\n      role=\"banner\"\n      css={css`\n        height: 100%;\n        border-bottom: var(--spectrum-global-dimension-size-10) solid var(--spectrum-global-color-gray-200);\n        box-sizing: border-box;\n\n        @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n          border-bottom: none;\n        }\n      `}>\n      <nav\n        css={css`\n          height: 100%;\n        `}\n        role=\"navigation\"\n        aria-label=\"Global\">\n        <div\n          css={css`\n            display: grid;\n            grid-template-areas: 'title navigation optional';\n            grid-template-columns: minmax(auto, min-content) auto minmax(auto, min-content);\n            align-items: center;\n            margin-right: var(--spectrum-global-dimension-size-200);\n            height: 100%;\n\n            @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n              grid-template-columns: minmax(auto, min-content) auto 0 0;\n              margin-right: 0;\n              margin-left: 0;\n              height: calc(100% + var(--spectrum-global-dimension-size-10));\n              overflow: hidden;\n            }\n          `}>\n          <div\n            css={css`\n              height: 100%;\n              grid-area: title;\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                padding-left: ${!hasSideNav ? 'var(--spectrum-global-dimension-size-200)' : '0'};\n              }\n            `}>\n            <div\n              css={css`\n                display: flex;\n                height: 100%;\n                align-items: center;\n              `}>\n              <div\n                css={css`\n                  display: flex;\n                  height: 100%;\n                  align-items: center;\n                `}>\n                <div\n                  css={css`\n                    display: none;\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: ${hasSideNav ? 'block' : 'none'};\n                      margin: 0 var(--spectrum-global-dimension-size-100);\n                    }\n                  `}>\n                  <ActionButton\n                    isQuiet\n                    aria-expanded={sideNavExpanded}\n                    aria-controls=\"side-menu\"\n                    aria-label=\"Open side menu\"\n                    onClick={() => {\n                      toggleSideNav && toggleSideNav();\n                      toggleSideNavExpanded();\n                    }}>\n                    <TripleGripper aria-hidden=\"true\" focusable=\"false\" />\n                  </ActionButton>\n                </div>\n                <a\n                  href=\"/\"\n                  css={css`\n                    display: flex;\n                    height: 100%;\n                    text-decoration: none;\n                    padding-left: var(--spectrum-global-dimension-size-400);\n                    padding-right: var(--spectrum-global-dimension-size-300);\n                    padding-bottom: var(--spectrum-global-dimension-size-25);\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      padding-left: 0;\n                      padding-right: 0;\n                    }\n                  `}>\n                  <div\n                    css={css`\n                      display: flex;\n                      align-items: center;\n                    `}>\n                    <Adobe\n                      css={css`\n                        width: calc(\n                          var(--spectrum-global-dimension-size-250) + var(--spectrum-global-dimension-size-25)\n                        );\n                        height: var(--spectrum-global-dimension-size-225);\n                        display: block;\n                        margin-right: var(--spectrum-global-dimension-size-100);\n                      `}\n                    />\n                    <strong\n                      className=\"spectrum-Heading spectrum-Heading--sizeXXS\"\n                      css={css`\n                        color: #fa0f00;\n                        font-size: calc(\n                          var(--spectrum-global-dimension-size-200) - var(--spectrum-global-dimension-size-10)\n                        );\n                        font-weight: 700;\n                        white-space: nowrap;\n                      `}>\n                      <span\n                        css={css`\n                          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                            display: none;\n                          }\n                        `}>\n                        Adobe&nbsp;\n                      </span>\n                      Developer\n                    </strong>\n                  </div>\n                </a>\n              </div>\n\n              {hasHome && (\n                <div\n                  css={css`\n                    height: calc(100% + var(--spectrum-global-dimension-size-10));\n                    border-left: var(--spectrum-global-dimension-size-10) solid var(--spectrum-global-color-gray-200);\n                    border-right: var(--spectrum-global-dimension-size-10) solid var(--spectrum-global-color-gray-200);\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: none;\n                    }\n                  `}>\n                  <Link isQuiet variant=\"secondary\">\n                    <a\n                      css={css`\n                        display: flex;\n                        height: calc(100% - var(--spectrum-global-dimension-size-10));\n                        align-items: center;\n                        justify-content: center;\n                        box-sizing: border-box;\n                        padding: 0 var(--spectrum-global-dimension-size-300);\n                        white-space: nowrap;\n                        color: var(--spectrum-global-color-gray-700);\n                        transition: background-color var(--spectrum-global-animation-duration-100) ease-out,\n                          color var(--spectrum-global-animation-duration-100) ease-out;\n\n                        &:hover {\n                          background-color: var(--spectrum-global-color-gray-75);\n                          color: var(--spectrum-global-color-gray-900);\n                          text-decoration: none;\n                        }\n                      `}\n                      href={home?.href || DEFAULT_HOME.href}\n                      {...getExternalLinkProps(home?.href || DEFAULT_HOME.href)}>\n                      {home?.title || DEFAULT_HOME.title}\n                    </a>\n                  </Link>\n                </div>\n              )}\n            </div>\n          </div>\n          <div\n            ref={tabsContainerRef}\n            css={css`\n              grid-area: navigation;\n              ${hasHome && 'margin-left: var(--spectrum-global-dimension-size-350);'}\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                ${!hasHome && 'margin-left: var(--spectrum-global-dimension-size-300);'}\n\n                overflow-x: auto;\n                overflow-x: overlay;\n                overflow-y: hidden;\n                -ms-overflow-style: none;\n                scrollbar-width: none;\n\n                &::-webkit-scrollbar {\n                  display: none;\n                }\n\n                margin-right: var(--spectrum-global-dimension-size-3000);\n              }\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                position: absolute;\n                top: calc(var(--spectrum-global-dimension-size-600) - var(--spectrum-global-dimension-size-10));\n                height: var(--spectrum-global-dimension-size-600);\n                left: 0;\n                right: 0;\n                margin-left: 0;\n                margin-right: 0;\n                background-color: var(--spectrum-global-color-gray-50);\n                border-bottom: var(--spectrum-global-dimension-size-10) solid var(--spectrum-global-color-gray-200);\n              }\n            `}>\n            <div\n              css={css`\n                display: none;\n\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  display: block;\n                  pointer-events: none;\n                  position: fixed;\n                  top: var(--spectrum-global-dimension-size-600);\n                  height: calc(var(--spectrum-global-dimension-size-600) - var(--spectrum-global-dimension-size-25));\n                  right: 0;\n                  width: var(--spectrum-global-dimension-size-300);\n                  background: -webkit-linear-gradient(0deg, rgba(255, 255, 255, 0), white);\n                  z-index: 1;\n                }\n              `}\n            />\n\n            <Tabs\n              css={css`\n                @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                  padding-bottom: var(--spectrum-global-dimension-size-400);\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                }\n\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  padding-bottom: 0;\n                  margin-top: 0;\n                }\n              `}\n              ref={tabsRef}\n              onFontsReady={() => {\n                positionSelectedTabIndicator(selectedTabIndex);\n                setIsAnimated(true);\n              }}>\n              {hasHome && (\n                <div\n                  css={css`\n                    display: none;\n                    margin-right: var(--spectrum-global-dimension-size-300);\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: block;\n                    }\n                  `}>\n                  <TabsItem\n                    elementType={GatsbyLink}\n                    to={home?.href || DEFAULT_HOME.href}\n                    {...getExternalLinkProps(home?.href || DEFAULT_HOME.href)}>\n                    <TabsItemLabel>{home?.title || DEFAULT_HOME.title}</TabsItemLabel>\n                  </TabsItem>\n                </div>\n              )}\n              {pages.map((page, i) => {\n                const isSelectedTab = selectedTabIndex === i;\n                const menuPopoverId = nextId();\n\n                const setTabRef = (element) => {\n                  page.tabRef = { current: element };\n                };\n\n                const setTabMenuRef = (element) => {\n                  page.menuRef = { current: element };\n                };\n\n                return (\n                  <Fragment key={i}>\n                    {page.href ? (\n                      <TabsItem\n                        elementType={GatsbyLink}\n                        {...getExternalLinkProps(page.href)}\n                        ref={setTabRef}\n                        to={withPrefix(page.href)}\n                        selected={isSelectedTab}>\n                        <TabsItemLabel>{page.title}</TabsItemLabel>\n                      </TabsItem>\n                    ) : (\n                      <TabsItem\n                        css={css`\n                          ${openMenuIndex === i &&\n                          `\n                          &:after {\n                            content: '';\n                            position: absolute;\n                            z-index: -1;\n                            height: var(--spectrum-global-dimension-size-800);\n                            width: calc(100% + var(--spectrum-global-dimension-size-250));\n                            left: calc(-1 * var(--spectrum-global-dimension-size-125));\n                            top: calc(-1 * var(--spectrum-global-dimension-size-100));\n                            background-color: var(--spectrum-global-color-gray-100);\n                          }\n                        `}\n                        `}\n                        ref={setTabRef}\n                        selected={isSelectedTab}\n                        aria-controls={menuPopoverId}\n                        onClick={(event) => {\n                          event.stopImmediatePropagation();\n\n                          setOpenVersion(false);\n                          setOpenProfile(false);\n                          setOpenMenuIndex(openMenuIndex === i ? -1 : i);\n                        }}>\n                        <TabsItemLabel>{page.title}</TabsItemLabel>\n                        <ChevronDown\n                          css={css`\n                            width: var(--spectrum-global-dimension-size-125) !important;\n                            height: var(--spectrum-global-dimension-size-125) !important;\n                            margin-left: var(--spectrum-global-dimension-size-100);\n                            transition: transform var(--spectrum-global-animation-duration-100) ease-in-out;\n                            ${openMenuIndex === i && `transform: rotate(-90deg);`}\n                          `}\n                        />\n                        <Popover\n                          ref={setTabMenuRef}\n                          id={menuPopoverId}\n                          css={css`\n                            margin-left: calc(-1 * var(--spectrum-global-dimension-size-65));\n                            margin-top: var(--spectrum-global-dimension-size-25);\n                            border-top-left-radius: 0;\n                            border-top-right-radius: 0;\n                            ${page.menu.some((menu) => menu.description) &&\n                            `width: var(--spectrum-global-dimension-size-2400);`}\n\n                            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                              margin-top: calc(-1 * var(--spectrum-global-dimension-size-40));\n                            }\n                          `}\n                          isOpen={openMenuIndex === i}>\n                          <Menu>\n                            {page.menu.map((menu, k) => {\n                              const pathWithRootFix = rootFix(location.pathname);\n                              const selectedMenu = findSelectedTopPageMenu(pathWithRootFix, page);\n                              const menuHref = withPrefix(menu.href);\n\n                              return (\n                                <MenuItem\n                                  key={k}\n                                  href={menuHref}\n                                  {...getExternalLinkProps(menuHref)}\n                                  isHighlighted={menu === selectedMenu}>\n                                  {menu.description ? (\n                                    <div\n                                      css={css`\n                                        margin: var(--spectrum-global-dimension-size-100) 0;\n                                      `}>\n                                      <div\n                                        css={css`\n                                          color: var(--spectrum-global-color-gray-900);\n                                        `}>\n                                        {menu.title}\n                                      </div>\n                                      <div\n                                        className=\"spectrum-Body spectrum-Body--sizeXS\"\n                                        css={css`\n                                          white-space: normal;\n                                          margin-top: var(--spectrum-global-dimension-size-50);\n                                        `}>\n                                        {menu.description}\n                                      </div>\n                                    </div>\n                                  ) : (\n                                    <span>{menu.title}</span>\n                                  )}\n                                </MenuItem>\n                              );\n                            })}\n                          </Menu>\n                        </Popover>\n                      </TabsItem>\n                    )}\n                    {i === 0 && versions?.length > 0 && (\n                      <div\n                        css={css`\n                          margin-left: var(--spectrum-global-dimension-size-100) !important;\n                          margin-right: var(--spectrum-global-dimension-size-300);\n                        `}>\n                        <PickerButton\n                          isQuiet\n                          isOpen={openVersion}\n                          aria-controls={versionPopoverId}\n                          onClick={(event) => {\n                            event.stopImmediatePropagation();\n\n                            setOpenMenuIndex(-1);\n                            setOpenProfile(false);\n                            setOpenVersion((open) => !open);\n                          }}>\n                          {versions.find(({ selected }) => selected)?.title}\n                        </PickerButton>\n                        <Popover\n                          ref={versionPopoverRef}\n                          id={versionPopoverId}\n                          variant=\"picker\"\n                          isQuiet\n                          isOpen={openVersion}>\n                          <Menu>\n                            {versions.map((version, k) => (\n                              <MenuItem\n                                key={k}\n                                isSelected={version.selected}\n                                isHighlighted={version.selected}\n                                onClick={() => {\n                                  setOpenVersion(false);\n                                }}\n                                href={version.href}\n                                {...getExternalLinkProps(version.href)}>\n                                {version.title}\n                              </MenuItem>\n                            ))}\n                          </Menu>\n                        </Popover>\n                      </div>\n                    )}\n                  </Fragment>\n                );\n              })}\n              <TabsIndicator\n                ref={selectedTabIndicatorRef}\n                css={css`\n                  bottom: calc(-1 * var(--spectrum-global-dimension-size-125)) !important;\n\n                  @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                    bottom: calc(\n                      var(--spectrum-global-dimension-size-400) - var(--spectrum-global-dimension-size-125)\n                    ) !important;\n                  }\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    bottom: calc(-1 * var(--spectrum-tabs-rule-size)) !important;\n                  }\n                `}\n              />\n              {docs && (\n                <div\n                  css={css`\n                    margin-left: var(--spectrum-global-dimension-size-300);\n                    white-space: nowrap;\n                  `}>\n                  <AnchorButton variant=\"primary\" style=\"outline\" href={withPrefix(docs.href)}>\n                    <span class=\"spectrum-Button-label\">{docs.title ?? 'View Docs'}</span>\n                  </AnchorButton>\n                </div>\n              )}\n              <div\n                css={css`\n                  display: none;\n                  margin-left: var(--spectrum-global-dimension-size-300);\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    display: block;\n                  }\n                `}>\n                <AnchorButton variant=\"primary\" style=\"outline\" href=\"/console\">\n                  <span class=\"spectrum-Button-label\">Console</span>\n                </AnchorButton>\n              </div>\n            </Tabs>\n          </div>\n          <div\n            css={css`\n              grid-area: optional;\n              justify-self: flex-end;\n            `}>\n            <div\n              css={css`\n                display: flex;\n              `}>\n              {hasSearch && (\n                <ActionButton\n                  id={searchButtonId}\n                  aria-label=\"search\"\n                  onClick={() => {\n                    setShowSearch((show) => {\n                      if (show) {\n                        clearQueryStringParameters();\n                      }\n                      return !show;\n                    });\n                  }}\n                  isQuiet\n                  css={css`\n                    margin-right: var(--spectrum-global-dimension-size-200);\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-right: 0;\n                    }\n                  `}>\n                  {showSearch ? <Close /> : <Magnify />}\n                </ActionButton>\n              )}\n\n              <AnchorButton\n                variant=\"primary\"\n                style=\"outline\"\n                href=\"/console\"\n                css={css`\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    display: none;\n                  }\n                `}>\n                Console\n              </AnchorButton>\n\n              {hasIMS && (\n                <div\n                  css={css`\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    margin-left: var(--spectrum-global-dimension-size-200);\n                    width: var(--spectrum-global-dimension-size-800);\n                  `}>\n                  <ProgressCircle size=\"S\" hidden={!isLoadingIms} />\n\n                  <ActionButton\n                    css={css`\n                      margin-top: calc(-1 * var(--spectrum-global-dimension-size-25));\n                    `}\n                    hidden={isLoadingIms || isLoadingProfile || profile}\n                    variant=\"primary\"\n                    isQuiet\n                    onClick={() => {\n                      ims.signIn();\n                    }}>\n                    <ActionButtonLabel>Sign in</ActionButtonLabel>\n                  </ActionButton>\n\n                  <div hidden={!profile}>\n                    <button\n                      aria-label=\"Profile\"\n                      aria-controls={profilePopoverId}\n                      onClick={(event) => {\n                        event.stopImmediatePropagation();\n\n                        setOpenVersion(false);\n                        setOpenMenuIndex(-1);\n                        setOpenProfile((open) => !open);\n                      }}\n                      css={css`\n                        display: block;\n                        padding: 0;\n                        border: none;\n                        width: var(--spectrum-global-dimension-size-400);\n                        height: var(--spectrum-global-dimension-size-400);\n                        border-radius: var(--spectrum-global-dimension-static-percent-50);\n                        background: var(--spectrum-global-color-gray-50);\n                        overflow: hidden;\n                        cursor: pointer;\n                      `}>\n                      <Image alt=\"Avatar\" src={avatar} />\n                    </button>\n                    <Popover\n                      id={profilePopoverId}\n                      ref={profilePopoverRef}\n                      isOpen={openProfile}\n                      css={css`\n                        width: var(--spectrum-global-dimension-size-3400);\n                        max-height: var(--spectrum-global-dimension-size-4600);\n                        margin-left: calc(-1 * var(--spectrum-global-dimension-size-3000));\n                      `}>\n                      <div\n                        css={css`\n                          display: flex;\n                          align-items: center;\n                          justify-content: center;\n                          flex-direction: column;\n                        `}>\n                        <div\n                          css={css`\n                            width: var(--spectrum-global-dimension-size-800);\n                            height: var(--spectrum-global-dimension-size-800);\n                            border-radius: var(--spectrum-global-dimension-static-percent-50);\n                            background: var(--spectrum-global-color-gray-50);\n                            overflow: hidden;\n                            margin-top: var(--spectrum-global-dimension-size-400);\n                            margin-bottom: var(--spectrum-global-dimension-size-200);\n                          `}>\n                          <Image alt=\"Avatar\" src={avatar} />\n                        </div>\n\n                        <div\n                          className=\"spectrum-Heading spectrum-Heading--sizeL spectrum-Heading--light\"\n                          css={css`\n                            padding: 0 var(--spectrum-global-dimension-size-200);\n                            text-align: center;\n                          `}>\n                          {profile && profile.displayName}\n                        </div>\n\n                        <div\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-200) 0;\n                            padding: 0 var(--spectrum-global-dimension-size-200);\n                            box-sizing: border-box;\n                            width: 100%;\n                          `}>\n                          <Divider size=\"S\" />\n                        </div>\n\n                        <AnchorButton href=\"https://account.adobe.com/\" variant=\"secondary\" style=\"outline\">\n                          Edit Profile\n                        </AnchorButton>\n\n                        <Button\n                          variant=\"primary\"\n                          style=\"outline\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-200) 0;\n                          `}\n                          onClick={() => {\n                            ims.signOut();\n                          }}>\n                          Sign out\n                        </Button>\n                      </div>\n                    </Popover>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nGlobalHeader.propTypes = {\n  ims: PropTypes.object,\n  isLoadingIms: PropTypes.bool,\n  home: PropTypes.object,\n  versions: PropTypes.array,\n  pages: PropTypes.array,\n  docs: PropTypes.object,\n  location: PropTypes.object,\n  toggleSideNav: PropTypes.func,\n  hasSideNav: PropTypes.bool,\n  setShowSearch: PropTypes.func,\n  hasSearch: PropTypes.bool,\n  showSearch: PropTypes.bool,\n  searchButtonId: PropTypes.string\n};\n\nexport { GlobalHeader };\n"],"names":["getSelectedTabIndex","location","pages","pathWithRootFix","rootFix","pathname","pagesWithRootFix","rootFixPages","selectedIndex","indexOf","findSelectedTopPage","getAvatar","userId","fetch","req","json","res","user","images","DEFAULT_AVATAR","console","warn","GlobalHeader","hasIMS","ims","isLoadingIms","home","versions","docs","toggleSideNav","hasSideNav","hasSearch","showSearch","setShowSearch","searchButtonId","useState","selectedTabIndex","setSelectedTabIndex","tabsRef","useRef","tabsContainerRef","selectedTabIndicatorRef","isAnimated","setIsAnimated","versionPopoverRef","profilePopoverRef","openVersion","setOpenVersion","openProfile","setOpenProfile","openMenuIndex","setOpenMenuIndex","profile","setProfile","avatar","setAvatar","isLoadingProfile","setIsLoadingProfile","sideNavExpanded","versionPopoverId","nextId","profilePopoverId","hasHome","hidden","positionSelectedTabIndicator","index","selectedTab","tabRef","current","positionIndicator","useEffect","animateIndicator","isSignedInUser","getProfile","getBoundingClientRect","top","left","style","position","setTimeout","menuRef","forEach","page","onClick","event","contains","target","some","document","addEventListener","removeEventListener","onScroll","passive","role","css","MOBILE_SCREEN_WIDTH","DESKTOP_SCREEN_WIDTH","isQuiet","setSideNavExpanded","toggleSideNavExpanded","TripleGripper","focusable","href","Adobe","className","variant","DEFAULT_HOME","getExternalLinkProps","title","ref","onFontsReady","elementType","GatsbyLink","to","map","i","isSelectedTab","menuPopoverId","setTabRef","element","Fragment","key","withPrefix","selected","stopImmediatePropagation","ChevronDown","id","menu","description","isOpen","k","selectedMenu","findSelectedTopPageMenu","menuHref","isHighlighted","length","open","find","version","isSelected","A","class","show","window","history","replaceState","Close","Magnify","size","signIn","alt","src","displayName","signOut"],"sourceRoot":""}