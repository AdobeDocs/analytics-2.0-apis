{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Adobe Analytics - Data Feed API V2",
    "description" : "This API allows access to Data Feeds",
    "version" : "1.0"
  },
  "servers": [
    {
      "url": "https://analytics.adobe.io/data_feeds/"
    }
  ],
  "tags" : [ {
    "name" : "Health",
    "description" : "Service Health Check(s)"
  }, {
    "name" : "Datafeed API",
    "description" : "API to create, update and retrieve datafeeds with a user token"
  }, {
    "name" : "Manage API",
    "description" : "API for users to resend, reprocess and redo datafeed requests with a user token"
  }, {
    "name" : "Column Presets API",
    "description" : "API to create, update and retrieve column presets for datafeeds with a user token"
  } ],
  "paths" : {
    "/health" : {
      "get" : {
        "tags" : [ "Health" ],
        "summary" : "Service Health Check",
        "operationId" : "checkHealth",
        "parameters" : [ {
          "name" : "x-build",
          "in" : "header",
          "schema" : {
            "type" : "string",
            "enum" : [ "true" ]
          }
        }, {
          "name" : "full",
          "in" : "query",
          "description" : "Returns whether the service can hit all dependencies",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HealthStatus"
                }
              }
            }
          }
        }
      }
    },
    "/datafeed" : {
      "post" : {
        "tags" : [ "Datafeed API" ],
        "summary" : "Create datafeed",
        "description" : "**Required fields are:**\n\n- feedName: Name of the datafeed\n- rsid: Report suite String identifier\n- columnPreset: Column preset identifier\n- schedule.startDate: Start date of the schedule in ISO 8601 format\n- delivery.cloudLocationUUID: Cloud storage location UUID\n- delivery.notificationEmail: List of notification email addresses\n\n**Optional fields and defaults are:**\n\n- feedState: State of the datafeed [created, hold, active(default)]\n- dynamicLookups: Boolean to enable/disable dynamic lookups [true, false(default)]\n- replaceEscapedChars: Boolean to enable/disable replacing escaped characters [true, false(default)]\n- schedule.interval: Delivery interval [daily, hourly(default)]\n- schedule.delay: Integer representing the delay in processing in minutes 0 to 9999 (default=0)\n- packaging.type: String representing the packaging type [flat, chunked(default)]\n- packaging.chunkSize: Integer representing the chunk size in MB [1024, 2048(default), 4096]\n- packaging.compression: String representing the compression type [zip, gzip(default)]\n- packaging.manifest: String representing the manifest type [none, fin, chunked(default)]\n- packaging.noDataManifest: Boolean to enable/disable no data manifest [true, false(default)]\n- lateHits.enabled: Boolean to enable/disable late hits [true, false(default)]\n- lateHits.lookback: Integer representing the lookback period in hours [0 to 26280 (default = 0)]\n\n**Example 1 with only required fields:**\n\n```json\n{\n  \"feedName\": \"ExampleFeed1\",\n  \"rsid\": \"example-rsid\",\n  \"columnPreset\": 1,\n  \"schedule\": {\n    \"startDate\": \"2024-01-01T00:00:00Z\"\n  },\n  \"delivery\": {\n    \"cloudLocationUUID\": \"your-location-uuid\",\n    \"notificationEmail\": [\"test@example.com\"]\n  }\n}\n```\n\n**Example 2 with required and optional fields:**\n\n```json\n{\n  \"feedName\": \"ExampleFeed2\",\n  \"rsid\": \"example-rsid\",\n  \"feedState\": \"active\",\n  \"columnPreset\": 1,\n  \"notes\": \"Example feed\",\n  \"dynamicLookups\": true,\n  \"replaceEscapedChars\": false,\n  \"schedule\": {\n    \"startDate\": \"2025-06-01T00:00:00Z\",\n    \"endDate\": \"2026-12-31T23:59:59Z\",\n    \"interval\": \"hourly\",\n    \"delay\": 100\n  },\n  \"packaging\": {\n    \"type\": \"chunked\",\n    \"chunkSize\": 4096,\n    \"compression\": \"gzip\",\n    \"manifest\": \"chunked\",\n    \"noDataManifest\": true\n  },\n  \"delivery\": {\n    \"cloudLocationUUID\": \"your-location-uuid\",\n    \"notificationEmail\": [\"test@example.com\"]\n  },\n  \"lateHits\": {\n    \"enabled\": true,\n    \"lookback\": 1000\n  }\n}\n```\n",
        "operationId" : "create_1",
        "parameters" : [ {
          "name" : "x-proxy-global-company-id",
          "in" : "header",
          "description" : "Proxy global company ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataFeedCreateBody_User"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Bad Request - Unable to create Datafeed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Datafeed not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error occurred while creating datafeed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Datafeed created successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataFeedView"
                }
              }
            }
          }
        },
        "security" : [ {
          "x-user-auth" : [ ]
        } ]
      }
    },
    "/datafeed/{feedId}" : {
      "get" : {
        "tags" : [ "Datafeed API" ],
        "summary" : "Get datafeed by ID",
        "operationId" : "get_1",
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "description" : "The feed ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "x-proxy-global-company-id",
          "in" : "header",
          "description" : "Proxy global company ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "Datafeed not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error occurred while retrieving datafeed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Datafeed retrieved successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataFeedView"
                }
              }
            }
          }
        },
        "security" : [ {
          "x-user-auth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Datafeed API" ],
        "summary" : "Update datafeed",
        "description" : "This endpoint allows updating specific fields of an existing datafeed.\n\n**Fields that can be updated:**\n\n- columnPreset: Integer value representing the column preset.\n- notes: String field to add notes about the datafeed.\n- dynamicLookups: Boolean to enable/disable dynamic lookups.\n- replaceEscapedChars: Boolean to enable/disable replacing escaped characters.\n- schedule.endDate: String representing the end date of the datafeed.\n- schedule.delay: Integer representing the delay in minutes.\n- delivery.cloudLocationUUID: UUID string of the delivery location.\n- delivery.notificationEmail: List of strings representing notification email addresses.\n- lateHits.enabled: Boolean to enable/disable late hits.\n- lateHits.lookback: Integer representing the lookback period in hours.\n- packaging.type: String representing the packaging type (e.g., 'flat', 'chunked').\n- packaging.compression: String representing the compression type (e.g., 'gzip', 'zip').\n- packaging.chunkSize: Integer representing the chunk size in MB.\n- packaging.manifest: String representing the manifest type (e.g., 'none', 'fin', 'chunked').\n- packaging.noDataManifest: Boolean to enable/disable no data manifest.\n\n**Example request body:**\n\n```json\n{\n  \"columnPreset\": 0,\n  \"notes\": \"string\",\n  \"dynamicLookups\": true,\n  \"replaceEscapedChars\": true,\n  \"metadata\": {\n    \"feedId\": 0,\n    \"feedState\": \"string\"\n  },\n  \"schedule\": {\n    \"startDate\": \"string\",\n    \"endDate\": \"string\",\n    \"interval\": \"string\",\n    \"delay\": 0\n  },\n  \"packaging\": {\n    \"type\": \"string\",\n    \"chunkSize\": 0,\n    \"compression\": \"string\",\n    \"manifest\": \"string\",\n    \"noDataManifest\": true\n  },\n  \"delivery\": {\n    \"cloudLocationUUID\": \"string\",\n    \"notificationEmail\": [\n      \"string\"\n    ]\n  },\n  \"lateHits\": {\n    \"enabled\": true,\n    \"lookback\": 0\n  }\n}\n```\n",
        "operationId" : "update_1",
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "description" : "The feed ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "x-proxy-global-company-id",
          "in" : "header",
          "description" : "Proxy global company ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataFeedUpdateBody_User"
              }
            }
          }
        },
        "responses" : {
          "404" : {
            "description" : "Datafeed not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error occurred while updating datafeed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Datafeed updated successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataFeedView"
                }
              }
            }
          }
        },
        "security" : [ {
          "x-user-auth" : [ ]
        } ]
      }
    },
    "/datafeed/requests" : {
      "post" : {
        "tags" : [ "Datafeed API" ],
        "summary" : "Gets datafeed requests",
        "description" : "This endpoint allows searching for datafeed requests using various filtering criteria.\n\nThe request body supports the following fields:\n\n- rsids **[Required]:** One or more report suite IDs to filter the search.\n\n- feedIds **[Required]**: One or more datafeed IDs to filter the search.\n\n- requestStates: Filter by request states [created, processing, completed].\n\n- billingCustomerId: Filter by billing customer ID.\n\n- useUtc: Indicates whether the date filters should use UTC (default=false).\n\n***Pagination:***\n\n- limit: Maximum number of results to return (default=100).\n\n- offset: Offset for pagination (default=0).\n\n***Sorting:***\n\n- sortOrder: 'asc' or 'desc' (default='desc').\n\n- orderBy: Field to sort by (first_run_date, complete_date, req_period_begin_utc ).\n\n***Date Filters:*** Dates must be in ISO 8601 format with timezone (yyyy-MM-dd'T'HH:mm:ssXXX) or UTC (yyyy-MM-ddTHH:mm:ssZ):\n\n- minRequestPeriodStartDate, maxRequestPeriodStartDate: Filter by request period start date range.\n\n- minAttemptDate, maxAttemptDate: Filter by attempt date range.\n\n- minCompletionDate, maxCompletionDate: Filter by completion date range.\n\n- minSubmittedDate, maxSubmittedDate: Filter by submission date range.\n\n**Example request body:**\n\n```json\n{\n  \"rsids\": [\n    \"inttest\"\n  ],\n  \"feedIds\": [\n    6, 7\n  ],\n  \"requestStates\": [\n    \"created\", \"processing\", \"completed\"\n  ],\n  \"limit\": 10,\n  \"offset\": 0,\n  \"sortOrder\": \"desc\",\n  \"minRequestPeriodStartDate\": \"2023-05-21T08:00:00Z\",\n  \"maxRequestPeriodStartDate\": \"2023-07-21T08:10:00Z\"\n}\n```\n",
        "operationId" : "getDataFeedRequests_1",
        "parameters" : [ {
          "name" : "x-proxy-global-company-id",
          "in" : "header",
          "description" : "Proxy global company ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataFeedRequestsSearchBody"
              }
            }
          }
        },
        "responses" : {
          "404" : {
            "description" : "Datafeed requests not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error occurred while retrieving datafeed requests.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Datafeed requests retrieved successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataFeedRequestListView"
                }
              }
            }
          }
        },
        "security" : [ {
          "x-user-auth" : [ ]
        } ]
      }
    },
    "/datafeed/request/{rsid}/{feedId}" : {
      "get" : {
        "tags" : [ "Datafeed API" ],
        "summary" : "Gets datafeed requests for a report suite and feed ID",
        "description" : "If no dates are provided, the API will return the latest datafeed requests.\n\n",
        "operationId" : "getDataFeedRequestsForFeed_1",
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "The report suite ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feedId",
          "in" : "path",
          "description" : "The feed ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "Filters for Datafeed requests on or after the specified datetime",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "Filters for Datafeed requests on or before the specified datetime",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of records to return. Max value allowed is 5000. Defaults to 500.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Number of records to skip for pagination. Defaults to 0.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "x-proxy-global-company-id",
          "in" : "header",
          "description" : "Proxy global company ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "Datafeed requests not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error occurred while retrieving datafeed requests.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Datafeed requests retrieved successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataFeedRequestListView"
                }
              }
            }
          }
        },
        "security" : [ {
          "x-user-auth" : [ ]
        } ]
      }
    },
    "/datafeed/suite/{rsid}" : {
      "get" : {
        "tags" : [ "Datafeed API" ],
        "summary" : "Gets datafeeds for a report suite",
        "operationId" : "getDataFeedsForReportSuite_1",
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "The report suite ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-proxy-global-company-id",
          "in" : "header",
          "description" : "Proxy global company ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "Datafeeds not found for rsids.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error occurred while retrieving datafeeds for rsids.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Datafeeds for report suite retrieved successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataFeedList"
                }
              }
            }
          }
        },
        "security" : [ {
          "x-user-auth" : [ ]
        } ]
      }
    },
    "/datafeed/suite" : {
      "post" : {
        "tags" : [ "Datafeed API" ],
        "summary" : "Gets datafeeds for an array of report suite",
        "operationId" : "getDataFeedsForReportSuites_1",
        "parameters" : [ {
          "name" : "x-proxy-global-company-id",
          "in" : "header",
          "description" : "Proxy global company ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportSuiteList_User"
              }
            }
          }
        },
        "responses" : {
          "404" : {
            "description" : "Datafeeds not found for rsids.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error occurred while retrieving datafeeds for rsids.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Datafeeds for multiple report suite retrieved successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataFeedList"
                }
              }
            }
          }
        },
        "security" : [ {
          "x-user-auth" : [ ]
        } ]
      }
    },
    "/datafeed/status/{feedId}/{status}" : {
      "put" : {
        "tags" : [ "Datafeed API" ],
        "summary" : "Update datafeed status",
        "operationId" : "updateStatus_1",
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "description" : "The feed ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "Valid values: active, canceled and hold",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-proxy-global-company-id",
          "in" : "header",
          "description" : "Proxy global company ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "Datafeed not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error occurred while updating datafeed status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Datafeed status updated successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataFeedView"
                }
              }
            }
          }
        },
        "security" : [ {
          "x-user-auth" : [ ]
        } ]
      }
    },
    "/datafeed/{feedId}/{requestId}/redo" : {
      "get" : {
        "tags" : [ "Manage API" ],
        "summary" : "Redo a datafeed by request ID",
        "operationId" : "redoDatafeed_1",
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "description" : "The feed ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "requestId",
          "in" : "path",
          "description" : "The datafeed request ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "x-proxy-global-company-id",
          "in" : "header",
          "description" : "Proxy global company ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request - Unable to resend request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Datafeed not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error occurred while redo datafeed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "The redo request succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataFeedView"
                }
              }
            }
          }
        },
        "security" : [ {
          "x-user-auth" : [ ]
        } ]
      }
    },
    "/datafeed/{feedId}/{requestId}/reprocess" : {
      "get" : {
        "tags" : [ "Manage API" ],
        "summary" : "Reprocess a datafeed by request ID",
        "operationId" : "reprocessDatafeed_1",
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "description" : "The feed ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "requestId",
          "in" : "path",
          "description" : "The datafeed request ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "x-proxy-global-company-id",
          "in" : "header",
          "description" : "Proxy global company ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request - Unable to resend request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Datafeed not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error occurred while reprocess datafeed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "The reprocess request succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataFeedView"
                }
              }
            }
          }
        },
        "security" : [ {
          "x-user-auth" : [ ]
        } ]
      }
    },
    "/datafeed/{feedId}/{requestId}/resend" : {
      "get" : {
        "tags" : [ "Manage API" ],
        "summary" : "Resend a data feed by request ID",
        "operationId" : "resendDatafeed_1",
        "parameters" : [ {
          "name" : "feedId",
          "in" : "path",
          "description" : "The feed ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "requestId",
          "in" : "path",
          "description" : "The datafeed request ID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "x-proxy-global-company-id",
          "in" : "header",
          "description" : "Proxy global company ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request - Unable to resend request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Datafeed not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error occurred while resending datafeed request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "The resend request succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataFeedView"
                }
              }
            }
          }
        },
        "security" : [ {
          "x-user-auth" : [ ]
        } ]
      }
    },
    "/presets/columns/{rsid}" : {
      "get" : {
        "tags" : [ "Column Presets API" ],
        "summary" : "Get available column presets by rsid",
        "operationId" : "getColumnPresetByRsid_1",
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "The report suite ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-proxy-global-company-id",
          "in" : "header",
          "description" : "Proxy global company ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "Column Presets for report suite not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error occurred while retrieving column presets for rsid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Column Presets for report suite retrieved successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ColumnPresetList"
                }
              }
            }
          }
        },
        "security" : [ {
          "x-user-auth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Column Presets API" ],
        "summary" : "Create a new column preset",
        "operationId" : "createColumnPresetByRsid_1",
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "The report suite ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "x-proxy-global-company-id",
          "in" : "header",
          "description" : "Proxy global company ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ColumnPresetCreateBody_User"
              }
            }
          }
        },
        "responses" : {
          "404" : {
            "description" : "Column Presets for report suite not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - Unable to create Column Preset.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error occurred while creating column preset.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Column Presets for report suite created successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ColumnPresetView"
                }
              }
            }
          }
        },
        "security" : [ {
          "x-user-auth" : [ ]
        } ]
      }
    },
    "/presets/columns/all" : {
      "get" : {
        "tags" : [ "Column Presets API" ],
        "summary" : "Get all columns",
        "operationId" : "getAllColumnNames_1",
        "parameters" : [ {
          "name" : "x-proxy-global-company-id",
          "in" : "header",
          "description" : "Proxy global company ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "Column names not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error occurred while retrieving all columns",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "All Column Names retrieved successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ColumnList"
                }
              }
            }
          }
        },
        "security" : [ {
          "x-user-auth" : [ ]
        } ]
      }
    },
    "/presets/columns/id/{presetId}" : {
      "get" : {
        "tags" : [ "Column Presets API" ],
        "summary" : "Get a column preset by ID",
        "operationId" : "getColumnPreset_1",
        "parameters" : [ {
          "name" : "presetId",
          "in" : "path",
          "description" : "The column preset ID ",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "x-proxy-global-company-id",
          "in" : "header",
          "description" : "Proxy global company ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "Column preset not found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Error occurred while retrieving columnPreset.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsAsrErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Column Preset retrieved successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ColumnPresetView"
                }
              }
            }
          }
        },
        "security" : [ {
          "x-user-auth" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "AsrHealthIndicator" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "timeout" : {
            "type" : "integer",
            "format" : "int64"
          },
          "weight" : {
            "type" : "string",
            "enum" : [ "Required: Failure of this dependency would result in complete system outage", "Major: Failure of this dependency would result in major functional degradation", "None: Failure of this dependency would not contribute to the overall system health" ]
          },
          "id" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/IndicatorType"
          }
        }
      },
      "HealthStatus" : {
        "type" : "object",
        "properties" : {
          "dependencies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AsrHealthIndicator"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "value" : {
                  "$ref" : "#/components/schemas/Thrown"
                },
                "key" : {
                  "type" : "string"
                }
              }
            }
          },
          "status" : {
            "type" : "string"
          },
          "system-status" : {
            "type" : "string",
            "enum" : [ "RED", "ORANGE", "GREEN" ]
          }
        }
      },
      "IndicatorType" : {
        "type" : "object"
      },
      "Thrown" : {
        "type" : "object",
        "properties" : {
          "exception" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "stack" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "thrown" : {
            "$ref" : "#/components/schemas/Thrown"
          }
        }
      },
      "DataFeedView" : {
        "properties" : {
          "dynamicLookups" : {
            "type" : "boolean"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule"
          },
          "delivery" : {
            "$ref" : "#/components/schemas/Delivery"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/Metadata"
          },
          "columnPreset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "notes" : {
            "type" : "string"
          },
          "feedName" : {
            "type" : "string"
          },
          "rsid" : {
            "type" : "string"
          },
          "lateHits" : {
            "$ref" : "#/components/schemas/LateHits"
          },
          "packaging" : {
            "$ref" : "#/components/schemas/Packaging"
          },
          "replaceEscapedChars" : {
            "type" : "boolean"
          }
        }
      },
      "Delivery" : {
        "type" : "object",
        "properties" : {
          "cloudLocationUUID" : {
            "type" : "string"
          },
          "notificationEmail" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "LateHits" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "lookback" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "LegacyTransportConfig" : {
        "type" : "object",
        "properties" : {
          "transportId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "protocol" : {
            "type" : "string"
          },
          "hostname" : {
            "type" : "string"
          },
          "port" : {
            "type" : "integer",
            "format" : "int32"
          },
          "directoryPath" : {
            "type" : "string"
          },
          "prefix" : {
            "type" : "string"
          },
          "skipRename" : {
            "type" : "boolean"
          },
          "bucket" : {
            "type" : "string"
          },
          "container" : {
            "type" : "string"
          },
          "accountName" : {
            "type" : "string"
          },
          "projectId" : {
            "type" : "string"
          },
          "exportLocationId" : {
            "type" : "string"
          }
        }
      },
      "Metadata" : {
        "type" : "object",
        "properties" : {
          "feedId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "feedState" : {
            "type" : "string"
          },
          "timeZone" : {
            "type" : "string"
          },
          "createdBy" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "string"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modificationDate" : {
            "type" : "string"
          },
          "legacyTransport" : {
            "$ref" : "#/components/schemas/LegacyTransportConfig"
          }
        },
        "description" : "Metadata for DataFeedView"
      },
      "Packaging" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "chunkSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "compression" : {
            "type" : "string"
          },
          "manifest" : {
            "type" : "string"
          },
          "noDataManifest" : {
            "type" : "boolean"
          }
        }
      },
      "Schedule" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string"
          },
          "endDate" : {
            "type" : "string"
          },
          "interval" : {
            "type" : "string"
          },
          "delay" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DataFeedCreateBody" : {
        "required" : [ "columnPreset", "delivery", "feedName", "rsid", "schedule" ],
        "type" : "object",
        "properties" : {
          "feedName" : {
            "type" : "string"
          },
          "rsid" : {
            "type" : "string"
          },
          "feedState" : {
            "type" : "string"
          },
          "columnPreset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "notes" : {
            "type" : "string"
          },
          "dynamicLookups" : {
            "type" : "boolean"
          },
          "replaceEscapedChars" : {
            "type" : "boolean"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule"
          },
          "packaging" : {
            "$ref" : "#/components/schemas/Packaging"
          },
          "delivery" : {
            "$ref" : "#/components/schemas/Delivery"
          },
          "lateHits" : {
            "$ref" : "#/components/schemas/LateHits"
          }
        }
      },
      "ActiveFeed" : {
        "type" : "object",
        "properties" : {
          "feedId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "feedName" : {
            "type" : "string"
          },
          "createdBy" : {
            "type" : "string"
          }
        }
      },
      "ActiveFeedsForLocation" : {
        "properties" : {
          "activeFeeds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActiveFeed"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "exportLocationUUID" : {
            "type" : "string"
          }
        }
      },
      "ActiveFeedsListView" : {
        "type" : "object",
        "properties" : {
          "activeFeedsByLocations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActiveFeedsForLocation"
            }
          }
        }
      },
      "DataFeedRequestListView" : {
        "properties" : {
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DataFeedRequestView"
            }
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DataFeedRequestView" : {
        "type" : "object",
        "properties" : {
          "rsid" : {
            "type" : "string"
          },
          "feedId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "feedName" : {
            "type" : "string"
          },
          "feedState" : {
            "type" : "string"
          },
          "requestId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "submittedDate" : {
            "type" : "string"
          },
          "runCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "runAttempt" : {
            "type" : "string"
          },
          "completeDate" : {
            "type" : "string"
          },
          "requestPeriodBegin" : {
            "type" : "string"
          },
          "requestPeriodEnd" : {
            "type" : "string"
          },
          "requestState" : {
            "type" : "string"
          },
          "useUTC" : {
            "type" : "integer",
            "format" : "int32"
          },
          "errorCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "errorMsg" : {
            "type" : "string"
          },
          "timezone" : {
            "type" : "string"
          }
        }
      },
      "DataFeedRequestsSearchBody" : {
        "type" : "object",
        "properties" : {
          "rsids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "feedIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "requestStates" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortOrder" : {
            "type" : "string"
          },
          "orderBy" : {
            "type" : "string"
          },
          "billingCustomerId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "useUtc" : {
            "type" : "boolean"
          },
          "minRequestPeriodStartDate" : {
            "type" : "string"
          },
          "maxRequestPeriodStartDate" : {
            "type" : "string"
          },
          "minAttemptDate" : {
            "type" : "string"
          },
          "maxAttemptDate" : {
            "type" : "string"
          },
          "minCompletionDate" : {
            "type" : "string"
          },
          "maxCompletionDate" : {
            "type" : "string"
          },
          "minSubmittedDate" : {
            "type" : "string"
          },
          "maxSubmittedDate" : {
            "type" : "string"
          }
        }
      },
      "DataFeedList" : {
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DataFeedView"
            }
          }
        }
      },
      "ReportSuiteList" : {
        "type" : "object",
        "properties" : {
          "rsids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "DataFeedUpdateBody" : {
        "type" : "object",
        "properties" : {
          "columnPreset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "notes" : {
            "type" : "string"
          },
          "dynamicLookups" : {
            "type" : "boolean"
          },
          "replaceEscapedChars" : {
            "type" : "boolean"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/UpdateMetadata"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule"
          },
          "packaging" : {
            "$ref" : "#/components/schemas/Packaging"
          },
          "delivery" : {
            "$ref" : "#/components/schemas/Delivery"
          },
          "lateHits" : {
            "$ref" : "#/components/schemas/LateHits"
          }
        }
      },
      "UpdateMetadata" : {
        "type" : "object",
        "properties" : {
          "feedId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "feedState" : {
            "type" : "string"
          }
        },
        "description" : "Metadata for the DataFeedUpdateBody"
      },
      "AnalyticsAsrErrorResponse" : {
        "properties" : {
          "errorDescription" : {
            "type" : "string"
          },
          "errorCode" : {
            "type" : "string"
          },
          "errorId" : {
            "type" : "string"
          }
        }
      },
      "ColumnName" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "ColumnPresetView" : {
        "properties" : {
          "columnNames" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ColumnName"
            }
          },
          "name" : {
            "type" : "string"
          },
          "columnPresetId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ColumnPresetCreateBody" : {
        "required" : [ "columnNames", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "columnNames" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ColumnName"
            }
          }
        }
      },
      "ColumnList" : {
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ColumnPresetList" : {
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "columnPresets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimpleColumnPresetView"
            }
          }
        }
      },
      "SimpleColumnPresetView" : {
        "type" : "object",
        "properties" : {
          "columnPresetId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "DataFeedView_User" : {
        "type" : "object",
        "properties" : {
          "feedName" : {
            "type" : "string"
          },
          "rsid" : {
            "type" : "string"
          },
          "columnPreset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "notes" : {
            "type" : "string"
          },
          "dynamicLookups" : {
            "type" : "boolean"
          },
          "replaceEscapedChars" : {
            "type" : "boolean"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/Metadata_User"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule_User"
          },
          "packaging" : {
            "$ref" : "#/components/schemas/Packaging_User"
          },
          "delivery" : {
            "$ref" : "#/components/schemas/Delivery_User"
          },
          "lateHits" : {
            "$ref" : "#/components/schemas/LateHits_User"
          }
        }
      },
      "Delivery_User" : {
        "type" : "object",
        "properties" : {
          "cloudLocationUUID" : {
            "type" : "string"
          },
          "notificationEmail" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "LateHits_User" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "lookback" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "LegacyTransportConfig_User" : {
        "type" : "object",
        "properties" : {
          "transportId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "protocol" : {
            "type" : "string"
          },
          "hostname" : {
            "type" : "string"
          },
          "port" : {
            "type" : "integer",
            "format" : "int32"
          },
          "directoryPath" : {
            "type" : "string"
          },
          "prefix" : {
            "type" : "string"
          },
          "skipRename" : {
            "type" : "boolean"
          },
          "bucket" : {
            "type" : "string"
          },
          "container" : {
            "type" : "string"
          },
          "accountName" : {
            "type" : "string"
          },
          "projectId" : {
            "type" : "string"
          },
          "exportLocationId" : {
            "type" : "string"
          }
        }
      },
      "Metadata_User" : {
        "type" : "object",
        "properties" : {
          "feedId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "feedState" : {
            "type" : "string"
          },
          "timeZone" : {
            "type" : "string"
          },
          "createdBy" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "string"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modificationDate" : {
            "type" : "string"
          },
          "legacyTransport" : {
            "$ref" : "#/components/schemas/LegacyTransportConfig_User"
          }
        },
        "description" : "Metadata for DataFeedView"
      },
      "Packaging_User" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "chunkSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "compression" : {
            "type" : "string"
          },
          "manifest" : {
            "type" : "string"
          },
          "noDataManifest" : {
            "type" : "boolean"
          }
        }
      },
      "Schedule_User" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string"
          },
          "endDate" : {
            "type" : "string"
          },
          "interval" : {
            "type" : "string"
          },
          "delay" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DataFeedCreateBody_User" : {
        "required" : [ "columnPreset", "delivery", "feedName", "rsid", "schedule" ],
        "type" : "object",
        "properties" : {
          "feedName" : {
            "type" : "string"
          },
          "rsid" : {
            "type" : "string"
          },
          "feedState" : {
            "type" : "string"
          },
          "columnPreset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "notes" : {
            "type" : "string"
          },
          "dynamicLookups" : {
            "type" : "boolean"
          },
          "replaceEscapedChars" : {
            "type" : "boolean"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule_User"
          },
          "packaging" : {
            "$ref" : "#/components/schemas/Packaging_User"
          },
          "delivery" : {
            "$ref" : "#/components/schemas/Delivery_User"
          },
          "lateHits" : {
            "$ref" : "#/components/schemas/LateHits_User"
          }
        }
      },
      "DataFeedList_User" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DataFeedView_User"
            }
          }
        }
      },
      "ReportSuiteList_User" : {
        "type" : "object",
        "properties" : {
          "rsids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "DataFeedUpdateBody_User" : {
        "type" : "object",
        "properties" : {
          "columnPreset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "notes" : {
            "type" : "string"
          },
          "dynamicLookups" : {
            "type" : "boolean"
          },
          "replaceEscapedChars" : {
            "type" : "boolean"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/UpdateMetadata_User"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule_User"
          },
          "packaging" : {
            "$ref" : "#/components/schemas/Packaging_User"
          },
          "delivery" : {
            "$ref" : "#/components/schemas/Delivery_User"
          },
          "lateHits" : {
            "$ref" : "#/components/schemas/LateHits_User"
          }
        }
      },
      "UpdateMetadata_User" : {
        "type" : "object",
        "properties" : {
          "feedId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "feedState" : {
            "type" : "string"
          }
        },
        "description" : "Metadata for the DataFeedUpdateBody"
      },
      "ColumnName_User" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "ColumnPresetView_User" : {
        "type" : "object",
        "properties" : {
          "columnPresetId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "columnNames" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ColumnName_User"
            }
          }
        }
      },
      "ColumnPresetCreateBody_User" : {
        "required" : [ "columnNames", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "columnNames" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ColumnName_User"
            }
          }
        }
      },
      "ColumnList_User" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ColumnPresetList_User" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "columnPresets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimpleColumnPresetView_User"
            }
          }
        }
      },
      "SimpleColumnPresetView_User" : {
        "type" : "object",
        "properties" : {
          "columnPresetId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          }
        }
      }
    },
    "securitySchemes" : {
      "x-user-auth" : {
        "type" : "apiKey",
        "description" : "IMS user token",
        "name" : "x-user-auth",
        "in" : "header"
      }
    }
  }
}
