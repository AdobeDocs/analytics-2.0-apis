{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/endpoints/bulk-data-insertion/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-guides-endpoints-bulk-data-insertion-index-md-959cb9b2d6758489e278.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-2.0-apis/analytics-2.0-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"bulk-data-insertion-api\"\n    }}>{`Bulk Data Insertion API`}</h1>\n    <p>{`The Bulk Data Insertion API (BDIA) is an Adobe Analytics capability allowing customers to upload server call data in batches of files as opposed to using client-side JavaScript (e.g., tags on web pages or other APIs embedded in application code). The server calls in these batch files can be either current (live) data or historical data. The concept is similar to the `}<a parentName=\"p\" {...{\n        \"href\": \"/analytics-2.0-apis/src/pages/1.4/endpoints/data-insertion/index.md\"\n      }}>{`Data Insertion API`}</a>{` available in the 1.4 API. It provides a productized system that scales, handles errors, and addresses the finer details of inserting data into Adobe Analytics.`}</p>\n    <p>{`Bulk Insertion solves several problems for a variety of use cases. Some use case examples include:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`You want to ingest historical data from a previous analytics system.`}</li>\n      <li parentName=\"ul\">{`You have an internal analytics collection system that makes it unfeasible to use client-side AppMeasurement. You can use Extract-Transform-Load (ETL) processes to put the data into batch files, then use BDIA to upload them to Adobe Analytics.`}</li>\n      <li parentName=\"ul\">{`You collect data from devices that have only intermittent connectivity to the internet. These devices store up the interactions until they receive a connection. You can upload the historical data all at once via BDIA.`}</li>\n    </ul>\n    <p>{`When using BDIA, server calls are sent in batch files. These files are in a specific CSV format where each row of the file defines the details of a server call. Each row, or server call, must specify an identifier for a visitor as well as a timestamp for when the interaction occurred. The server calls must be ordered chronologically by their timestamps, from earliest to latest, in the batch files (this is a requirement of the underlying Analytics system). Each batch file must also be compressed.`}</p>\n    <h2 {...{\n      \"id\": \"requirements\"\n    }}>{`Requirements`}</h2>\n    <p>{`The Bulk Data Insertion API has many requirements that your organization must meet. Requirements include file formatting, compression, specific inclusion of certain columns, and hit order.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Batch files are CSV files that conform to the `}<a parentName=\"li\" {...{\n          \"href\": \"https://tools.ietf.org/html/rfc4180\"\n        }}>{`RFC-4180 standard`}</a>{` with one exception: empty lines are ignored.`}</li>\n      <li parentName=\"ul\">{`Each file consists of a header row (the first row in the file) and subsequent data rows. Rows appear on lines, terminated by a line break (CRLF or LF).`}</li>\n      <li parentName=\"ul\">{`The last field in a row must not be followed by a comma.`}</li>\n      <li parentName=\"ul\">{`Rows are fields separated by commas. See the `}<a parentName=\"li\" {...{\n          \"href\": \"faq.md\"\n        }}>{`FAQ`}</a>{` on how to pass commas as part of a value.`}</li>\n      <li parentName=\"ul\">{`Rows must have the same number of columns defined as the header row. Empty fields are allowed by putting two commas or an empty string. For example, `}<inlineCode parentName=\"li\">{`,,`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`,\"\",`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`A file must contain ALL of the following columns:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`reportSuiteID`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`timestamp`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`userAgent`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`A file must also contain at least one of the following columns:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`marketingCloudVisitorID`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`IPAddress`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`customerID.[customerIDType].id`}</inlineCode>{` with `}<inlineCode parentName=\"li\">{`customerID.[customerIDType].isMCSeed`}</inlineCode>{` set to `}<inlineCode parentName=\"li\">{`true`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`A file must also contain at least one of the following columns:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`pageURL`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`pageName`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`pe`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`queryString`}</inlineCode>{` (NOTE: If only `}<inlineCode parentName=\"li\">{`queryString`}</inlineCode>{` is used, at least one of `}<inlineCode parentName=\"li\">{`pageURL`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`pageName`}</inlineCode>{`, or `}<inlineCode parentName=\"li\">{`pe`}</inlineCode>{` must be set in the `}<inlineCode parentName=\"li\">{`queryString`}</inlineCode>{` as a query parameter.)`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`All rows in a batch file for any given visitor must be sorted in chronological order by timestamp, from earliest to latest. This requirement ensures that data is ingested in the correct order. Sorting is crucial for proper attribution and analyzing visitor behavior. Adobe does not guarantee the integrity of data processed by BDIA if rows are not arranged in chronological order per visitor.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"data-collection-method\"\n    }}>{`Data collection method`}</h2>\n    <p>{`The Bulk Data Insertion API allows two methods for data collection. Pick the file format that works best for your organization's workflow.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Based on individual columns`}</strong>{`: Each column contains a dimension, and each row contains the desired value for that hit.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Based on query string`}</strong>{`: Place all desired data into the `}<inlineCode parentName=\"li\">{`QueryString`}</inlineCode>{` column. This method is ideal when you're working with image requests generated by AppMeasurement or have an existing workflow that generates a query string. Note that the columns listed above are still required.`}</li>\n    </ul>\n    <p>{`Most variables have options for either an individual column or a query string parameter. You can use any combination of these two methods. `}<strong parentName=\"p\">{`If a given variable contains data in both an individual column and its query string parameter, the individual column overwrites the query string value.`}</strong></p>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"column-reference.md\"\n      }}>{`Column reference`}</a>{` for details around header names and query string parameters that you can use for each variable.`}</p>\n    <h2 {...{\n      \"id\": \"endpoint-url\"\n    }}>{`Endpoint URL`}</h2>\n    <p>{`Regardless of which data center your report suite resides in, you can direct BDIA calls to a single global host name. However, if you are legally required to have your data processed in a specific part of the world, Adobe offers direct access to regional hosts to ensure your data is processed in the correct location.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Global (Auto-routing)`}</strong>{`: `}<inlineCode parentName=\"li\">{`POST https://analytics-collection.adobe.io/aa/collect/v1/events`}</inlineCode></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`US Processing (Regional)`}</strong>{`: `}<inlineCode parentName=\"li\">{`POST https://analytics-collection-va7.adobe.io/aa/collect/v1/events`}</inlineCode></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`European Processing (Regional)`}</strong>{`: `}<inlineCode parentName=\"li\">{`POST https://analytics-collection-nld2.adobe.io/aa/collect/v1/events`}</inlineCode></li>\n    </ul>\n    <p>{`The following headers are required in the API call:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Authorization`}</strong>{`: Format is `}<inlineCode parentName=\"li\">{`Bearer <IMS_ACCESS_TOKEN>`}</inlineCode>{`. See `}<a parentName=\"li\" {...{\n          \"href\": \"../../getting-started/index.md\"\n        }}>{`Getting started`}</a>{` for authentication details.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`x-adobe-vgid`}</strong>{`: Visitor Group ID. A visitor group represents the name of the processing pipeline to use when processing the file. The header value can be any name you choose. Files uploaded to different visitor groups should have disjoint visitor IDs. See `}<a parentName=\"li\" {...{\n          \"href\": \"visitor-groups.md\"\n        }}>{`Visitor Groups`}</a>{` for more information.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`x-api-key`}</strong>{`: Client ID issued from the Adobe I/O console. See `}<a parentName=\"li\" {...{\n          \"href\": \"../../getting-started/index.md\"\n        }}>{`Getting started`}</a>{` for more information.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`x-adobe-idempotency-key`}</strong>{`: `}<em parentName=\"li\">{`OPTIONAL`}</em>{` - File ID. Every file ingest transaction receives a GUID to uniquely identify that ingest event. You can use this header to pass in your own identifier with each request. If an API call does not include this header, Adobe automatically generates its own and returns it with the response.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"response-details\"\n    }}>{`Response details`}</h2>\n    <p>{`With a file ingest POST request, a file object is returned in the response. That file can contain the following fields:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Field`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Datatype`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`file_id`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Unique identifier for the file upload transaction`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`visitor_group`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the visitor group submitted in the `}<inlineCode parentName=\"td\">{`x-adobe-vgid`}</inlineCode>{` header field`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`size`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`long`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Size, in bytes, of the uploaded file`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`received_date`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`long`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Timestamp when file upload was received in Unix time.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`rows`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`int`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The number of rows contained in the file`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`invalid_rows`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`int`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The number of invalid rows identified in the file`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`upload_name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the file submitted with the request`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`status`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Long form of `}<inlineCode parentName=\"td\">{`status_code`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`status_code`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`UPLOADED`}</inlineCode>{` or `}<inlineCode parentName=\"td\">{`REJECTED`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`processing_log`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Notes about any issues found during processing. Up to 10 rows of each error type will be explicitly mentioned, summarized results for more than 10.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`idempotency_key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If submitted as a header value, then this is the submitted value, else it is the internally generated `}<inlineCode parentName=\"td\">{`file_id`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"sample-call\"\n    }}>{`Sample Call`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`curl -X POST -H \"x-adobe-vgid:prod-18\" -H \"Authorization: Bearer <IMS_ACCESS_TOKEN>\" -H \"x-api-key: <CLIENT_ID>\" -F file=@/tmp/ingest_file.gz \"https://analytics-collection.adobe.io/aa/collect/v1/events\"\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}