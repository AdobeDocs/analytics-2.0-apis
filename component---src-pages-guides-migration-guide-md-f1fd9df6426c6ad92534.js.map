{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/migration-guide.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"6SAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,gCADR,kCAGA,wOACA,oBACE,eAAIC,WAAW,MAAf,0GACA,eAAIA,WAAW,MAAf,mEACA,eAAIA,WAAW,MAAf,iCACA,eAAIA,WAAW,MAAf,4EACA,eAAIA,WAAW,MAAf,wDACA,eAAIA,WAAW,MAAf,mEACA,eAAIA,WAAW,MAAf,0EACA,eAAIA,WAAW,MAAf,8DACA,eAAIA,WAAW,MAAf,sDACA,eAAIA,WAAW,MAAf,4CAEF,eACE,GAAM,uBADR,wBAGA,iFACA,oBACE,eAAIA,WAAW,MAAf,yBACA,eAAIA,WAAW,MAAf,mBACA,eAAIA,WAAW,MAAf,gBACA,eAAIA,WAAW,MAAf,cACA,eAAIA,WAAW,MAAf,mBACA,eAAIA,WAAW,MAAf,oBAEF,sKACA,eACE,GAAM,oBADR,sBAGA,4CAA6B,uBAAYA,WAAW,KAAvB,WAA7B,oQAAoV,uBAAYA,WAAW,KAAvB,YAApV,kKACA,0BAAW,uBAAYA,WAAW,KAAvB,YAAX,2VAA0Z,uBAAYA,WAAW,KAAvB,YAA1Z,iPACA,eACE,GAAM,qBADR,sBAGA,4HACA,eACE,GAAM,sBADR,wBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,qhBAuBL,oYACA,eACE,GAAM,0BADR,4BAGA,0CAA2B,uBAAYA,WAAW,KAAvB,YAA3B,yDACA,oBACE,eAAIA,WAAW,MAAf,wBAA4C,uBAAYA,WAAW,MAAvB,gBAA5C,uCACA,eAAIA,WAAW,MAAf,wEAA4F,uBAAYA,WAAW,MAAvB,WAA5F,aACA,eAAIA,WAAW,MAAf,iEAAqF,uBAAYA,WAAW,MAAvB,QAArF,aACA,eAAIA,WAAW,MAAf,uFAA2G,uBAAYA,WAAW,MAAvB,aAA3G,qBAAsL,uBAAYA,WAAW,MAAvB,UAAtL,kBAEF,0BAAW,cAAGA,WAAW,IACrB,KAAQ,4DADD,iCAAX,6DAGA,uLACA,eACE,GAAM,cADR,eAGA,mCAAoB,uBAAYA,WAAW,KAAvB,YAApB,oJAA4N,uBAAYA,WAAW,KAAvB,UAA5N,YAA0R,uBAAYA,WAAW,KAAvB,gBAA1R,kIACA,eACE,GAAM,8BADR,+BAGA,mGAAoF,uBAAYA,WAAW,KAAvB,YAApF,SAAiJ,uBAAYA,WAAW,KAAvB,eAAjJ,kGACA,eACE,GAAM,8BADR,+BAGA,0BAAW,uBAAYA,WAAW,KAAvB,uBAAX,SAAmF,uBAAYA,WAAW,KAAvB,sBAAnF,qGAAsP,uBAAYA,WAAW,KAAvB,YAAtP,8KAKJJ,EAAWK,gBAAiB","file":"component---src-pages-guides-migration-guide-md-f1fd9df6426c6ad92534.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-2.0-apis/analytics-2.0-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"migrating-to-the-new-20-apis\"\n    }}>{`Migrating to the New 2.0 APIs`}</h1>\n    <p>{`This guide is intended to help users of the 1.3/1.4 versions of the Analytics API migrate to the newer and more capable 2.0 APIs. By migrating to the 2.0 APIs, you can take advantage of the following features:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Faster response times with simpler and more efficient query methods, eliminating the need for polling`}</li>\n      <li parentName=\"ul\">{`Programmatic capability for queries and dynamic report updates`}</li>\n      <li parentName=\"ul\">{`More graceful error handling`}</li>\n      <li parentName=\"ul\">{`Flexible functioning to do to anything you can do in Analysis Workspace`}</li>\n      <li parentName=\"ul\">{`Consistency and matching of API calls to UI actions`}</li>\n      <li parentName=\"ul\">{`Access to all Attribution IQ models used in Analysis Workspace`}</li>\n      <li parentName=\"ul\">{`Access to all Anomaly Detection algorithms used in Analysis Workspace`}</li>\n      <li parentName=\"ul\">{`Ability to integrate with other Experience Cloud products`}</li>\n      <li parentName=\"ul\">{`Increased capacity for multiple breakdown reports`}</li>\n      <li parentName=\"ul\">{`Newest Analytics features availability`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"current-limitations\"\n    }}>{`Current limitations`}</h2>\n    <p>{`Analytics 2.0 APIs currently do not support the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`SAINT Classification`}</li>\n      <li parentName=\"ul\">{`Data Warehouse`}</li>\n      <li parentName=\"ul\">{`Data Source`}</li>\n      <li parentName=\"ul\">{`Data Feed`}</li>\n      <li parentName=\"ul\">{`Data Insertion`}</li>\n      <li parentName=\"ul\">{`Real-time data`}</li>\n    </ul>\n    <p>{`If you rely upon these features, you can still use a hybrid approach of using 1.4 APIs for the above features and 2.0 APIs for everything else.`}</p>\n    <h2 {...{\n      \"id\": \"how-20-apis-work\"\n    }}>{`How 2.0 APIs work`}</h2>\n    <p>{`For the 2.0 APIs, the `}<inlineCode parentName=\"p\">{`reports`}</inlineCode>{` endpoint contains the biggest change. It utilizes the same underlying processing pipeline as the Analysis Workspace UI. Each API call matches an action in the UI, so you can test the functionality of an interaction in the UI first to plan your calls. The `}<inlineCode parentName=\"p\">{`/reports`}</inlineCode>{` endpoint is a simple REST GET call and no longer requires a queue/get workflow to retrieve data. This simplifies development and maintenance of API clients.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`/reports`}</inlineCode>{` end point is intended to run very small requests quickly. Whereas 1.3/1.4 APIs handle requests that can require 1-2 days to process, the 2.0 APIs require many smaller requests put together in series. The 1.3/1.4 APIs might include requests for data from a large time frame, lots of metrics at once, or many breakdowns. To migrate to the 2.0  `}<inlineCode parentName=\"p\">{`/reports`}</inlineCode>{` end point, these large requests will need to be broken down into multiple requests. With this practice, results are much quicker and can be evaluated in a more timely manner. Multiple breakdowns are not requested automatically for you.`}</p>\n    <h2 {...{\n      \"id\": \"use-case-examples\"\n    }}>{`Use case examples`}</h2>\n    <p>{`To see how migration affects your reports, consider the following examples for 1.4 APIs and 2.0 APIs.`}</p>\n    <h3 {...{\n      \"id\": \"example-14-request\"\n    }}>{`Example 1.4 request`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"reportDescription\": {\n        \"reportSuiteID\":\"mainglobalprod\",\n        \"dateFrom\":\"2015-01-01\",\n        \"dateTo\":\"2017-12-31\",\n        \"granularity\":\"day\",\n        \"metrics\": [\n            {\"id\":\"pageviews\"},\n            {\"id\":\"visits\"},\n            {\"id\":\"revenue\"},\n            {\"id\":\"orders\"},\n            {\"id\":\"visits\"},\n        ],\n        \"elements\": [\n            {\"id\":\"trackingCode\", \"top\":10},\n            {\"id\":\"geocity\", \"top\":100},\n            {\"id\":\"page\",\"top\":100}\n        ]\n    }\n}\n`}</code></pre>\n    <p>{`This 1.4 report will query ten campaign items. For each of those, it will query one hundred geocity items. Finally, for each city, it will query the top 100 products. This report has the potential to return 10,000,000 records. In addition, it will try to get five metrics for each of those items. Finally, it will try to do that for each day going back a few years.`}</p>\n    <h3 {...{\n      \"id\": \"changes-for-20-request\"\n    }}>{`Changes for 2.0 request`}</h3>\n    <p>{`Requests to the 2.0 `}<inlineCode parentName=\"p\">{`/reports`}</inlineCode>{` endpoint should be smaller and be made in parallel:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Request the top ten `}<inlineCode parentName=\"li\">{`trackingCode`}</inlineCode>{` values for the given time period.`}</li>\n      <li parentName=\"ol\">{`For each of the values returned, request a breakdown of the top 100 `}<inlineCode parentName=\"li\">{`geocity`}</inlineCode>{` values.`}</li>\n      <li parentName=\"ol\">{`For each of those values, request a breakdown of the top 100 `}<inlineCode parentName=\"li\">{`page`}</inlineCode>{` values.`}</li>\n      <li parentName=\"ol\">{`Request a separate report for each metric. This means you go through steps 1-4 for `}<inlineCode parentName=\"li\">{`pageviews`}</inlineCode>{`, then again for `}<inlineCode parentName=\"li\">{`visits`}</inlineCode>{`, and so on.`}</li>\n    </ol>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"../guides/reporting-api/reporting-multiple-breakdowns.md\"\n      }}>{`Reporting Multiple Breakdowns`}</a>{` for examples of this with the 2.0 reporting API format.`}</p>\n    <p>{`You can also cache historical data as part of the client application. This means that every day, only the newest day's worth of data would need to be requested.`}</p>\n    <h2 {...{\n      \"id\": \"breakdowns\"\n    }}>{`Breakdowns`}</h2>\n    <p>{`With the 2.0 `}<inlineCode parentName=\"p\">{`/reports`}</inlineCode>{` endpoint, you can request as many breakdowns as you like, instead of the limit of four with the 1.4 API. To request a breakdown report, use an `}<inlineCode parentName=\"p\">{`itemId`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`metricFilter`}</inlineCode>{` section of your request. Refer to the 'Breakdown requests' section of the 'Ranked Endpoint User Guide' for more information.`}</p>\n    <h2 {...{\n      \"id\": \"metric-and-dimension-names\"\n    }}>{`Metric and dimension names`}</h2>\n    <p>{`For 2.0 APIs, metric and dimension names are slightly different. Use the GET `}<inlineCode parentName=\"p\">{`/metrics`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`/dimensions`}</inlineCode>{` endpoints to retrieve a full list of available metrics and dimensions for your report suite.`}</p>\n    <h3 {...{\n      \"id\": \"real-time-and-current-data\"\n    }}>{`Real-time and current data`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`\"source\"=\"realtime\"`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`\"currentData\"=true`}</inlineCode>{` flags in the 1.4 API allow a client to request data that is minutes (possibly seconds) old. The `}<inlineCode parentName=\"p\">{`/reports`}</inlineCode>{` endpoint doesn't currently support this functionality. It is currently recommended that use cases that require real-time data continue to use the 1.4 API or LiveStream.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}