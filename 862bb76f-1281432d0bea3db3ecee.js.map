{"version":3,"file":"862bb76f-1281432d0bea3db3ecee.js","mappings":"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","sources":["webpack://analytics-2.0-apis/./node_modules/@adobe/gatsby-theme-aio/src/components/GetCredential/MyCredential.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { css } from \"@emotion/react\";\r\nimport classNames from \"classnames\";\r\nimport { SideContent } from './CredentialForm';\r\nimport { CopyIcon, getOrganization, KeyIcon, LinkOut, MAX_TABLET_SCREEN_WIDTH, MIN_MOBILE_WIDTH } from './FormFields';\r\nimport JSZip from 'jszip';\r\nimport JSZipUtils from 'jszip-utils';\r\nimport { saveAs } from 'file-saver';\r\nimport { Toast } from '../Toast';\r\n\r\nconst MyCredential = ({\r\n  credentialProps,\r\n  formData,\r\n  setShowCreateForm,\r\n  setShowCredential,\r\n  organizationName,\r\n  response,\r\n  orgID\r\n}) => {\r\n\r\n  const [isTooltipOpen, setTooltipOpen] = useState(null);\r\n  const [organization, setOrganizationValue] = useState({});\r\n  const [isDownloadStart, setIsDownloadStart] = useState();\r\n  const [isCopiedTooltip, setCopiedTooltip] = useState('')\r\n\r\n  const Credential = [\r\n    {\r\n      key: \"API Key\",\r\n      value: response[\"apiKey\"]\r\n    },\r\n    {\r\n      key: \"Allowed domains\",\r\n      value: formData['AllowedOrigins']\r\n    },\r\n    {\r\n      key: \"Organization\",\r\n      value: organizationName\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const OrgInfo = localStorage?.getItem('OrgInfo');\r\n    if (OrgInfo) {\r\n      setOrganizationValue(JSON.parse(OrgInfo));\r\n    }\r\n    else {\r\n      getOrganization(setOrganizationValue);\r\n    }\r\n    if (formData['Downloads']) {\r\n      downloadZIP(`/console/api/organizations/${orgID}/projects/${response.projectId}/workspaces/${response.workspaceId}/download`, formData['Download'], formData['zipUrl'])\r\n    }\r\n\r\n  }, [])\r\n\r\n  const card = credentialProps?.[MyCredential];\r\n\r\n  const devConsoleLink = `/console/projects/${organization?.id}/${response.projectId}/overview`;\r\n\r\n  const handleCopy = (value) => {\r\n    navigator.clipboard.writeText(value);\r\n    setCopiedTooltip(true);\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setShowCreateForm(true);\r\n    setShowCredential(false);\r\n  }\r\n\r\n  const handleLeave = () => {\r\n    setTooltipOpen(null);\r\n  }\r\n\r\n  const downloadZIP = async (\r\n    downloadAPI,\r\n    fileName = 'download',\r\n    zipFileURL\r\n  ) => {\r\n    try {\r\n      const zipData = await JSZipUtils.getBinaryContent(zipFileURL);\r\n      const zipArrayBuffer = new Uint8Array(zipData).buffer;\r\n      const zip = new JSZip();\r\n\r\n      setIsDownloadStart(true)\r\n\r\n      await zip.loadAsync(zipArrayBuffer);\r\n\r\n      const token = window.adobeIMS?.getTokenFromStorage()?.token;\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": \"Bearer \" + token,\r\n          \"x-api-key\": window?.adobeIMS?.adobeIdData?.client_id\r\n        }\r\n      };\r\n\r\n      const response = await fetch(downloadAPI, options);\r\n\r\n      if (response.status === 200) {\r\n        const credential = await response.json();\r\n\r\n        zip.file('credential.json', JSON.stringify(credential));\r\n\r\n        const modifiedZipBlob = await zip.generateAsync({ type: 'blob' });\r\n        saveAs(modifiedZipBlob, `${fileName}.zip`);\r\n      } else {\r\n        console.error('Failed to fetch additional data. Response status:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred:', error);\r\n    } finally {\r\n      setIsDownloadStart(false)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames(card?.className)}\r\n      css={css`\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 16px;\r\n      `}\r\n    >\r\n      <div\r\n        className={classNames(card?.className)}\r\n        css={css`\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 16px;\r\n          color:var(--spectrum-global-color-gray-800);\r\n          width: 100%;\r\n          height: 100%;\r\n          text-align: left;\r\n\r\n          @media screen and (min-width:${MIN_MOBILE_WIDTH}) and (max-width:${MAX_TABLET_SCREEN_WIDTH}){\r\n            padding: 0;\r\n            width: 100%;\r\n          }\r\n        `}\r\n      >\r\n        <div\r\n          css={css`\r\n            display:flex;\r\n            gap:20px;\r\n            align-items: baseline;\r\n        `}\r\n        >\r\n          {card?.title &&\r\n            <h2\r\n              className=\"spectrum-Heading spectrum-Heading--sizeL\"\r\n              css={css`\r\n                font-weight:700;\r\n                color:var(--spectrum-global-color-gray-900);\r\n              `}\r\n            >{card?.title}</h2>}\r\n          {isDownloadStart &&\r\n            <div css={\r\n              css`\r\n                display:flex;\r\n                text-align: center;\r\n                align-items: center;\r\n                gap: 10px;\r\n              `}>\r\n              <div class=\"spectrum-ProgressCircle spectrum-ProgressCircle--indeterminate spectrum-ProgressCircle--small\">\r\n                <div class=\"spectrum-ProgressCircle-track\"></div>\r\n                <div class=\"spectrum-ProgressCircle-fills\">\r\n                  <div class=\"spectrum-ProgressCircle-fillMask1\">\r\n                    <div class=\"spectrum-ProgressCircle-fillSubMask1\">\r\n                      <div class=\"spectrum-ProgressCircle-fill\"></div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"spectrum-ProgressCircle-fillMask2\">\r\n                    <div class=\"spectrum-ProgressCircle-fillSubMask2\">\r\n                      <div class=\"spectrum-ProgressCircle-fill\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <p css={css`margin:0`}>Downloading...</p>\r\n            </div>\r\n          }\r\n        </div>\r\n        {formData['Downloads'] && card?.paragraph &&\r\n          <p\r\n            className=\"spectrum-Body spectrum-Body--sizeL\"\r\n            css={css`\r\n            color:var(--spectrum-global-color-gray-900);\r\n          `}>\r\n            {card?.paragraph}\r\n          </p>\r\n        }\r\n        {formData['Downloads'] &&\r\n          <p\r\n            className=\"spectrum-Body spectrum-Body--sizeS\"\r\n            css={css`\r\n              color:var(--spectrum-global-color-gray-900);\r\n            `}\r\n          >\r\n            Download not working?\r\n            <button\r\n              css={css`\r\n                padding:0;\r\n                font-family:'adobe-clean';\r\n                border: none;\r\n                background: transparent;\r\n                margin-left: 10px;\r\n                cursor:pointer;\r\n                text-decoration:underline;\r\n                color:rgb(0, 84, 182);\r\n                &:hover {\r\n                  color: rgb(2, 101, 220);\r\n                }\r\n              `}\r\n              onClick={() => downloadZIP(`/console/api/organizations/${organization?.id}/projects/${response.projectId}/workspaces/${response.workspaceId}/download`, formData['Download'], formData['zipUrl'])}\r\n            >\r\n              Restart download\r\n            </button>\r\n          </p>}\r\n      </div>\r\n      <div\r\n        css={css`\r\n          display:flex;\r\n          gap: 35px;\r\n          \r\n          @media screen and (min-width:${MIN_MOBILE_WIDTH}) and (max-width:${MAX_TABLET_SCREEN_WIDTH}){\r\n            flex-direction:column;\r\n            padding-left: 0;\r\n          }\r\n\r\n        `}\r\n      >\r\n        <div\r\n          css={css`\r\n            display:flex;\r\n            flex-direction : column;\r\n            gap: 35px;\r\n            width:50%;\r\n\r\n            @media screen and (min-width:${MIN_MOBILE_WIDTH}) and (max-width:${MAX_TABLET_SCREEN_WIDTH}){\r\n              width:100%;\r\n            }\r\n\r\n          `}\r\n        >\r\n          <div\r\n            css={css`\r\n              background: white;\r\n              border-radius: 8px;\r\n              width: 90%;\r\n\r\n              @media screen and (min-width:${MIN_MOBILE_WIDTH}) and (max-width:${MAX_TABLET_SCREEN_WIDTH}){\r\n                width:100%;\r\n              }\r\n\r\n            `}\r\n          >\r\n            <div\r\n              css={css`\r\n                padding: 5%;\r\n                display:flex;\r\n                flex-direction:column;\r\n                gap:24px;\r\n                border: 1px solid var(--spectrum-global-color-gray-200);\r\n                border-radius: 8px;\r\n              `}\r\n            >\r\n              <div\r\n                css={css`\r\n                  display:flex;\r\n                  gap:20px;\r\n                  align-items:center;\r\n                `}\r\n              >\r\n                <KeyIcon />\r\n                <h3 className=\"spectrum-Heading spectrum-Heading--sizeM\">{formData['CredentialName']}</h3>\r\n              </div>\r\n              <hr\r\n                css={css`\r\n                  margin:0;\r\n                  border: none;\r\n                  border-top: 1px solid #D0D0D0 !important;\r\n                `}\r\n              />\r\n              <div\r\n                css={css`\r\n                  display: flex;\r\n                  flex-direction: column;\r\n                  gap: 32px;\r\n                `}\r\n              >\r\n                {Credential?.map(({ key, value }, index) => {\r\n                  return (\r\n                    <>\r\n                      {value &&\r\n                        <>\r\n                          <div\r\n                            css={css`\r\n                              display:flex;\r\n                              flex-direction:column;\r\n                              gap:8px;\r\n                            `}\r\n                          >\r\n                            <h4 className=\"spectrum-Heading spectrum-Heading--sizeS\">{key}</h4>\r\n                            <div\r\n                              css={css` \r\n                                display:flex;\r\n                                align-items: center;\r\n                                gap: 24px; \r\n                              `}>\r\n                              <p className=\"spectrum-Body spectrum-Body--sizeS\"\r\n                                css={css`\r\n                                  font-family: Source Code Pro,Monaco,monospace;\r\n                                  white-space: normal;\r\n                                  overflow-wrap: anywhere;\r\n                                  max-width: 300px;\r\n                                `}\r\n                              >{value}</p>\r\n\r\n                              <div css={css`position:relative;display:${key === \"Organization\" ? \"none\" : \"block\"}`}>\r\n                                <button className=\"spectrum-ActionButton spectrum-ActionButton--sizeM\"\r\n                                  onMouseEnter={() => setTooltipOpen(index)}\r\n                                  onMouseLeave={handleLeave}\r\n                                  onClick={() => handleCopy(value, index)}\r\n                                  css={css`\r\n                                    border: 1px solid var(--spectrum-global-color-gray-400);\r\n                                    border-radius: 3px;\r\n                                    padding: 3px 6px;\r\n                                  `}\r\n                                >\r\n                                  {<span className=\"spectrum-ActionButton-label\"><CopyIcon /></span>}\r\n                                </button>\r\n\r\n                                {isTooltipOpen === index && (\r\n                                  <span\r\n                                    className=\"spectrum-Tooltip spectrum-Tooltip--top is-open\"\r\n                                    css={css`\r\n                                      position: absolute;\r\n                                      bottom: 25px;\r\n                                      top: unset;\r\n                                      white-space: nowrap;\r\n                                    `}\r\n                                  >\r\n                                    <span className=\"spectrum-Tooltip-label\">Copy</span>\r\n                                    <span className=\"spectrum-Tooltip-tip\"></span>\r\n                                  </span>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </>\r\n                      }\r\n                    </>\r\n                  )\r\n                })}\r\n                <div\r\n                  css={css`\r\n                    display:flex;\r\n                    gap:24px;\r\n                    align-items: end;\r\n\r\n                    @media screen and (min-width:${MIN_MOBILE_WIDTH}) and (max-width:${MAX_TABLET_SCREEN_WIDTH}){\r\n                      flex-direction:column;\r\n                      align-items:start;\r\n                    }\r\n                  `}\r\n                >\r\n                  <a href={card?.nextStepsHref} target=\"_blank\" rel=\"noreferrer\">\r\n                    <button\r\n                      className={`spectrum-Button spectrum-Button--outline spectrum-Button--primary spectrum-Button--sizeM`}\r\n                      css={css`width:fit-content;margin-top:10px`}>\r\n                      <span className=\"spectrum-Button-label\">{card?.nextStepsLabel}</span>\r\n                    </button>\r\n                  </a>\r\n                  <a href={devConsoleLink} target=\"_blank\" rel=\"noreferrer\"\r\n                    css={css`\r\n                      color: var(--spectrum-global-color-gray-800);\r\n                      margin: 2px 0;\r\n                      &:hover {\r\n                        color: var(--spectrum-global-color-gray-900);\r\n                      }\r\n                    `}\r\n                  >\r\n                    <div css={css`display:flex;`}>\r\n                      <div>{card?.developerConsoleManage}</div>\r\n                      <div css={\r\n                        css`\r\n                        margin-left:10px;\r\n                        @media screen and (min-width:${MIN_MOBILE_WIDTH}) and (max-width:${MAX_TABLET_SCREEN_WIDTH}){\r\n                          display:none;\r\n                        }\r\n                      }`\r\n                      }><LinkOut /></div>\r\n                    </div>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            css={css`\r\n              display:flex;\r\n              flex-direction:column;\r\n              gap:8px;\r\n              width: 80%;\r\n            `}\r\n          >\r\n            <h4 className=\"spectrum-Heading spectrum-Heading--sizeXS\"\r\n              css={css`\r\n                font-weight:700;\r\n                color:var(--spectrum-global-color-gray-900);\r\n              `}\r\n            >Need another credential</h4>\r\n            <p className=\"spectrum-Body spectrum-Body--sizeS\">\r\n              <button onClick={handleRestart}\r\n                css={css`\r\n                  border: none;\r\n                  padding:0;\r\n                  font-family:'adobe-clean';\r\n                  background: transparent;\r\n                  color:var(--spectrum-global-color-gray-800);\r\n                  text-decoration:underline;\r\n                  cursor:pointer;\r\n                  &:hover {\r\n                    color:var(--spectrum-global-color-gray-900)\r\n                  }\r\n                `\r\n                }>\r\n                Restart and create a new credential\r\n              </button>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {card?.children ? <SideContent sideContent={card?.children?.props?.children} /> : null}\r\n      </div>\r\n      {isCopiedTooltip && <Toast variant='success' message=\"Copied to clipboard\" disable={1000} customDisableFunction={setCopiedTooltip} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { MyCredential }\r\n"],"names":["MyCredential","credentialProps","formData","setShowCreateForm","setShowCredential","organizationName","response","orgID","useState","isTooltipOpen","setTooltipOpen","organization","setOrganizationValue","isDownloadStart","setIsDownloadStart","isCopiedTooltip","setCopiedTooltip","Credential","key","value","useEffect","OrgInfo","localStorage","getItem","JSON","parse","getOrganization","downloadZIP","projectId","workspaceId","card","devConsoleLink","id","handleLeave","downloadAPI","fileName","zipFileURL","JSZipUtils","zipData","zipArrayBuffer","Uint8Array","buffer","zip","JSZip","loadAsync","token","window","adobeIMS","getTokenFromStorage","options","method","headers","adobeIdData","client_id","fetch","status","json","credential","file","stringify","generateAsync","type","modifiedZipBlob","saveAs","console","error","className","classNames","css","MIN_MOBILE_WIDTH","MAX_TABLET_SCREEN_WIDTH","title","class","paragraph","onClick","map","index","onMouseEnter","onMouseLeave","navigator","clipboard","writeText","handleCopy","href","nextStepsHref","target","rel","nextStepsLabel","developerConsoleManage","children","sideContent","props","variant","message","disable","customDisableFunction"],"sourceRoot":""}