{"version":3,"file":"3f943334-ba08e86fa615c23920f1.js","mappings":"6+CAqBA,IAAMA,EAAoB,SAACC,EAAWC,GACpCD,EAAUE,QAAQC,MAAMC,UAAxB,aAAiDH,EAAYC,QAAQG,WAArE,WACAL,EAAUE,QAAQC,MAAMG,MAAWL,EAAYC,QAAQK,YAAvD,IACD,EAEKC,EAAmB,SAACR,EAAWS,GACnCT,EAAUE,QAAQC,MAAMO,WAAaD,EAAU,GAAK,MACrD,EASKE,EAAiB,QAGjBC,EAAkB,SAACC,GAAW,IAAD,EACjC,MAA8B,SAA1BA,SAAA,UAAAA,EAAOC,aAAP,eAAcC,UACTC,EAAAA,EAAAA,cAAaH,EAAO,CACzBI,QAAS,UAGNJ,CACR,EAEKK,EAAY,SAAC,GAA8B,IAAD,IAA3BC,MAAAA,OAA2B,MAAnB,GAAmB,MAAfC,OAAAA,OAAe,MAAR,GAAQ,EAC9C,OAAQD,GACJH,EAAAA,EAAAA,cAAaG,EAAO,CAClBE,UAAUC,EAAAA,EAAAA,IAAcH,EAAML,MAAMO,SAAUT,GAC9CW,KAAKA,EAAAA,EAAAA,IAAF,0KAYCH,EAZD,UAeL,IACH,EAEGI,EAAQ,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAML,EAAa,EAAbA,OACrB,OACEK,GACIT,EAAAA,EAAAA,cAAaS,EAAM,CACnBC,IAAI,GACJH,KAAKA,EAAAA,EAAAA,IAAF,6LASCH,EATD,UAYH,IAEP,EAEKO,GAAOC,EAAAA,EAAAA,aAAW,WAStBC,GAAS,IAAD,IARRC,YAAAA,OAQQ,MARI,aAQJ,MAPRC,QAAAA,OAOQ,MAPA,UAOA,MANRC,QAAAA,OAMQ,aALRC,SAAAA,OAKQ,SAJRZ,EAIQ,EAJRA,SACAa,EAGQ,EAHRA,UACAC,EAEQ,EAFRA,aACGrB,GACK,YASR,OAPAsB,EAAAA,EAAAA,YAAU,WAERC,SAASC,MAAMC,MAAMC,MAAK,WACxBL,GAAgBA,GACjB,GACF,GAAE,CAACA,KAIF,uBACEN,IAAKA,GACDf,EAFN,CAGE2B,KAAOR,OAAuBS,EAAZ,UAClB,mBAAmBT,OAA2BS,EAAhB,cAC9BR,UAAWS,IAAWT,EAAW,gBAAiB,uBAA7B,kBAAuEJ,EAAe,CAAE,uBAAyBE,GAAW,CAAE,yBAAsC,YAAZD,MAE5KV,EAGN,IAEKuB,GAAOhB,EAAAA,EAAAA,aAAW,WAQVC,GACR,IAAD,MARHgB,YAAAA,OAQG,MARW,MAQX,MAPDC,WAAAA,OAOC,aANHC,WAAAA,OAMG,SALHb,EAKG,EALHA,UACAb,EAIG,EAJHA,SACAI,EAGG,EAHHA,KACAuB,EAEG,EAFHA,MACGlC,GACA,YACGmC,EAAUJ,EAEhB,OACE,QAACI,GAAD,UACMnC,EADN,CAEEe,IAAKA,EACLY,KAAK,MACLS,MAAOF,SAAF,UAAEA,EAAOlC,aAAT,aAAE,EAAcO,SACrB,gBAAe0B,EACfI,SAAUL,EACVZ,UAAWS,IAAWT,EAAW,qBAAsB,CAAE,cAAea,GAAc,CAAE,cAAeD,MACtGrB,GAAO,QAAC2B,EAAD,CAAa3B,KAAMA,EAAMsB,WAAYA,EAAYD,WAAYA,IAA6B,KACjGE,GAAQ,QAACK,EAAD,SAASL,EAAT,KAA0B,KAClC3B,EAGN,IA1BD,uIA4BM+B,GAAcxB,EAAAA,EAAAA,aAAW,WAQjBC,GAAS,IAAD,IAPpBgB,YAAAA,OAOoB,MAPN,MAOM,EANpBpB,EAMoB,EANpBA,KACAsB,EAKoB,EALpBA,WACAD,EAIoB,EAJpBA,WACAZ,EAGoB,EAHpBA,UAGoB,KAFpBb,SAEoB,EADpBiC,UAAAA,OACoB,MADX,KACW,EAAjBxC,GAAiB,YACdmC,EAAUJ,EAChB,OACE,QAACI,GAAD,UACMnC,EADN,CAEEe,IAAKA,EACLK,UAAWS,IAAWT,EAAW,gBAAiB,CAAE,cAAea,GAAc,CAAE,eAAgBD,IACnGvB,IAAG,IAMFE,EA/IgB,SAACZ,EAAOqB,EAAWoB,GAAc,IAAD,MACrD,MAAgD,SAA3CzC,SAAA,UAAAA,EAAOC,aAAP,mBAAcO,gBAAd,mBAAwBP,aAAxB,eAA+BC,UAC3B,QAACG,EAAD,CAAWC,MAAON,EAAOqB,UAAWS,IAAWT,EAAD,qCAAiDoB,MAEjG,QAAC9B,EAAD,CAAOC,KAAMZ,EAAOqB,UAAWS,IAAWT,EAAD,qCAAiDoB,IAClG,CA0IaC,CAAe9B,EAAMS,EAAWoB,GAAY,KAGzD,IAxBD,+DA0BME,GAAgB5B,EAAAA,EAAAA,aAAW,WAA0BC,GAAS,IAAhCK,EAA+B,EAA/BA,UAAcpB,GAAiB,YACjE,OACE,yBACMA,EADN,CAEEe,IAAKA,EACLK,UAAWS,IAAWT,EAAW,oCACjCX,IAAG,IAIR,IAVD,+DAYMkC,GAAmB7B,EAAAA,EAAAA,aAAW,WAAkCC,GAAS,IAAxCK,EAAuC,EAAvCA,UAAuC,IAA7BwB,MAAAA,OAA6B,MAAvB,EAAuB,EAAjB5C,GAAiB,YAC5E,OACE,yBACMA,EADN,CAEEe,IAAKA,EACLK,UAAWS,IAAWT,EAAW,mCAAmC,CAAC,QAAmB,IAATwB,IAC/EnC,IAAG,IAIR,IAEK8B,EAAQ,SAAC,GAAD,IAAGhC,EAAH,EAAGA,SAAH,OAAkB,gBAAMa,UAAU,2BAA2Bb,EAA7D,EAERsC,GAAgB/B,EAAAA,EAAAA,aAAW,WASnBC,GACR,IAAD,MATHgB,YAAAA,OASG,MATW,MASX,MARHC,WAAAA,OAQG,aAPHC,WAAAA,OAOG,SANHb,EAMG,EANHA,UACAb,EAKG,EALHA,SACAI,EAIG,EAJHA,KAIG,IAHHmC,YAAAA,OAGG,SAFHZ,EAEG,EAFHA,MACGlC,GACA,YACGmC,EAAUJ,EAChB,OACE,QAACI,GAAD,UACMnC,EADN,CAEEe,IAAKA,EACLqB,MAAOF,SAAF,UAAEA,EAAOlC,aAAT,aAAE,EAAcO,SACrB,gBAAe0B,EACfc,WAAW,EACXC,SAAS,IACTC,UAAW,SAACC,GAQmB,IAAD,GAPf,eAARA,EAAEC,MACS,cAAXnD,EAAMoD,IACR7B,SAAS8B,eAAe,mBAAmBC,QAE5CJ,EAAEK,OAAOC,oBAAsBN,EAAEK,OAAOC,mBAAmBF,SAElD,cAARJ,EAAEC,OACW,cAAXnD,EAAMoD,GACL,UAAA7B,SAAS8B,eAAe,kBAAxB,SAAoCC,QAEpCJ,EAAEK,OAAOE,wBAA0BP,EAAEK,OAAOE,uBAAuBH,SAG5D,cAARJ,EAAEC,MACKD,EAAEQ,iBACPZ,GACD9C,aAAA,EAAAA,EAAO2D,gBAAgB3D,SAAAA,EAAO2D,aAAa,CAACf,MAAM5C,EAAM4C,MAAMgB,QAAO,EAAKR,GAAGpD,EAAMoD,MAEnFF,EAAEK,OAAOC,oBAAsBN,EAAEK,OAAOC,mBAAmBF,SAGpD,YAARJ,EAAEC,OAEHnD,aAAA,EAAAA,EAAO2D,gBAAgB3D,SAAAA,EAAO2D,aAAa,CAACC,QAAO,EAAMR,GAAGpD,EAAMoD,MAClEF,EAAEK,OAAOE,wBAA0BP,EAAEK,OAAOE,uBAAuBH,QAExE,EACDjB,SAAUL,EACVZ,UAAWS,IAAWT,EAAW,qBAAsB,CAAE,cAAea,GAAc,CAAE,cAAeD,MACtGrB,GAAO,QAAC2B,EAAD,CAAa3B,KAAMA,EAAMsB,WAAYA,EAAYD,WAAYA,IAA6B,KACjGE,GAAQ,QAACK,EAAD,SAASL,EAAT,KAA0B,KAClC3B,EAGN,IAEKsD,GAAU/C,EAAAA,EAAAA,aAAW,WAAmEC,GAAS,IAAD,IAAxEgB,YAAAA,OAAwE,MAA1D,MAA0D,EAAnD+B,EAAmD,EAAnDA,SAAU1C,EAAyC,EAAzCA,UAAWb,EAA8B,EAA9BA,SAAaP,GAAiB,YAC9FmC,EAAUJ,EAChB,OACE,QAACI,GAAD,UACMnC,EADN,CAEEe,IAAKA,EACLgD,OAAQD,EACR1C,UAAWS,IAAWT,KACrBb,EAGN,IAXD,wSAaMyD,EAAY,SAAC,GAMZ,IAAD,IALJC,MAAAA,OAKI,MALE,QAKF,MAJJjD,YAAAA,OAII,MAJQ,aAIR,EAHJI,EAGI,EAHJA,UAGI,IAFJ8C,aAAAA,OAEI,MAFW,GAEX,EADDlE,GACC,YAEGmE,GAAQC,EAAAA,EAAAA,UAAS,IAAxB,GACMC,GAAuBC,EAAAA,EAAAA,QAAO,MACnC,GAA0CF,EAAAA,EAAAA,UAAS,CAClDG,IAAK,IADCC,EAAP,KAAsBC,EAAtB,KAOGC,EAHaC,OAAOC,KAAK5E,GACI6E,QAAO,SAAC1B,GAAD,OAASA,EAAI2B,WAAW,UAAxB,IAAoCC,KAAI,SAAAC,GAAI,OAAEA,CAAF,IAElDD,KAAI,SAACE,EAAGrC,GAAW,IAAD,IAClD,MAAO,CACLsC,SAASlF,SAAA,UAAAA,EAAK,UAAa4C,UAAlB,mBAA4B5C,aAA5B,eAAmCO,YAAYP,aAA/C,EAA+CA,EAAK,SAC7DmF,SAASnF,aAAA,EAAAA,EAAK,UAAa4C,MAAa5C,aAA/B,EAA+BA,EAAK,SAC7CK,OAAOL,aAAA,EAAAA,EAAK,QAAW4C,MAAY5C,aAA5B,EAA4BA,EAAK,OAE3C,IAEKoF,EAA+B,SAACxC,QAA8B,IAA9BA,IAAAA,EAAQ4B,EAAcD,KAC1D,IAAMpF,EAAcgF,EAAKU,QAAO,SAACN,GAAD,OAASA,aAAT,EAASA,EAAKnF,OAAd,IAAuBwD,GACvD3D,EAAkBoF,EAAsBlF,EACzC,EAEKkG,EAAiB,SAACzC,GACtB6B,EAAiB,CACfF,IAAK3B,IAEPwC,EAA6BxC,EAC9B,EAGD,OACE,mBACExB,UAAWS,IAAWT,EAAD,uBAAmC6C,GACxDxD,IAAG,IAQH,eACEA,KAAKA,EAAAA,EAAAA,IAAF,WACwB,aAAhBO,EAA6B,cAAe,GADpD,uCAGoCsE,EAAAA,GAHpC,mEAOsCC,EAAAA,GAPtC,kCAaH,eACE9E,KAAKA,EAAAA,EAAAA,IAAF,WAC0B,aAAhBO,EAA6B,OAAQ,QAD/C,gFAI6B,aAAhBA,EAA6B,4CAA8C,GAJxF,UAKwB,aAAhBA,EAA6BwE,EAAAA,GAAuB,cAAgB,UAL5E,uCAOmCD,EAAAA,GAPnC,iEAYuCD,EAAAA,GAZvC,YAaSG,EAAAA,EAAAA,IAAc,GAbvB,qBAiBH,eAAKhF,KAAKA,EAAAA,EAAAA,KAAMiE,aAAA,EAAAA,EAAWgB,QAAS,EAAI,uCAAyC,GAAzE,UACLhB,aAAA,EAAAA,EAAWgB,QAAS,GACnB,QAAC7E,EAAD,CACEG,YAAaA,EACbE,SAAS,EACTG,aAAc+D,GAGbV,EAAUK,KAAI,SAACY,EAAM/C,GACpB,IAAM7B,GAAM6E,EAAAA,EAAAA,aACZzB,EAAK0B,KAAK9E,GACV,IAAMkB,EAAauC,EAAcD,MAAQ3B,EACzC,OACE,iCACA,QAACd,EAAD,CACEV,UAAW,UACX+B,IAAG,WAAaP,EAChBQ,GAAE,WAAaR,EACf7B,IAAKA,EACLkB,WAAYA,EACZ,0BAAyBW,EACzBI,SAAUJ,IAAS4B,EAAcD,IAAI,GAAG,EACxC,aAAYoB,EAAI,QAChB,gBAAe/C,IAAQ4B,EAAcD,IACrCrC,OAAO,iBAAIyD,EAAI,SACfhF,KAAMgF,EAAI,MACV1C,UAAW,SAACC,GACV,GAAc,cAAVA,EAAEC,KAAiC,UAAVD,EAAEC,IAAiB,CAEM,IAAD,EAArD,GADED,EAAEQ,iBACDgB,EAAUgB,SAAS9C,EAAM,GAAsB,KAAjBsB,EAC7B,UAAA3C,SAAS8B,eAAe,uBAAxB,SAAyCyC,aAAa,WAAW,GACjEvE,SAAS8B,eAAe,gBAAgBC,QAE1CJ,EAAE6C,cAAcC,aAAe9C,EAAE6C,cAAcC,YAAYA,YAAY1C,OACxE,CACa,YAAVJ,EAAEC,MACJD,EAAEQ,iBACFR,EAAE6C,cAAcE,iBAAmB/C,EAAE6C,cAAcE,gBAAgBA,gBAAgB3C,QAEtF,EACD4C,QAAS,WACPb,EAAezC,EAChB,EACDuD,QAAS,WACPd,EAAezC,EAChB,EAEDnC,KAAKA,EAAAA,EAAAA,IAAF,4CAGwB,aAAhBO,EACP,+FACA,4HALD,gFAOgC,aAAhBA,EAA6B,kBAAoB,OAPjE,yHAW8B,aAAhBA,EAA6B,qBAAuB,UAXlE,0eA+BoCnB,EA/BpC,wKAoCoC0F,EAAAA,GApCpC,wGAuCoCD,EAAAA,GAvCpC,qEA4CH,eACEnC,IAAG,iBAAmBP,EACtBxB,UAAU,gBACV2C,QAAS9B,EACTxB,KAAKA,EAAAA,EAAAA,IAAF,wSA5ZK,QA4ZL,yBAcFkF,EAAI,QAAcA,EAAI,QAAc,OAK5C,KACD,QAACjD,EAAD,CAAe3B,IAAKsD,IACF,KAAjBH,IACD,eACEzD,KAAKA,EAAAA,EAAAA,IAAF,sSAOoCZ,EAPpC,mOAaoCyF,EAAAA,GAbpC,qEAkBH,gBACE7E,KAAKA,EAAAA,EAAAA,IAAF,+KAMoCZ,EANpC,yGAUoC0F,EAAAA,GAVpC,4EAeH,aACEa,KAAMlC,EACNlB,UAAW,EACXI,GAAG,eACH3C,IAAG,EAOH8C,OAAQ,SACR8C,IAAI,aACJpD,UAAW,SAACC,GACC,YAARA,EAAEC,MACHD,EAAEQ,iBACF2B,GAAeX,aAAA,EAAAA,EAAWgB,QAAO,GACjCnE,SAAS8B,eAAT,aAAmCqB,aAAA,EAAAA,EAAWgB,QAAO,IAAKpC,QAE7D,EACDgD,OAAQ,WACN/E,SAAS8B,eAAe,gBAAgByC,aAAa,YAAY,EAClE,GAtBH,oBA8BJ,OAELpB,aAAA,EAAAA,EAAWgB,QAAS,EACnBhB,EAAUK,KAAI,SAACY,EAAM/C,GACnB,IAAMkB,EAAWU,EAAcD,MAAQ3B,EACjC2D,EAAcZ,EAAI,QAExB,OADAY,EAAYvG,MAAZ,OAAwBuG,EAAYvG,OAApC,IAA0C4C,MAAM4B,EAAcD,OAE5D,QAACV,EAAD,CACEV,IAAG,WAAaP,EAChBQ,GAAE,UAAYR,EACdxB,UAAW,UACX0C,UAAWA,EACXrD,KAAKA,EAAAA,EAAAA,IAAF,yJAKoCZ,EALpC,+CAOc4F,EAAAA,EAAAA,IAAc,GAP5B,qDAUuCF,EAAAA,GAVvC,gBAWcE,EAAAA,EAAAA,IAAc,KAX5B,qDAcuCH,EAAAA,GAdvC,gBAecG,EAAAA,EAAAA,IAAc,KAf5B,2EAqBDc,EAGP,IACD,OAKX,C","sources":["webpack://analytics-2.0-apis/./node_modules/@adobe/gatsby-theme-aio/src/components/Tabs/index.js"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { useEffect, useState, useRef, createRef, forwardRef, cloneElement } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/react';\n// import nextId from 'react-id-generator';\nimport '@spectrum-css/tabs';\n\nimport { cloneChildren, DESKTOP_SCREEN_WIDTH, MOBILE_SCREEN_WIDTH, TABLET_SCREEN_WIDTH, layoutColumns } from '../../utils';\n\nconst positionIndicator = (indicator, selectedTab) => {\n  indicator.current.style.transform = `translate(${selectedTab.current.offsetLeft}px, 0px)`;\n  indicator.current.style.width = `${selectedTab.current.offsetWidth}px`;\n};\n\nconst animateIndicator = (indicator, animate) => {\n  indicator.current.style.transition = animate ? '' : 'none';\n};\n\nconst setTabItemIcon = (child, className, iconSize) => {\n  if ( child?.props?.children?.props?.mdxType === 'img') {\n    return <IconImage image={child} className={classNames(className, `spectrum-Icon--spectrum-icon-size-${iconSize}`)}/>;\n  }\n  return <Icons icon={child} className={classNames(className, `spectrum-Icon--spectrum-icon-size-${iconSize}`)}/>;\n};\n\nconst mobileMinWidth = '480px';\nconst MAX_MOBILE_SCREEN_WIDTH = '767px';\n\nconst setImageLoading = (child) => {\n  if (child?.props?.mdxType === 'img') {\n    return cloneElement(child, {\n      loading: 'eager'\n    });\n  }\n  return child;\n};\n\nconst IconImage = ({ image = '', styles=''}) => {\n  return (image\n    ? cloneElement(image, {\n        children: cloneChildren(image.props.children, setImageLoading),\n        css: css`\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 100%;\n          width: 100%;\n          margin-top: var(--spectrum-global-dimension-size-0);\n\n          img {\n            display: block;\n            object-fit: contain;\n          }\n          ${styles}\n        `,\n      })\n    : null);\n  }\n\nconst Icons = ({ icon, styles }) => {\n  return(\n    icon\n      ? cloneElement(icon, {\n        alt:'',\n        css: css`\n          height: var(--spectrum-global-dimension-size-600);\n          width: var(--spectrum-global-dimension-size-600);\n          margin-top: var(--spectrum-global-dimension-size-0);\n\n          img {\n            display: block;\n            object-fit: contain;\n          }\n          ${styles}\n        `\n      })\n      : null\n  )\n}\n\nconst Tabs = forwardRef(({\n  orientation='horizontal',\n  density='regular',\n  isQuiet = true,\n  isHeader = false,\n  children,\n  className,\n  onFontsReady,\n  ...props },\n  ref) => {\n\n  useEffect(() => {\n    // Font affects positioning of the Tab indicator\n    document.fonts.ready.then(() => {\n      onFontsReady && onFontsReady();\n    });\n  }, [onFontsReady]);\n\n  return (\n\n    <div\n      ref={ref}\n      {...props}\n      role={!isHeader ? 'tablist' : undefined}\n      aria-orientation={!isHeader ? 'orientation' : undefined}\n      className={classNames(className, 'spectrum-Tabs', 'spectrum-Tabs--sizeM', `spectrum-Tabs--${orientation}`, { 'spectrum-Tabs--quiet' : isQuiet }, { 'spectrum-Tabs--compact': density === 'compact' })}\n    >\n      {children}\n    </div>\n  );\n});\n\nconst Item = forwardRef(({\n  elementType = 'div',\n    isDisabled=false,\n  isSelected=false,\n  className,\n  children,\n  icon,\n  label,\n  ...props }, ref\n) => {\n  const Element = elementType;\n  // const id = nextId();\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      role='tab'\n      title={label?.props?.children}\n      aria-selected={isSelected}\n      disabled={isDisabled}\n      className={classNames(className, 'spectrum-Tabs-item', { 'is-selected': isSelected }, { 'is-disabled': isDisabled })}>\n      {icon ? <TabItemIcon icon={icon} isSelected={isSelected} isDisabled={isDisabled}></TabItemIcon> : null }\n      {label ? <Label> {label} </Label>: null}\n      {children}\n    </Element>\n  );\n});\n\nconst TabItemIcon = forwardRef(({\n  elementType = 'div',\n  icon,\n  isSelected,\n  isDisabled,\n  className,\n  children,\n  iconSize='xl',\n  ...props }, ref) => {\n  const Element = elementType;\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      className={classNames(className, 'spectrum-Icon', { 'is-selected': isSelected }, { 'is-disabled ': isDisabled })}\n      css={css`\n        height: var(--spectrum-global-dimension-size-600);\n        width: var(--spectrum-global-dimension-size-550);\n        z-index: 1;\n      `}\n      >\n      {icon ? setTabItemIcon(icon, className, iconSize) : null}\n    </Element>\n  );\n});\n\nconst TabsIndicator = forwardRef(({ className, ...props }, ref) => {\n  return (\n    <div\n      {...props}\n      ref={ref}\n      className={classNames(className, 'spectrum-Tabs-selectionIndicator')}\n      css={css`\n      transition-property: transform, width;\n    `}></div>\n  );\n});\n\nconst CodeTabIndicator = forwardRef(({ className,index=0, ...props }, ref) => {\n  return (\n    <div\n      {...props}\n      ref={ref}\n      className={classNames(className, 'spectrum-Tabs-selectionIndicator',{\"default\":index ===0})}\n      css={css`\n      transition-property: transform, width;\n    `}></div>\n  );\n});\n\nconst Label = ({ children }) => <span className='spectrum-Tabs-itemLabel'>{children}</span>;\n\nconst HeaderTabItem = forwardRef(({\n  elementType = 'div',\n  isDisabled=false,\n  isSelected=false,\n  className,\n  children,\n  icon,\n  hasDropdown=false,\n  label,\n  ...props }, ref\n) => {\n  const Element = elementType;\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      title={label?.props?.children}\n      aria-selected={isSelected}\n      autofocus={true}\n      tabIndex=\"0\"\n      onKeyDown={(e)=>{\n          if(e.key===\"ArrowRight\"){\n          if(props.id===\"tabindex5\"){\n           document.getElementById(\"getCredentialID\").focus();\n          }\n          e.target.nextElementSibling && e.target.nextElementSibling.focus();\n        }\n        if(e.key===\"ArrowLeft\"){\n          if(props.id===\"tabindex0\"){\n              document.getElementById(\"product\")?.focus();\n            }else{\n              e.target.previousElementSibling && e.target.previousElementSibling.focus();\n            }\n          }\n          if(e.key===\"ArrowDown\"){\n                    e.preventDefault();\n            if(hasDropdown){\n              props?.openDropDown && props?.openDropDown({index:props.index,isOpen:true,id:props.id});\n            }else{\n              e.target.nextElementSibling && e.target.nextElementSibling.focus();\n            }\n          }\n          if(e.key===\"ArrowUp\"){\n\n            props?.openDropDown && props?.openDropDown({isOpen:false,id:props.id});\n            e.target.previousElementSibling && e.target.previousElementSibling.focus();\n          }\n      }}\n      disabled={isDisabled}\n      className={classNames(className, 'spectrum-Tabs-item', { 'is-selected': isSelected }, { 'is-disabled': isDisabled })}>\n      {icon ? <TabItemIcon icon={icon} isSelected={isSelected} isDisabled={isDisabled}></TabItemIcon> : null }\n      {label ? <Label> {label} </Label>: null}\n      {children}\n    </Element>\n  );\n});\n\nconst TabView = forwardRef(({ elementType = 'div', isHidden, className, children, ...props }, ref) => {\n  const Element = elementType;\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      hidden={isHidden}\n      className={classNames(className)}>\n      {children}\n    </Element>\n  );\n});\n\nconst TabsBlock = ({\n  theme='light',\n  orientation='horizontal',\n  className,\n  APIReference = \"\",\n  ...props\n}) => {\n\n  const [tabs] = useState([]);\n  const selectedTabIndicator = useRef(null);\n   const [selectedIndex, setSelectedIndex] = useState({\n    tab: 0\n  });\n\n  const propKeys = Object.keys(props);\n  let filteredMenuProps = propKeys.filter((key) => key.startsWith('heading')).map(menu=>menu);\n\n  let menuItems = filteredMenuProps.map((_, index) => {\n    return {\n      heading: props?.[`heading${index}`]?.props?.children || props?.[`heading`],\n      content: props?.[`content${index}`] ||  props?.[`content`],\n      image: props?.[`image${index}`] || props?.[`image`]\n    };\n  });\n\n  const positionSelectedTabIndicator = (index = selectedIndex.tab) => {\n    const selectedTab = tabs.filter((tab) => tab?.current)[index];\n    positionIndicator(selectedTabIndicator, selectedTab);\n  };\n\n  const handleOnChange = (index) => {\n    setSelectedIndex({\n      tab: index,\n    });\n    positionSelectedTabIndicator(index);\n  };\n\n\n  return (\n    <section\n      className={classNames(className, `tabsBlock spectrum--${theme}`)}\n      css={css`\n        background: var(--spectrum-global-color-gray-100);\n        max-width: 100%;\n        overflow-x:hidden !important;\n        margin: 0;\n        padding-bottom: var(--spectrum-global-dimension-size-250);\n      `}\n      >\n      <div\n        css={css`\n        display: ${orientation === 'vertical' ? 'inline-flex': ''};\n\n          @media only screen and (min-width: ${TABLET_SCREEN_WIDTH}) {\n            margin: 0 auto !important\n          }\n\n          @media screen and (max-device-width: ${MOBILE_SCREEN_WIDTH}) {\n            flex-direction: column;\n            // width:100%;\n          }\n        `}\n      >\n        <div\n          css={css`\n            display: ${orientation === 'vertical' ? 'grid': 'block'};\n            position: relative;\n            grid-template-columns: 300px calc(100% - 300px);\n            margin-top: ${orientation === 'vertical' ? 'var(--spectrum-global-dimension-size-300)' : ''};\n            width: ${orientation === 'vertical' ? DESKTOP_SCREEN_WIDTH + ' !important' : 'inherit'};\n           \n           @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              // display: initial !important;\n              width: 100% !important;\n            }\n            \n            @media only screen and (device-width: ${TABLET_SCREEN_WIDTH}) {\n              width:${layoutColumns(8)} !important;\n            }\n\n          `}>\n          <div css={css`${menuItems?.length > 6 ? 'overflow-x:auto; overflow-y: hidden;' : ''}`}>\n            {menuItems?.length > 0 ? (\n              <Tabs\n                orientation={orientation}\n                isQuiet={true}\n                onFontsReady={positionSelectedTabIndicator}\n              >\n\n                {menuItems.map((data, index) => {\n                  const ref = createRef();\n                  tabs.push(ref);\n                  const isSelected = selectedIndex.tab === index;\n                  return (\n                    <>\n                    <Item\n                      className={'tabItem'}\n                      key={`tabItem_${index}`}\n                      id={`tabItem_${index}`}\n                      ref={ref}\n                      isSelected={isSelected}\n                      aria-controls={`tabView${index}`}\n                      tabIndex={index=== selectedIndex.tab?0:-1}\n                      aria-label={data['heading']}\n                      aria-selected={index===selectedIndex.tab}\n                      label={<b>{data['heading']}</b>}\n                      icon={data['image']}\n                      onKeyDown={(e) => {\n                        if (e.key === 'ArrowDown' || e.key === 'Enter') {\n                          e.preventDefault();\n                        if(menuItems.length===index+1 && APIReference !== \"\"){\n                            document.getElementById(\"apiReference\")?.setAttribute(\"tabIndex\",0);\n                            document.getElementById(\"apiReference\").focus();\n                          }\n                          e.currentTarget.nextSibling && e.currentTarget.nextSibling.nextSibling.focus();\n                        }\n                        if (e.key === 'ArrowUp') {\n                          e.preventDefault();\n                          e.currentTarget.previousSibling && e.currentTarget.previousSibling.previousSibling.focus();\n                        }\n                      }}\n                      onFocus={() => {\n                        handleOnChange(index);\n                      }}\n                      onClick={() => {\n                        handleOnChange(index);\n                      }}\n\n                      css={css`\n                        text-align: left;\n                        white-space: normal;\n                        width: ${orientation === 'vertical'\n                        ? 'calc(var(--spectrum-global-dimension-size-2000) + var(--spectrum-global-dimension-size-600))'\n                        : 'calc(var(--spectrum-global-dimension-static-grid-fixed-max-width) / var(--spectrum-global-dimension-static-grid-columns))'} !important;\n                        font-size: var(--spectrum-global-dimension-size-200);\n                        margin-bottom: ${orientation === 'vertical' ? '1rem !important' : '0rem'};\n                        display: flex !important;\n                        padding: var(--spectrum-global-dimension-size-125) !important;\n                        height: auto !important;\n                        line-height: ${orientation === 'vertical' ? 'initial !important' : 'initial'};\n                        .spectrum-Tabs-itemLabel{\n                          margin-top:5px;\n                          margin-bottom:5px;\n                        }\n                        .spectrum-Icon{\n                          background-size: var(--spectrum-global-dimension-size-225) var(--spectrum-global-dimension-size-275);\n                          width: var(--spectrum-global-dimension-size-500);\n                          height: var(--spectrum-global-dimension-size-400);\n                        }\n\n                        &.is-disabled {\n                          pointer-events:none;\n                        }\n                        &::before {\n                          left: var(--spectrum-global-dimension-size-0) !important;\n                          right: var(--spectrum-global-dimension-size-0) !important;\n                          border:none !important;\n                        }\n\n                        @media only screen and (max-width: ${mobileMinWidth}) {\n                          margin-top:var(--spectrum-global-dimension-size-25) !important;\n                          margin-bottom:var(--spectrum-global-dimension-size-25) !important;\n                        }\n\n                        @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                          padding-left: var(--spectrum-global-dimension-size-0) !important;\n                        }\n                        @media only screen and (min-width: ${TABLET_SCREEN_WIDTH}) {\n                          left: var(--spectrum-global-dimension-size-250) !important;\n                        }\n                      `}\n                    >\n                      <div\n                        key={`mobileTabView_${index}`}\n                        className=\"mobileTabView\"\n                        hidden={!isSelected}\n                        css={css`\n                          display: none;\n                          padding: var(--spectrum-global-dimension-size-0) !important;\n                          h3 {\n                            font-size:var(--spectrum-heading-s-text-size, var(--spectrum-alias-heading-s-text-size));\n                          }\n                          p {\n                            font-size: var(--spectrum-body-s-text-size, var(--spectrum-global-dimension-font-size-150))\n                          }\n                          @media only screen and (max-width: ${MAX_MOBILE_SCREEN_WIDTH}) {\n                            display: block;\n                          }\n                        `}\n                      >\n                        {data['content'] ? data['content'] : null}\n                      </div>\n                  </Item>\n                    </>\n                  )\n                })}\n                <TabsIndicator ref={selectedTabIndicator} />\n                {APIReference !== \"\" && (\n                <div\n                  css={css`\n                    text-align: left;\n                    white-space: normal;\n                    width: calc(var(--spectrum-global-dimension-size-2500) + var(--spectrum-global-dimension-size-750)) !important;\n                    font-size: var(--spectrum-global-dimension-size-200);\n                    padding: var(--spectrum-global-dimension-size-125) !important;\n\n                    @media only screen and (max-width: ${mobileMinWidth}) {\n                      left: var(--spectrum-global-dimension-size-100) !important;\n                      margin-top: var(--spectrum-global-dimension-size-125) !important;\n                      margin-bottom: var(--spectrum-global-dimension-size-125) !important;\n                    }\n\n                    @media only screen and (min-width: ${TABLET_SCREEN_WIDTH}) {\n                      left: var(--spectrum-global-dimension-size-250) !important;\n                    }\n                  `}\n                >\n                  <span\n                    css={css`\n                      text-align: left;\n                      cursor: pointer;\n                      margin-top: var(--spectrum-global-dimension-size-85);\n                      margin-left: var(--spectrum-global-dimension-size-400);\n\n                      @media only screen and (max-width: ${mobileMinWidth}) {\n                        margin-left: var(--spectrum-global-dimension-size-100) !important;;\n                      }\n\n                      @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                        margin-left: var(--spectrum-global-dimension-size-100) !important;;\n                      }\n                    `}\n                  >\n                    <a\n                      href={APIReference}\n                      tabIndex={-1}\n                      id=\"apiReference\"\n                      css={css`\n                        color: #4b9cf5;\n                         &:focus {\n                           text-decoration:underline;\n                           border-bottom: 1px solid #1374e6;\n                         }\n                      `}\n                      target={\"_blank\"}\n                      rel=\"noreferrer\"\n                      onKeyDown={(e) => {\n                        if(e.key===\"ArrowUp\"){\n                          e.preventDefault();\n                          handleOnChange(menuItems?.length-1);\n                          document.getElementById(`tabItem_${menuItems?.length-1}`).focus()\n                        }\n                      }}\n                      onBlur={()=>{\n                        document.getElementById(\"apiReference\").setAttribute(\"tabIndex\",-1);\n                      }}\n                    >\n                      API Reference\n                    </a>\n                  </span>\n                </div>\n              )}\n              </Tabs>\n            ) : null}\n          </div>\n          {menuItems?.length > 0 ?\n            menuItems.map((data, index) => {\n              const isHidden = selectedIndex.tab === index;\n              const contentData = data['content'];\n              contentData.props = {...contentData.props,index:selectedIndex.tab}\n              return(\n                <TabView\n                  key={`tabView_${index}`}\n                  id={`tabView${index}`}\n                  className={'tabView'}\n                  isHidden={!isHidden}\n                  css={css`\n                    text-align: left;\n                    padding: 0px 0 var(--spectrum-global-dimension-size-100) 10px !important;\n                    overflow-x: hidden !important;\n\n                    @media only screen and (max-width: ${mobileMinWidth}) {\n                      padding-left: inherit !important;\n                      max-width: ${layoutColumns(3)} !important;\n                    }\n\n                    @media only screen and (device-width: ${MOBILE_SCREEN_WIDTH}) {\n                      max-width: ${layoutColumns(3.5)} !important;\n                    }\n\n                    @media only screen and (device-width: ${TABLET_SCREEN_WIDTH}) {\n                      max-width: ${layoutColumns(6.5)} !important;\n                      padding-left:var(--spectrum-global-dimension-size-500);\n                    }\n\n                  `}\n                >\n                  { contentData }\n                </TabView>\n              )\n            })\n          : null}\n        </div>\n      </div>\n    </section>\n  )\n}\n\n\nTabs.propTypes = {\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  density: PropTypes.oneOf(['regular', 'compact']),\n  isQuiet: PropTypes.boolean,\n  className: PropTypes.string,\n};\n\nItem.propTypes = {\n  isSelected: PropTypes.boolean,\n  isDisabled: PropTypes.boolean,\n  className: PropTypes.string,\n  icon: PropTypes.element,\n  label: PropTypes.object\n};\n\nTabItemIcon.propTypes = {\n  elementType: PropTypes.string,\n  icon: PropTypes.element,\n  isSelected: PropTypes.boolean,\n  isDisabled: PropTypes.boolean,\n  iconSize: PropTypes.string,\n  className: PropTypes.string\n};\n\nTabView.propTypes = {\n  isHidden: PropTypes.boolean,\n  className: PropTypes.string\n};\n\nTabsBlock.propTypes = {\n  theme: PropTypes.oneOf(['light', 'dark', 'lightest']),\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  heading: PropTypes.string,\n  content: PropTypes.string,\n  image: PropTypes.string,\n  className: PropTypes.string,\n  APIReference: PropTypes.string,\n};\n\n\nexport { Tabs, Item, TabView, TabItemIcon, Label, TabsIndicator, positionIndicator, animateIndicator,CodeTabIndicator, TabsBlock,HeaderTabItem };\n"],"names":["positionIndicator","indicator","selectedTab","current","style","transform","offsetLeft","width","offsetWidth","animateIndicator","animate","transition","mobileMinWidth","setImageLoading","child","props","mdxType","cloneElement","loading","IconImage","image","styles","children","cloneChildren","css","Icons","icon","alt","Tabs","forwardRef","ref","orientation","density","isQuiet","isHeader","className","onFontsReady","useEffect","document","fonts","ready","then","role","undefined","classNames","Item","elementType","isDisabled","isSelected","label","Element","title","disabled","TabItemIcon","Label","iconSize","setTabItemIcon","TabsIndicator","CodeTabIndicator","index","HeaderTabItem","hasDropdown","autofocus","tabIndex","onKeyDown","e","key","id","getElementById","focus","target","nextElementSibling","previousElementSibling","preventDefault","openDropDown","isOpen","TabView","isHidden","hidden","TabsBlock","theme","APIReference","tabs","useState","selectedTabIndicator","useRef","tab","selectedIndex","setSelectedIndex","menuItems","Object","keys","filter","startsWith","map","menu","_","heading","content","positionSelectedTabIndicator","handleOnChange","TABLET_SCREEN_WIDTH","MOBILE_SCREEN_WIDTH","DESKTOP_SCREEN_WIDTH","layoutColumns","length","data","createRef","push","setAttribute","currentTarget","nextSibling","previousSibling","onFocus","onClick","href","rel","onBlur","contentData"],"sourceRoot":""}