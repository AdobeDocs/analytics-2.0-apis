{"version":3,"file":"component---src-pages-guides-migration-md-71d55343cd8855c29656.js","mappings":"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","sources":["webpack://analytics-2.0-apis/./src/pages/guides/migration.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-2.0-apis/analytics-2.0-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"migrating-to-the-20-apis\"\n    }}>{`Migrating to the 2.0 APIs`}</h1>\n    <p>{`This guide is intended to help users of the 1.3 and 1.4 versions of the Analytics APIs migrate to the newer and more capable 2.0 APIs. By migrating to the 2.0 APIs, you can take advantage of the following features:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Faster response times with simpler and more efficient query methods, eliminating the need for polling`}</li>\n      <li parentName=\"ul\">{`Programmatic capability for queries and dynamic report updates`}</li>\n      <li parentName=\"ul\">{`More graceful error handling`}</li>\n      <li parentName=\"ul\">{`Flexible functioning to do to anything you can do in Analysis Workspace`}</li>\n      <li parentName=\"ul\">{`Consistency and matching of API calls to UI actions`}</li>\n      <li parentName=\"ul\">{`Access to all Attribution IQ models used in Analysis Workspace`}</li>\n      <li parentName=\"ul\">{`Access to all Anomaly Detection algorithms used in Analysis Workspace`}</li>\n      <li parentName=\"ul\">{`Ability to integrate with other Experience Cloud products`}</li>\n      <li parentName=\"ul\">{`Increased capacity for multiple breakdown reports`}</li>\n      <li parentName=\"ul\">{`Newest Analytics features availability`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"current-limitations\"\n    }}>{`Current limitations`}</h2>\n    <p>{`The 2.0 APIs currently do not support the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Data Sources`}</li>\n      <li parentName=\"ul\">{`Data Feeds`}</li>\n      <li parentName=\"ul\">{`Data Insertion`}</li>\n    </ul>\n    <p>{`If you rely upon these features, you can still use a hybrid approach of using the 1.4 APIs for the above features and 2.0 APIs for everything else.`}</p>\n    <h2 {...{\n      \"id\": \"how-the-20-apis-work\"\n    }}>{`How the 2.0 APIs work`}</h2>\n    <p>{`The 2.0 APIs introduce some fundamental changes in their operation from the 1.4 APIs.`}</p>\n    <h3 {...{\n      \"id\": \"http-methods\"\n    }}>{`HTTP methods`}</h3>\n    <p>{`The 2.0 APIs use standard HTTP methods for retrieving resources (`}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{`), creating child resources (`}<inlineCode parentName=\"p\">{`POST`}</inlineCode>{`), creating or replacing resources (`}<inlineCode parentName=\"p\">{`PUT`}</inlineCode>{`), updating (parts of) a resource (`}<inlineCode parentName=\"p\">{`PATCH`}</inlineCode>{`) or deleting a resource (`}<inlineCode parentName=\"p\">{`DELETE`}</inlineCode>{`).`}</p>\n    <p>{`The 1.4 APIs only use the HTTP `}<inlineCode parentName=\"p\">{`POST`}</inlineCode>{` method for all of its operations, irrespective of its intent.`}</p>\n    <h3 {...{\n      \"id\": \"global-company-id\"\n    }}>{`Global Company Id`}</h3>\n    <p>{`All 2.0 API endpoints require the global company id of your Adobe Analytics company as part of the URL path. For example:`}</p>\n    <p><strong parentName=\"p\">{`GET`}</strong>{` `}<inlineCode parentName=\"p\">{`https://analytics.adobe.io/api/{GLOBAL_COMPANY_ID}/annotations`}</inlineCode></p>\n    <p>{`To retrieve the global company id for your Adobe Analytics company, in the Adobe Analytics UI:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Select `}<strong parentName=\"li\">{`Admin`}</strong>{` > `}<strong parentName=\"li\">{`All Admin`}</strong>{` from the top menu.`}</li>\n      <li parentName=\"ol\">{`Select `}<strong parentName=\"li\">{`Company settings home`}</strong>{` from the `}<strong parentName=\"li\">{`Company settings`}</strong>{` list.`}</li>\n      <li parentName=\"ol\">{`In the `}<strong parentName=\"li\">{`Company Settings`}</strong>{` page, select the `}<strong parentName=\"li\">{`API Access`}</strong>{` tab. `}<br />{`The global company id is displayed in `}<strong parentName=\"li\">{`bold`}</strong>{` at the top of the page.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"unique-paths\"\n    }}>{`Unique paths`}</h3>\n    <p>{`Every method in the 2.0 APIs has its own unique path. For example, to retrieve the names of dimensions and metrics in the 2.0 APIs, you use the following requests:`}</p>\n    <p><strong parentName=\"p\">{`GET`}</strong>{`  `}<inlineCode parentName=\"p\">{`https://analytics.adobe.io/api/{GLOBAL_COMPANY_ID}/dimensions?rsid={RSID}`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`GET`}</strong>{`  `}<inlineCode parentName=\"p\">{`https://analytics.adobe.io/api/{GLOBAL_COMPANY_ID}/metrics?rsid={RSID}`}</inlineCode></p>\n    <p>{`In the 1.4 APIs, methods are uniquely identified using the `}<inlineCode parentName=\"p\">{`method`}</inlineCode>{` request parameter, while most endpoints use the same path `}<inlineCode parentName=\"p\">{`/admin/1.4/rest/`}</inlineCode>{`. To retrieve names of dimensions and metrics in the 1.4 APIs, you use the following requests:`}</p>\n    <p><strong parentName=\"p\">{`POST`}</strong>{` `}<inlineCode parentName=\"p\">{`https://api.omniture.com/admin/1.4/rest/?method=Report.GetElements`}</inlineCode>{` (for dimensions)`}</p>\n    <p><strong parentName=\"p\">{`POST`}</strong>{` `}<inlineCode parentName=\"p\">{`https://api.omniture.com/admin/1.4/rest/?method=Report.GetMetrics`}</inlineCode>{` (for metrics)`}</p>\n    <h2 {...{\n      \"id\": \"metrics-and-dimensions\"\n    }}>{`Metrics and dimensions`}</h2>\n    <p>{`For 2.0 APIs, metrics and dimension are named slightly different. Similarly, the query for individual or the full list of available metrics and dimensions is different. Aside from the difference in endpoints (see `}<a parentName=\"p\" {...{\n        \"href\": \"#how-the-20-apis-work\"\n      }}>{`How the 2.0 API's work`}</a>{`), the information returned is different.`}</p>\n    <p>{`In the 1.4 APIs, using`}</p>\n    <p><strong parentName=\"p\">{`POST`}</strong>{` `}<inlineCode parentName=\"p\">{`https://api.omniture.com/admin/1.4/rest/?method=Report.GetElements`}</inlineCode>{` with a JSON body specifying at least the report suite, returns the following information for the `}<inlineCode parentName=\"p\">{`browser`}</inlineCode>{` dimension:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"correlation\": true,\n    \"id\": \"browser\",\n    \"name\": \"Browser\",\n    \"subrelation\": true\n}\n`}</code></pre>\n    <p>{`In the 2.0 APIs, using`}</p>\n    <p><strong parentName=\"p\">{`GET`}</strong>{` `}<inlineCode parentName=\"p\">{`https://analytics.adobe.io/api/{GLOBAL_COMPANY_ID}/dimensions?rsid={RSID}&expansion=allowedForReporting`}</inlineCode></p>\n    <p>{`returns the following detailed information for the `}<inlineCode parentName=\"p\">{`browser`}</inlineCode>{` dimension:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"allowedForReporting\": true,\n    \"category\": \"Audience\",\n    \"description\": \"Shows the name and version of the browser used to access the site. This can help you prioritize which browsers and browser versions you use when testing new features or versions of your site.\",\n    \"id\": \"variables/browser\",\n    \"multiValued\": false,\n    \"name\": \"Browser\",\n    \"pathable\": false,\n    \"reportable\": [\n        \"oberon\"\n    ],\n    \"segmentable\": true,\n    \"standardComponent\": true,\n    \"support\": [\n        \"oberon\",\n        \"dataWarehouse\"\n    ],\n    \"supportsDataGovernance\": true,\n    \"title\": \"Browser\",\n    \"type\": \"string\"\n}\n`}</code></pre>\n    <p>{`The 2.0 API also supports retrieval of a single dimension (`}<inlineCode parentName=\"p\">{`/dimension/{id}`}</inlineCode>{`) or metric (`}<inlineCode parentName=\"p\">{`/metric/{id}`}</inlineCode>{`).`}</p>\n    <p>{`The exampe `}<inlineCode parentName=\"p\">{`/dimensions`}</inlineCode>{` request shown above is using the `}<inlineCode parentName=\"p\">{`expansion=allowedForReporting`}</inlineCode>{` query parameter and value. Using `}<inlineCode parentName=\"p\">{`allowedForReporting`}</inlineCode>{` is highly recommended to query for dimensions and metrics that are allowed to report on using the 2.0 APIs (see `}<a parentName=\"p\" {...{\n        \"href\": \"#reports\"\n      }}>{`Reports`}</a>{`).`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"endpoints/dimensions/index.md\"\n      }}>{`Dimensions`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"endpoints/metrics/index.md\"\n      }}>{`Metrics`}</a>{` endpoint guides for more information.`}</p>\n    <h2 {...{\n      \"id\": \"reports\"\n    }}>{`Reports`}</h2>\n    <p>{`For the 2.0 APIs, the `}<inlineCode parentName=\"p\">{`reports`}</inlineCode>{` endpoint contains the biggest change. It utilizes the same underlying processing pipeline as the Analysis Workspace UI. Each API call matches an action in the UI, so you can test the functionality of an interaction in the UI first to plan your calls. The `}<inlineCode parentName=\"p\">{`/reports`}</inlineCode>{` endpoint is a simple REST GET call and no longer requires a queue/get workflow to retrieve data. This simplifies development and maintenance of API clients.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`/reports`}</inlineCode>{` end point is intended to run very small requests quickly. While 1.3/1.4 APIs handle requests that can require 1-2 days to process, the 2.0 APIs require many smaller requests put together in a series. The 1.3/1.4 APIs might include requests for data from a large time frame, lots of metrics at once, or many breakdowns. To migrate to the 2.0  `}<inlineCode parentName=\"p\">{`/reports`}</inlineCode>{` endpoint, you want to split these large requests into multiple simpler and quicker calls. Following this practice, results are provided much quicker and can be evaluated in a more timely manner. Multiple breakdowns are not requested automatically.`}</p>\n    <h2 {...{\n      \"id\": \"use-case-example\"\n    }}>{`Use case example`}</h2>\n    <p>{`To see how the migration affects your reports, consider the following example.`}</p>\n    <p>{`Example 1.4 request:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"reportDescription\": {\n        \"reportSuiteID\":\"exampleglobalprod\",\n        \"dateFrom\":\"2024-02-10\",\n        \"dateTo\":\"2024-02-20\",\n        \"granularity\":\"day\",\n        \"metrics\": [\n            {\"id\":\"pageviews\"},\n            {\"id\":\"visits\"},\n            {\"id\":\"visitors\"},\n        ],\n        \"elements\": [\n            {\"id\":\"campaign\", \"top\":10},\n            {\"id\":\"geocity\", \"top\":100},\n            {\"id\":\"page\",\"top\":100}\n        ]\n    }\n}\n`}</code></pre>\n    <p>{`This 1.4 report queries ten `}<inlineCode parentName=\"p\">{`campaign`}</inlineCode>{` items. For each of those, it queries 100 `}<inlineCode parentName=\"p\">{`geocity`}</inlineCode>{` items. Finally, for each city, it queries the top 100 `}<inlineCode parentName=\"p\">{`pages`}</inlineCode>{`. In addition, it tries to get three metrics for each of those items. Finally, it tries to do that for each day in the date range, which can span multiple years. This report has the potential to return 1,000,000 records or more.`}</p>\n    <h3 {...{\n      \"id\": \"changes-for-20-request\"\n    }}>{`Changes for 2.0 request`}</h3>\n    <p>{`Requests to the 2.0 `}<inlineCode parentName=\"p\">{`/reports`}</inlineCode>{` endpoint are smaller and made in sequence:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Request the top ten `}<inlineCode parentName=\"p\">{`campaign`}</inlineCode>{` values for the given time period.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{` {\n     \"rsid\": \"exampleglobalprod\",\n     \"globalFilters\": [\n         {\n             \"type\": \"dateRange\",\n             \"dateRange\": \"2024-02-10T00:00:00.000/2024-02-20T00:00:00.000\",\n             \"dateRangeId\": \"lastTenDays\"\n         }\n     ],\n     \"metricContainer\": {\n         \"metrics\": [\n             {\n                 \"columnId\": \"0\",\n                 \"id\": \"metrics/pageviews\"\n             },\n             {\n                 \"columnId\": \"1\",\n                 \"id\": \"metrics/visits\",\n                 \"sort\": \"desc\"\n             },\n             {\n                 \"columnId\": \"4\",\n                 \"id\": \"metrics/visitors\"\n             }\n         ]\n     },\n     \"dimension\": \"variables/campaign\",\n     \"settings\": {\n         \"countRepeatInstances\": true,\n         \"limit\": 10,\n         \"page\": 0\n     }\n }\n`}</code></pre>\n        <p parentName=\"li\">{`This results in a response, containing 10 rows of `}<inlineCode parentName=\"p\">{`campaign`}</inlineCode>{` data, each row looking like:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{` {\n     \"data\": [\n         2948.0,                             /* pageviews    */  \n         606.0,                              /* visits       */\n         254.0                               /* visitors     */\n     ],\n     \"itemId\": \"3484165051\",                 /* campaign id  */ \n     \"value\": \"BJ4T3D2C\"\n }\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`For each `}<inlineCode parentName=\"p\">{`campaign`}</inlineCode>{`, request a breakdown of the top 100 `}<inlineCode parentName=\"p\">{`geocity`}</inlineCode>{` values:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`{\n    \"rsid\": \"amc.exl.global.prod\",\n    \"globalFilters\": [\n        {\n            \"type\": \"dateRange\",\n            \"dateRange\": \"2024-02-10T00:00:00.000/2024-02-20T00:00:00.000\",\n            \"dateRangeId\": \"lastTenDays\"\n        }\n    ],\n    \"metricContainer\": {\n        \"metrics\": [\n            {\n                \"columnId\": \"0\",\n                \"id\": \"metrics/pageviews\",\n                \"filters\": [\n                    \"0\"\n                ]\n            },\n            {\n                \"columnId\": \"1\",\n                \"id\": \"metrics/visits\",\n                \"sort\": \"desc\",\n                \"filters\": [\n                    \"0\"\n                ]\n            },\n            {\n                \"columnId\": \"2\",\n                \"id\": \"metrics/visitors\",\n                \"filters\": [\n                    \"0\"\n                ]\n            }\n        ],\n        \"metricFilters\": [\n        {\n            \"id\":\"0\",\n            \"type\":\"breakdown\",                   /* breakdown  */ \n            \"dimension\":\"variables/campaign\",     /* a campaign */\n            \"itemId\": \"3484165051\"                /* using id   */\n        }\n        \n    ]\n    },\n    \"dimension\": \"variables/geocity\",             /* on geocity */\n    \"settings\": {\n        \"countRepeatInstances\": true,\n        \"limit\": 100,\n        \"page\": 0\n    }\n}\n`}</code></pre>\n        <p parentName=\"li\">{`This results in a response, containing 100 rows of `}<inlineCode parentName=\"p\">{`geocity`}</inlineCode>{` data, each row looking like:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{` {\n     \"data\": [\n         115.0,\n         16.0,\n          4.0\n     ],\n     \"itemId\": \"1280116081\",                       /* geocity id */\n     \"value\": \"Grand Rapids (Michigan, United States)\"\n }\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`For each `}<inlineCode parentName=\"p\">{`geocity`}</inlineCode>{`, request a breakdown of the top 100 `}<inlineCode parentName=\"p\">{`page`}</inlineCode>{` values.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{` {\n     \"rsid\": \"amc.exl.global.prod\",\n     \"globalFilters\": [\n         {\n             \"type\": \"dateRange\",\n             \"dateRange\": \"2024-02-10T00:00:00.000/2024-02-20T00:00:00.000\",\n             \"dateRangeId\": \"lastTenDays\"\n         }\n     ],\n     \"metricContainer\": {\n         \"metrics\": [\n             {\n                 \"columnId\": \"0\",\n                 \"id\": \"metrics/pageviews\",\n                 \"filters\": [\n                     \"0\"\n                 ]\n             },\n             {\n                 \"columnId\": \"1\",\n                 \"id\": \"metrics/visits\",\n                 \"sort\": \"desc\",\n                 \"filters\": [\n                     \"0\"\n                 ]\n             },\n             {\n                 \"columnId\": \"2\",\n                 \"id\": \"metrics/visitors\",\n                 \"filters\": [\n                     \"0\"\n                 ]\n             }\n         ],\n         \"metricFilters\": [\n             {\n                 \"id\":\"0\",\n                 \"type\":\"breakdown\",               /* breakdown  */\n                 \"dimension\":\"variables/geocity\",  /* a geocity  */\n                 \"itemId\": \"1280116081\"            /* using id   */\n             }    \n         ]\n     },\n     \"dimension\": \"variables/page\",                 /* on page   */\n     \"settings\": {\n         \"countRepeatInstances\": false,\n         \"limit\": 5,\n         \"page\": 0\n     }\n }\n`}</code></pre>\n        <p parentName=\"li\">{`This results in a response, containing 100 rows of `}<inlineCode parentName=\"p\">{`page`}</inlineCode>{` data, each row looking like:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`\n{\n     \"data\": [\n         14.0,\n         12.0,\n         9.0\n     ],\n     \"itemId\": \"2616484196\",\n     \"value\": \"home page\"\n }\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Request a separate report for each metric. This means that you go through steps 1-3 for `}<inlineCode parentName=\"p\">{`pageviews`}</inlineCode>{`, then again for `}<inlineCode parentName=\"p\">{`visits`}</inlineCode>{`, and so on.`}</p>\n      </li>\n    </ol>\n    <p>{`You can cache historical data as part of the client application. This means that you would only need to query the newest day's worth of data each day.`}</p>\n    <h3 {...{\n      \"id\": \"breakdowns\"\n    }}>{`Breakdowns`}</h3>\n    <p>{`With the 2.0 `}<inlineCode parentName=\"p\">{`/reports`}</inlineCode>{` endpoint, you can request as many breakdowns as you like, instead of the limit of four with the 1.4 APIs. To request a breakdown report, use an `}<inlineCode parentName=\"p\">{`itemId`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`metricFilter`}</inlineCode>{` section of your request (as shown above). See `}<a parentName=\"p\" {...{\n        \"href\": \"endpoints/reports/breakdowns.md\"\n      }}>{`Breakdowns`}</a>{` for more detailed information.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}