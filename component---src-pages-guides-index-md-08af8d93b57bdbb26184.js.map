{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/index.md"],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"mappings":"0OAUsBA,E,mEAFTC,EAAe,GAOtBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,eADR,gBAGA,wJAEA,eACE,GAAM,kBADR,mBAGA,oSAGA,eACE,GAAM,SADR,UAGA,6WAG4B,cAAGC,WAAW,IACtC,KAAQ,4BADgB,qBAH5B,MAMA,SAACV,EAAD,CAAaW,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,4HACA,eACE,GAAM,OADR,QAGA,8RAOJF,EAAWM,gBAAiB","file":"component---src-pages-guides-index-md-08af8d93b57bdbb26184.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-2.0-apis/analytics-2.0-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"get-started\"\n    }}>{`Get Started`}</h1>\n    <p>{`To get started with Analytics 2.0 APIs you must first decide whether your application will need\nan OAuth client or a JWT client.`}</p>\n    <h2 {...{\n      \"id\": \"authentication\"\n    }}>{`Authentication`}</h2>\n    <p>{`There are multiple type of authentication for authenticating with the analytics APIs. General information\nabout authenticating with Adobe's APIs is located here. Specific information related to authenticating\nwith the analytics APIs is available in the sections below`}</p>\n    <h2 {...{\n      \"id\": \"oauth\"\n    }}>{`OAuth`}</h2>\n    <p>{`Use an OAuth client if you are creating an application that requires an end use to authenticate before\ncalling the Adobe Analytics APIs. The OAuth tokens expire after 24 hours and the end user must then\nre-authenticate before they will be able to call the APIs. To authenticate with an OAuth client, you first\ncreate an OAuth client on the `}<a parentName=\"p\" {...{\n        \"href\": \"https://console.adobe.io\"\n      }}>{`Adobe I/O Console`}</a>{`.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The refresh token grant type is automatically added to OAuth clients created after September 18, 2019`}</p>\n    <h2 {...{\n      \"id\": \"jwt\"\n    }}>{`JWT`}</h2>\n    <p>{`A JWT client is best if you are creating an application that needs to programmatically authenticate calls to\nthe Adobe Analytics APIs. A new JWT token can be generated whenever the old one is about to expire so your application\ncan continue to make API calls.  `}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}