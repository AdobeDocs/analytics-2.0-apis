{"version":3,"file":"c9f1e04f-73fcf70917a2d45780f9.js","mappings":"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","sources":["webpack://analytics-2.0-apis/./node_modules/@adobe/gatsby-theme-aio/src/components/Carousel/index.js"],"sourcesContent":["/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport React from \"react\";\nimport { css } from \"@emotion/react\";\nimport \"@spectrum-css/typography\";\nimport PropTypes from \"prop-types\";\nimport {\n  TABLET_SCREEN_WIDTH,\n  layoutColumns,\n  MOBILE_SCREEN_WIDTH,\n} from \"../../utils\";\n\nimport {  DESKTOP_SCREEN_WIDTH } from \"../../utils\";\n\nimport {\n  HeroButtons,\n  HeroImage,\n} from \"../Hero\";\nimport classNames from \"classnames\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Pagination, Autoplay, Navigation } from \"swiper\";\nimport \"swiper/css\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/navigation\";\n\nSwiperCore.use([Autoplay, Pagination, Navigation]);\n\nconst smallMobileView = \"375px\";\nconst MIN_MOBILE_SCREEN_WIDTH = \"767px\"\n\nconst Texts = ({ texts, index }) => {\n  const definedTextKeys = texts.slots\n    .split(',').map(key=>key.trim())\n    .filter((key) => key.startsWith('text'));\n  return definedTextKeys.map((data) => texts[`${data}${index}`]);\n};\n\nconst SwiperContent = ({\n  textKeys,\n  heading,\n  image,\n  imageStyle,\n  buttons,\n  props,\n  backgroundColor,\n  index,\n  slideTheme,\n  theme,\n  centerAlignament,\n  isCenter\n}) => {\n  return (\n    <div\n      className={classNames(`spectrum--${slideTheme ? slideTheme : theme}`)}\n      css={css`\n        display: flex;\n        ${backgroundColor}\n        margin-bottom: var(--spectrum-global-dimension-size-500);\n        flex-direction: row;\n\n        @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n          flex-direction: column;\n          max-width: calc(${layoutColumns(6)}) !important;\n        }\n\n        @media screen and (max-width: ${MIN_MOBILE_SCREEN_WIDTH}) {\n          max-width: calc(${layoutColumns(3.5)}) !important;\n          padding-left: var(--spectrum-global-dimension-size-200);\n        }        \n\n      `}\n    >\n      {image ? (\n        <div\n          css={css`\n            flex: 1;\n            justify-content: center;\n            @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n              margin: auto;\n            }\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              margin: 0;\n              max-width: calc(${layoutColumns(3.5)}) !important;\n              // margin-bottom: var(--spectrum-global-dimension-size-200);  \n            }\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              max-width: calc(${layoutColumns(6)}) !important;\n              margin: 0;\n              // margin-bottom: var(--spectrum-global-dimension-size-200);\n            }\n\n          `}\n        >\n          <h2>\n            <HeroImage image={image} styles={imageStyle} />\n          </h2>\n        </div>\n      ) : null}\n\n      {textKeys.length > 0 || heading || buttons ? (\n        <div\n          css={css`\n            text-align: left;\n            flex: 1;\n            padding-bottom: var(--spectrum-global-dimension-size-200);\n            // padding-right:45px;\n            @media only screen and (min-width: ${smallMobileView}) and(max-width:${MOBILE_SCREEN_WIDTH}) {\n              margin: 0;\n              background:red;\n              text-align: center !important;\n              max-width: calc(${layoutColumns(3.5)}) !important;\n              padding-left:  var(--spectrum-global-dimension-size-100) !important;\n            }\n            ${isCenter&&centerAlignament}\n          `}\n        >\n          {heading && (\n            <h3\n              className=\"spectrum-Heading--sizeL\"\n              css={css`\n                @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  font-size: 18px !important;\n                }`\n              }>\n              {heading.props.children}\n            </h3>\n          )}\n          {textKeys.length > 0 ?\n            <div\n              className=\"textWrapper\"\n              css={css`\n                @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  &>h3{\n                    font-size: var(--spectrum-alias-heading-xxs-text-size) !important;\n\n                  }\n                }`\n              }\n            >\n              <Texts texts={props} index={index} />\n            </div>\n          : null}\n          {buttons ? (\n            <div\n              css={css`\n                margin-top: var(--spectrum-global-dimension-size-200);\n\n                @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                     div:first-child{\n                       justify-content:center !important;\n                     }\n                }\n              `}\n            >\n              <HeroButtons buttons={buttons} />\n            </div>\n          ):null}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nconst Carousel = ({\n  className,\n  theme = \"dark\",\n  imageStyle = \"\",\n  swiperSpeed = 600,\n  delay = 2500,\n  enableNavigation = false,\n  varient=\"default\",\n  slideTheme,\n  bulletActiveClass = \"swiper-pagination-bullet-active\",\n  bulletClass = \"swiper-pagination-bullet\",\n  navigationPre= \"swiper-button-prev\",\n  navigationNext = \"swiper-button-next\" ,\n  isCenter=false,\n  ...props\n}) => {\n  const propKeys = Object.keys(props);\n  let carouselProps = propKeys.filter((key) => key.startsWith(\"image\"));\n\n  carouselProps = carouselProps.map((data, index) => {\n    return {\n      image: props[data],\n      heading: props[`heading${index}`],\n      buttons: props[`buttons${index}`],\n      bgimage:props[`bgimage${index}`]\n    };\n  });\n\n  const textKeys = props.slots.split(\",\").filter((key) => key.trim().startsWith(\"text\"));\n\n  const backgroundColor = `background-color: var(--spectrum-global-color-gray-${\n    slideTheme === \"light\" ? \"50\" : \"\"\n  });`;\n\n if (varient===\"default\"){\n  return (\n    <section\n      className={classNames(className, `spectrum--${theme}`)}\n      css={css`\n        background: var(--spectrum-global-color-gray-100);\n        padding: var(--spectrum-global-dimension-size-600) 0\n          var(--spectrum-global-dimension-size-200) 0;\n      `}\n      role=\"button\" \n      tabindex={0}\n      onKeyDown={(e)=>{\n        if(e.key===\"ArrowRight\"){\n          const swiperSlide = document.querySelector('.swiper').swiper;\n          swiperSlide.slideNext();\n        }\n        if(e.key ===\"ArrowLeft\"){\n          const swiper = document.querySelector('.swiper').swiper;\n          swiper.slidePrev();\n        }\n      }}\n    >\n      <div\n        css={css`\n          max-width: calc(${layoutColumns(12)});\n          margin: auto;\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            max-width: calc(${layoutColumns(2.75)}) !important;\n          }\n          @media screen and (min-width: ${MOBILE_SCREEN_WIDTH})  and (max-width: ${TABLET_SCREEN_WIDTH})  {\n            padding-bottom: 0;\n            margin-top: 0;\n            max-width: calc(${layoutColumns(6)}) !important;\n          }\n\n        `}\n      >\n        <Swiper\n          speed={swiperSpeed}\n          slidesPerView={\"auto\"}\n          autoplay={{\n            delay,\n          }}\n          pagination={{\n            bulletActiveClass,\n            bulletClass,\n            clickable: true,\n          }}\n          navigation={{\n            nextEl: `.${navigationNext}`,\n            prevEl: `.${navigationPre}`,\n          }}\n        >\n          {carouselProps.map((data, index) => {\n            return (\n              <SwiperSlide key={index}>\n                <SwiperContent\n                  textKeys={textKeys}\n                  heading={data.heading}\n                  image={data.image}\n                  imageStyle={imageStyle}\n                  buttons={data.buttons}\n                  props={props}\n                  backgroundColor={backgroundColor}\n                  index={index}\n                  slideTheme={slideTheme}\n                  theme={theme}\n                />\n                {enableNavigation ? (\n                  <>\n                    <div className={navigationPre}></div>\n                    <div className={navigationNext} ></div>\n                  </>\n                ) : null}\n              </SwiperSlide>\n            );\n          })}\n        </Swiper>\n      </div>\n    </section>\n  );\n}else if( varient==='fullWidth'){\n  let centerAlignament= \"margin:auto\"\n  return(\n    <section\n      className={classNames(className, `spectrum--${theme}`)}\n      css={css`\n        background: var(--spectrum-global-color-gray-100);\n        padding: var(--spectrum-global-dimension-size-600) 0 var(--spectrum-global-dimension-size-200) 0;\n      `}\n      role=\"button\" \n      tabindex={0}\n      onKeyDown={(e)=>{\n        if(e.key===\"ArrowRight\"){\n          const swiper = document.querySelector('.swiper').swiper;\n          swiper.slideNext();\n        }\n        if(e.key ===\"ArrowLeft\"){\n          const swiper = document.querySelector('.swiper').swiper;\n          swiper.slidePrev();\n        }\n      }}\n    >\n      <Swiper\n        speed={swiperSpeed}\n        slidesPerView={\"auto\"}\n        autoplay={{\n          delay,\n        }}\n        pagination={{\n          bulletActiveClass,\n          bulletClass,\n          clickable: true,\n        }}\n        navigation={{\n          nextEl: `.${navigationNext}`,\n          prevEl: `.${navigationPre}`,\n        }}\n      >\n        {carouselProps.map((data, index) => {\n          return (\n            <SwiperSlide key={index}  >\n              <div   css={css`\n                   width:100%;\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    width:100% !important;\n                  }\n                `} className={data.bgimage.props?.children}>\n                <div\n                  css={css`\n                  max-width: calc(${layoutColumns(12)});\n                  margin: auto;\n\n                  // @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  //   max-width: calc(${layoutColumns(2.75)}) !important;\n                  // }\n                  \n                  @media screen and (min-width: ${MOBILE_SCREEN_WIDTH})  and (max-width: ${TABLET_SCREEN_WIDTH})  {\n                    max-width: calc(${layoutColumns(6)});\n                  }\n                `}>\n                  <SwiperContent\n                    textKeys={textKeys}\n                    heading={data.heading}\n                    image={data.image}\n                    imageStyle={imageStyle}\n                    buttons={data.buttons}\n                    props={props}\n                    backgroundColor={backgroundColor}\n                    index={index}\n                    slideTheme={slideTheme}\n                    theme={theme}\n                    isCenter={isCenter}\n                    centerAlignament={centerAlignament}\n                  />\n                  {enableNavigation ? (\n                    <div >\n                      <div className={navigationPre}></div>\n                      <div className={navigationNext} ></div>\n                    </div>\n                  ) : null}\n                </div>\n              </div>\n            </SwiperSlide>\n          );\n        })}\n      </Swiper>\n    </section>\n  )}\n};\n\nCarousel.propTypes = {\n  className: PropTypes.string,\n  theme: PropTypes.oneOf([\"light\", \"dark\", \"lightest\"]),\n  imageStyle: PropTypes.string,\n  swiperSpeed: PropTypes.number,\n  delay: PropTypes.number,\n  enableNavigation: PropTypes.bool,\n  slideTheme: PropTypes.oneOf([\"light\", \"dark\"]),\n  bulletActiveClass: PropTypes.string,\n  bulletClass: PropTypes.string,\n  navigationNext:PropTypes.string,\n  navigationPre:PropTypes.string,\n  isCenter:PropTypes.bool,\n  varient:PropTypes.string,\n};\n\nexport { Carousel };"],"names":["SwiperCore","Autoplay","Pagination","Navigation","Texts","texts","index","slots","split","map","key","trim","filter","startsWith","data","SwiperContent","textKeys","heading","image","imageStyle","buttons","props","backgroundColor","slideTheme","theme","centerAlignament","isCenter","className","classNames","css","TABLET_SCREEN_WIDTH","layoutColumns","DESKTOP_SCREEN_WIDTH","MOBILE_SCREEN_WIDTH","styles","length","children","Carousel","swiperSpeed","delay","enableNavigation","varient","bulletActiveClass","bulletClass","navigationPre","navigationNext","carouselProps","Object","keys","bgimage","role","tabindex","onKeyDown","e","document","querySelector","swiper","slideNext","slidePrev","speed","slidesPerView","autoplay","pagination","clickable","navigation","nextEl","prevEl"],"sourceRoot":""}