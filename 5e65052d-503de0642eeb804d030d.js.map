{"version":3,"file":"5e65052d-503de0642eeb804d030d.js","mappings":"ipCAqCA,IAAMA,EAAkB,SAACC,GAAW,IAAD,EACjC,MAA8B,SAA1BA,SAAA,UAAAA,EAAOC,aAAP,eAAcC,UACTC,EAAAA,EAAAA,cAAaH,EAAO,CACzBI,QAAS,UAINJ,CACR,EAEKK,EAAe,SAACC,EAAOC,GAE3B,YAF4C,IAAjBA,IAAAA,EAAU,IACV,eAAVD,GAAsC,KAAZC,EAAoBD,EAA9C,UAA6DC,EAA7D,GAA4ED,CAE9F,EAHD,qGAKME,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,IAAYC,OAAAA,OAAZ,MAAqB,CAAC,OAAQ,WAA9B,MAA0CC,SAAAA,OAA1C,MAAqD,CAAC,SAAU,aAAhE,MAA8EJ,QAAAA,OAA9E,MAAwF,GAAxF,EAA4FK,EAA5F,EAA4FA,UAA5F,OAElBH,GACE,oBACE,eACEG,UAAWA,EACXC,IAAG,GAKFC,EAAAA,SAAAA,IAAaL,EAAQR,MAAMc,UAAU,SAACC,EAAMC,GAC3C,IAAIC,EAAQR,EAAO,GACfS,EAAUR,EAAS,GAEnBM,EAAI,IACNC,EAAQR,EAAO,GACfS,EAAUR,EAAS,IAGrB,IAAMS,GAAOC,EAAAA,EAAAA,IAAgBL,GAE7B,OACE,eAAKM,IAAKL,IACR,QAAC,EAAAM,EAAD,CAAc,aAAYlB,EAAae,EAAKnB,MAAMc,SAAUR,GAAUiB,KAAMJ,EAAKnB,MAAMuB,KAAML,QAASA,EAASD,MAAOA,IACpH,gBAAMO,MAAM,yBAAyBL,EAAKnB,MAAMc,WAIvD,MAGH,IAhCc,EAkCdW,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOjB,EAAV,EAAUA,OAAV,OAChBiB,GACIxB,EAAAA,EAAAA,cAAawB,EAAO,CACpBZ,UAAUa,EAAAA,EAAAA,IAAcD,EAAM1B,MAAMc,SAAUhB,GAC9Cc,KAAKA,EAAAA,EAAAA,IAAF,8FAOGH,EAPH,qJAoBH,IAxBY,EA0BZmB,EAAY,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,MAA8C,KAAvCC,aAAuC,EAAzBC,aAAAA,OAAyB,SAEjE,OADiBC,OAAOC,KAAKJ,GAAOK,QAAO,SAACb,GAAD,OAASA,EAAIc,WAAW,OAAxB,IAC3BC,KAAI,SAACC,GAAD,OAClBnC,EAAAA,EAAAA,cAAa2B,EAAMQ,GAAU,CAC3B1B,UAAW,qCACXC,KAAKA,EAAAA,EAAAA,IAAF,kDAGmB,IAAhBmB,GAAA,mDAHH,6EAa+BO,EAAAA,GAb/B,+DAHa,GAsBrB,EAxBD,+JA0BMC,EAAc,SAAC,GAAD,IAAGjC,EAAH,EAAGA,QAASY,EAAZ,EAAYA,QAASY,EAArB,EAAqBA,aAArB,OAClBxB,GACIJ,EAAAA,EAAAA,cAAaI,EAAS,CAEtBL,QAAS,KACTuC,aAAc,KACd7B,UACe,YAAZO,GAAyBY,EAAgBA,EAAe,mDAAqD,2BAA6B,oDAC7IlB,IAAI,IASJ,IAjBc,EAApB,8yCAmBM6B,EAAO,SAAC,GAoBP,IAnBL9B,EAmBI,EAnBJA,UACA+B,EAkBI,EAlBJA,WAkBI,IAjBJC,MAAAA,OAiBI,MAjBI,OAiBJ,EAhBJrC,EAgBI,EAhBJA,QACAoB,EAeI,EAfJA,MACAkB,EAcI,EAdJA,KACApC,EAaI,EAbJA,QACAqC,EAYI,EAZJA,UAYI,IAXJ3B,QAAAA,OAWI,MAXM,UAWN,OAVJ4B,gBAUI,EATJC,OAAAA,OASI,MATIC,EAAAA,GASJ,MARJlB,aAAAA,OAQI,cAPJmB,eAOI,EANJC,aAMI,EALJC,qBAAAA,OAKI,MALkB,SAKlB,MAJJC,sBAAAA,OAII,MAJoB,YAIpB,MAHJC,eAAAA,OAGI,MAHa,GAGb,EAFJC,EAEI,EAFJA,SACGtD,GACC,YACJ,GAAmCuD,EAAAA,EAAAA,YAAWC,EAAAA,IAAtCC,GAAR,EAAQA,aAAcC,GAAtB,EAAsBA,SAsBtB,IAnBAC,EAAAA,EAAAA,YAAU,WACR,GAAIN,EAAgB,CAClB,IAAIO,EAAOC,IAAAA,cAAqB,CAC9BC,UAAWC,SAASC,cAAc,iBAClCC,SAAU,MACVC,MAAM,EACNC,UAAU,EACVC,cAAef,IAGjBO,EAAKS,iBAAiB,cAAc,SAAUC,GACxCA,EAAUC,YAAeX,EAAKY,YAAc,IAC9CZ,EAAKa,OAER,GACF,CACF,GAAE,KAGEvD,GAAuB,YAAZA,EAAuB,CACrC,IAAQwD,GAAgBjB,GAAhBiB,KAAMC,GAAUlB,GAAVkB,MACRC,IAAkBC,EAAAA,EAAAA,IAAQnB,GAASoB,UACnCC,IAAmBC,EAAAA,EAAAA,IAAaL,IAChCM,IAAkBC,EAAAA,EAAAA,IAAoBN,GAAiBG,IACvDI,IAAsBC,EAAAA,EAAAA,IAAwBR,GAAiBK,IAErE,OACE,mBACEtE,UAAW0E,IAAW1E,EAAD,aAAyBgC,GAC9C/B,KAAKA,EAAAA,EAAAA,IAAF,gJAImB8B,QAAAA,EAAc,qBAJjC,0DAQ+BM,EAAAA,GAR/B,kDAY+BV,EAAAA,GAZ/B,2EAgBFgB,GAAY5B,GAAQ,eAAKd,IAAG,IAI3B,QAACa,EAAD,CAAWC,MAAOA,KAClB,iBAAOwC,KAAK,OAAOoB,MAAM,OAAOC,UAAQ,EAACC,QAAQ,WAAWC,aAAW,EAAC7E,KAAKA,EAAAA,EAAAA,IAAF,gKAQ/B8E,EAAAA,GAR+B,qCAczE,kBAAQC,IAAKrC,EAAUsC,KAAK,gBAI9BlE,GAAQ,QAACD,EAAD,CAAWC,MAAOA,EAAOjB,OAAM,wBAA8B6C,IACnE,iBAAOY,KAAK,OAAOoB,MAAM,OAAOC,UAAQ,EAACC,QAAQ,WAAWC,aAAW,EAAC7E,KAAKA,EAAAA,EAAAA,IAAF,8IAOrC8E,EAAAA,GAPqC,qCAazE,kBAAQC,IAAKrC,EAAUsC,KAAK,gBAIlC,eACEhF,KAAKA,EAAAA,EAAAA,IAAF,oEAKYmC,EALZ,uFAcH,eACEnC,KAAKA,EAAAA,EAAAA,IAAF,8MAW+BoC,EAAAA,GAX/B,2EAgBe,KAAjB0B,cAAA,EAAAA,GAAMmB,UAAmBnB,cAAzB,EAAyBA,GAAMoB,SAASpB,cAAxC,EAAwCA,GAAMnD,OAAQ0D,KACrD,QAAC,IAAD,CACEN,MAAO,CACLoB,EAAAA,GACArB,GAFK,OAGAO,IAHA,IAGiB1D,MAAMyE,EAAAA,EAAAA,IAAWf,GAAgB1D,QACvD4D,IAAmB,OAASA,IAAT,IAA8B5D,MAAMyE,EAAAA,EAAAA,IAAWb,GAAoB5D,YAK5F,QAACgB,EAAD,CAAajC,QAASA,EAASY,QAASA,KAExC,QAACU,EAAD,CAAWC,MAAO7B,MAK3B,CACC,IAC6C,GA2HK,GAkHE,GA6GhB,GA3V9BiG,GAAS,gGACf,MAAgB,cAAZ/E,GAA2BY,GAE3B,mBACEnB,UAAW0E,IAAW1E,EAAD,aAAyBgC,GAC9C/B,KAAKA,EAAAA,EAAAA,IAAF,yBAEa8B,QAAAA,EAAc,uCAF3B,kCAI+BgD,EAAAA,GAJ/B,sDAQ+BpD,EAAAA,GAR/B,0FAeFgB,GAAY5B,GAAQ,eAAKd,IAAG,IAI3B,QAACa,EAAD,CAAWC,MAAOA,KAClB,iBAAOwC,KAAK,OAAOoB,MAAM,OAAOC,UAAQ,EAACC,QAAQ,WAAWC,aAAW,EAAC7E,KAAKA,EAAAA,EAAAA,IAAF,gKAQjC8E,EAAAA,GARiC,qCAczE,kBAAQC,IAAKrC,EAAUsC,KAAK,gBAI9BlE,GAAQ,QAACD,EAAD,CAAWC,MAAOA,IAAY4B,IACpC,iBAAOY,KAAK,OAAOoB,MAAM,OAAOC,UAAQ,EAACC,QAAQ,WAAWC,aAAW,EAAC7E,KAAKA,EAAAA,EAAAA,IAAF,8IAOvC8E,EAAAA,GAPuC,qCAazE,kBAAQC,IAAKrC,EAAUsC,KAAK,gBAKlC,eACEhF,KAAKA,EAAAA,EAAAA,IAAF,0VAiB+B0B,EAAAA,GAjB/B,wDAqB+BoD,EAAAA,GArB/B,iNA8BFpF,IACC,QAACiC,EAAD,CACEjC,QAASA,EACTY,QAASA,EACTY,aAAcA,KAIlB,QAACF,EAAD,CAAWC,MAAO7B,IAEjBQ,GACC,QAACD,EAAD,CACEC,QAASA,EACTC,OAAQ,CAAC,OAAQ,WACjBC,SAAU,CAACyC,EAAqBC,GAChCxC,IAAG,KAML,eACEA,IAAG,KAKP,eAAKD,UAAWkC,SAAF,WAAEA,EAAW7C,aAAb,cAAE,GAAkBc,aAInB,UAAZI,GAAuBmC,GAE9B,mBACE1C,UAAW0E,IAAW1E,EAAD,aAAyBgC,GAC9C/B,KAAKA,EAAAA,EAAAA,IAAF,cACa8B,QAAAA,EAAc,uCAD3B,yEAK+BgD,EAAAA,GAL/B,wHAU+BpD,EAAAA,GAV/B,gGAgBH,eAAK1B,KAAKA,EAAAA,EAAAA,IAAF,iCAC4BoC,EAAAA,GAD5B,iCAGUA,EAAAA,GAHV,uBAON,eAAKpC,KAAKA,EAAAA,EAAAA,IAAF,iCAC4B8E,EAAAA,GAD5B,yBAKN,eAAKQ,GAAG,mBAGV,eACEtF,KAAKA,EAAAA,EAAAA,IAAF,sCAGcmC,EAHd,8CAKiCT,EAAAA,GALjC,2BASH,eACE1B,KAAKA,EAAAA,EAAAA,IAAF,kNAaiC0B,EAAAA,GAbjC,wGAmBiCoD,EAAAA,GAnBjC,uUA+BFpF,IACC,QAACiC,EAAD,CACEjC,QAASA,EACTY,QAASA,EACTY,aAAcA,KAIlB,QAACF,EAAD,CAAWC,MAAO7B,KAElB,QAACO,EAAD,CACEC,QAASA,EACTC,OAAQ,CAAC,WACTC,SAAU,CAAC,eACXE,IAAG,MAKP,eACEA,KAAKA,EAAAA,EAAAA,IAAF,aACcmC,EADd,2DAIiC2C,EAAAA,GAJjC,kDAOiCpD,EAAAA,GAPjC,2BAWH,eAAK3B,UAAWkC,SAAF,WAAEA,EAAW7C,aAAb,cAAE,GAAkBc,eAMvB,cAAZI,GAA2BY,GAElC,mBACEnB,UAAW0E,IAAW1E,EAAD,aAAyBgC,GAC9C/B,KAAKA,EAAAA,EAAAA,IAAF,cACa8B,QAAAA,EAAc,uCAD3B,yEAK+BgD,EAAAA,GAL/B,wHAU+BpD,EAAAA,GAV/B,gGAgBH,eAAK1B,KAAKA,EAAAA,EAAAA,IAAF,iCAC0BoC,EAAAA,GAD1B,4EAKQA,EAAAA,GALR,uBASN,eACEpC,KAAKA,EAAAA,EAAAA,IAAF,gMAa+B0B,EAAAA,GAb/B,wGAmB+BoD,EAAAA,GAnB/B,uUA8BF9C,IACC1C,EAAAA,EAAAA,cAAa0C,EAAM,CACjB9B,UAAUa,EAAAA,EAAAA,IAAciB,EAAK5C,MAAMc,SAAUhB,GAC7Cc,KAAKA,EAAAA,EAAAA,IAAF,4NAK6B0B,EAAAA,GAL7B,gOAqBNhC,IACC,QAACiC,EAAD,CACEjC,QAASA,EACTY,QAASA,EACTY,aAAcA,KAIlB,QAACF,EAAD,CAAWC,MAAO7B,KAElB,QAACO,EAAD,CACEC,QAASA,EACTI,IAAG,EAGHF,SAAU,CAACyC,EAAqBC,GAChCnC,MAAO,CAAC,cAGZ,oBACE,eAAKN,UAAWkC,SAAF,WAAEA,EAAW7C,aAAb,cAAE,GAAkBc,cAKrB,cAAZI,GAEP,mBACEP,UAAW0E,IAAW1E,EAAD,aAAyBgC,GAC9C/B,KAAKA,EAAAA,EAAAA,IAAF,uCAGSqF,GAHT,eAIavD,QAAAA,EAAc,uCAJ3B,kCAM+BgD,EAAAA,GAN/B,kDAU+BpD,EAAAA,GAV/B,yGAkBFgB,GAAY5B,GAAQ,eAAKd,IAAG,IAI3B,QAACa,EAAD,CAAWC,MAAOA,KAClB,iBAAOwC,KAAK,OAAOoB,MAAM,OAAOC,UAAQ,EAACC,QAAQ,WAAWC,aAAW,EAAC7E,KAAKA,EAAAA,EAAAA,IAAF,gKAQjC8E,EAAAA,GARiC,qCAczE,kBAAQC,IAAKrC,EAAUsC,KAAK,gBAI9BlE,GAAQ,QAACD,EAAD,CAAWC,MAAOA,IAAY4B,IACpC,iBAAOY,KAAK,OAAOoB,MAAM,OAAOC,UAAQ,EAACC,QAAQ,WAAWC,aAAW,EACrE7E,KAAKA,EAAAA,EAAAA,IAAF,iKAQ+B8E,EAAAA,GAR/B,qCAcH,kBAAQC,IAAKrC,EAAUsC,KAAK,gBAIlC,eACEhF,KAAKA,EAAAA,EAAAA,IAAF,4SAa+B8E,EAAAA,GAb/B,gEAiBH,QAACnD,EAAD,CAAajC,QAASA,EAASY,QAASA,KAExC,QAACU,EAAD,CAAWC,MAAO7B,KAElB,QAACO,EAAD,CACEC,QAASA,EACTE,SAAU,CAAC,SAAU,aACrBE,IAAG,KAIL,eAAKD,UAAWkC,SAAF,WAAEA,EAAW7C,aAAb,cAAE,GAAkBc,aAInB,cAAZI,GAEP,mBACEP,UAAW0E,IAAW1E,EAAD,sBACrBC,KAAKA,EAAAA,EAAAA,IAAF,cACa8B,QAAAA,EAAc,uCAD3B,sBAGSuD,GAHT,kDAM+BP,EAAAA,GAN/B,gGAYH,eACE9E,IAAG,IAKH,eACEA,KAAKA,EAAAA,EAAAA,IAAF,kOAQ+B8E,EAAAA,GAR/B,+BAaF9C,IACC1C,EAAAA,EAAAA,cAAa0C,EAAM,CACjB9B,UAAUa,EAAAA,EAAAA,IAAciB,EAAK5C,MAAMc,SAAUhB,GAC7Cc,IAAI,KAmBR,QAAC2B,EAAD,CAAajC,QAASA,EAAS6F,WAAS,KAExC,QAACvE,EAAD,CAAWC,MAAO7B,EAAO+B,aAAa,KAEtC,QAACxB,EAAD,CACEC,QAASA,EACTI,IAAG,MAKP,eACEA,KAAKA,EAAAA,EAAAA,IAAF,wCAG+B8E,EAAAA,GAH/B,wBAQFpC,GAAY5B,GAAQ,eAAKd,IAAG,IAI3B,QAACa,EAAD,CAAWC,MAAOA,KAClB,iBAAOwC,KAAK,OAAOoB,MAAM,OAAOC,UAAQ,EAACC,QAAQ,WAAWC,aAAW,EAAC7E,KAAKA,EAAAA,EAAAA,IAAF,+JAQrC8E,EAAAA,GARqC,qCAczE,kBAAQC,IAAKrC,EAAUsC,KAAK,gBAI9BlE,GAAQ,QAACD,EAAD,CAAWC,MAAOA,IAAY4B,IACpC,eACE1C,IAAG,IAOH,iBAAOsD,KAAK,OAAOoB,MAAM,OAAOC,UAAQ,EAACC,QAAQ,WAAWC,aAAW,EAAC7E,KAAKA,EAAAA,EAAAA,IAAF,mKAQvC8E,EAAAA,GARuC,qCAczE,kBAAQC,IAAKrC,EAAUsC,KAAK,wBA5HvC,CAuIV,C","sources":["webpack://analytics-2.0-apis/./node_modules/@adobe/gatsby-theme-aio/src/components/Hero/index.js"],"sourcesContent":["\n/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { cloneElement, Children, useContext, useEffect } from \"react\";\nimport { withPrefix } from \"gatsby\";\nimport { css } from \"@emotion/react\";\nimport { AnchorButton } from \"../AnchorButton\";\nimport \"@spectrum-css/typography\";\nimport PropTypes from \"prop-types\";\nimport {\n  getElementChild,\n  cloneChildren,\n  TABLET_SCREEN_WIDTH,\n  DESKTOP_SCREEN_WIDTH,\n  MOBILE_SCREEN_WIDTH,\n  DEFAULT_HOME,\n  findSelectedTopPage,\n  rootFixPages,\n  rootFix,\n  findSelectedTopPageMenu,\n} from \"../../utils\";\nimport Context from \"../Context\";\nimport { Breadcrumbs } from \"../Breadcrumbs\";\nimport classNames from \"classnames\";\n\nimport lottie from 'lottie-web';\n\nconst setImageLoading = (child) => {\n  if (child?.props?.mdxType === 'img') {\n    return cloneElement(child, {\n      loading: 'eager'\n    });\n  }\n\n  return child;\n};\n\nconst getAriaLabel = (label, heading = '') => {\n  const labelVal = label === 'Learn more' && heading !== '' ? `${label} about ${heading}` : `${label}`;\n  return labelVal;\n}\n\nconst HeroButtons = ({ buttons, styles = ['fill', 'outline'], variants = ['accent', 'secondary'], heading = '', className }) =>\n\n  buttons ? (\n    <div>\n      <div\n        className={className}\n        css={css`\n          display: flex;\n          flex-wrap: wrap;\n          gap: var(--spectrum-global-dimension-size-200);\n        `}>\n        {Children.map(buttons.props.children, (item, i) => {\n          let style = styles[0];\n          let variant = variants[0];\n\n          if (i > 0) {\n            style = styles[1];\n            variant = variants[1];\n          }\n\n          const link = getElementChild(item);\n\n          return (\n            <div key={i}>\n              <AnchorButton aria-label={getAriaLabel(link.props.children, heading)} href={link.props.href} variant={variant} style={style}>\n                <span class=\"spectrum-Button-label\">{link.props.children}</span>\n              </AnchorButton>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  ) : null;\n\nconst HeroImage = ({ image, styles }) =>\n  image\n    ? cloneElement(image, {\n      children: cloneChildren(image.props.children, setImageLoading),\n      css: css`\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 100%;\n          width: 100%;\n          margin-top: 0;\n          ${styles}\n\n          .gatsby-resp-image-wrapper {\n            max-width: none !important;\n            width: 100% !important;\n            height: 100% !important;\n          }\n\n          .gatsby-resp-image-image {\n            object-fit: cover;\n          }\n        `\n    })\n    : null;\n\nconst HeroTexts = ({ texts, customLayout, isTextWhite = true }) => {\n  const textKeys = Object.keys(texts).filter((key) => key.startsWith('text'));\n  return textKeys.map((textKey) =>\n    cloneElement(texts[textKey], {\n      className: 'spectrum-Body spectrum-Body--sizeL',\n      css: css`\n        &.spectrum-Body--sizeL {\n          margin-top: 0 !important;\n          ${isTextWhite === true &&\n        `\n            color: #fff!important;\n          `\n        }\n          &:last-of-type {\n            margin-bottom: 0 !important;\n          }\n        }\n\n        @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n          padding: 0 var(--spectrum-global-dimension-size-115);\n        }\n      `\n    })\n  );\n};\n\nconst HeroHeading = ({ heading, variant, customLayout }) =>\n  heading\n    ? cloneElement(heading, {\n      // force h1 to support gdocs\n      mdxType: 'h1',\n      originalType: 'h1',\n      className:\n        (variant === 'default' || customLayout) ? customLayout ? 'spectrum-Heading--sizeXL spectrum-Heading--serif' : 'spectrum-Heading--sizeXL' : 'spectrum-Heading--sizeXXL spectrum-Heading--serif',\n      css: css`\n          margin-top: 0;\n          margin-bottom: var(--spectrum-global-dimension-size-200);\n\n          & + p {\n            margin-bottom: var(--spectrum-global-dimension-size-200);\n          }\n        `\n    })\n    : null;\n\nconst Hero = ({\n  className,\n  background,\n  theme = 'dark',\n  heading,\n  image,\n  icon,\n  buttons,\n  assetsImg,\n  variant = 'default',\n  containerHeight = 1000,\n  width = DESKTOP_SCREEN_WIDTH,\n  customLayout = false,\n  primaryOutline = false,\n  isPrimaryBtn = false,\n  variantsTypePrimary = 'accent',\n  variantsTypeSecondary = 'secondary',\n  animationVideo = \"\",\n  videoUrl,\n  ...props\n}) => {\n  const { siteMetadata, location } = useContext(Context);\n\n\n  useEffect(() => {\n    if (animationVideo) {\n      var anim = lottie.loadAnimation({\n        container: document.querySelector(\"#svgContainer\"),\n        renderer: \"svg\",\n        loop: false,\n        autoplay: true,\n        animationData: animationVideo\n      });\n\n      anim.addEventListener(\"enterFrame\", function (animation) {\n        if (animation.currentTime > (anim.totalFrames - 25)) {\n          anim.pause();\n        }\n      });\n    }\n  }, [])\n\n\n  if (!variant || variant === 'default') {\n    const { home, pages } = siteMetadata;\n    const pathWithRootFix = rootFix(location.pathname);\n    const pagesWithRootFix = rootFixPages(pages);\n    const selectedTopPage = findSelectedTopPage(pathWithRootFix, pagesWithRootFix);\n    const selectedTopPageMenu = findSelectedTopPageMenu(pathWithRootFix, selectedTopPage);\n\n    return (\n      <section\n        className={classNames(className, `spectrum--${theme}`)}\n        css={css`\n          position: relative;\n          height: var(--spectrum-global-dimension-size-3400);\n          margin-bottom: var(--spectrum-global-dimension-size-400);\n          background-color: ${background ?? 'rgb( 29, 125, 238)'};\n          width: 100%;\n          display: flex;\n\n          @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n            overflow: auto;\n          }\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            height: calc(100vh - var(--spectrum-global-dimension-size-1200));\n          }\n        `}>\n        {videoUrl && image ? <div css={css`\n              display : flex;\n              justify-content:center;\n              `}>\n          <HeroImage image={image} />\n          <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\n                      display: inline;\n                      position: absolute;\n                      width: 30%;\n                      height:100%;\n                      box-sizing: border-box;\n                      padding: var(--spectrum-global-dimension-size-200);\n                  \n                      @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                        display: block;\n                        width: 100%;\n                      }\n                      }\n                    `}>\n            <source src={videoUrl} type=\"video/mp4\" />\n          </video>\n        </div>\n          :\n          image ? <HeroImage image={image} styles={`position: absolute;`} /> : videoUrl &&\n            <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\n                  display: inline;\n                  width: 90%;\n                  height:100%;\n                  box-sizing: border-box;\n                  padding: var(--spectrum-global-dimension-size-200);\n              \n                  @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                    display: block;\n                    width: 100%;\n                  }\n                  }\n                `}>\n              <source src={videoUrl} type=\"video/mp4\" />\n            </video>\n        }\n\n        <div\n          css={css`\n            margin: auto;\n            display: flex;\n            position: relative;\n            height: 100%;\n            max-width: ${width};\n            flex-direction: row;\n            width: 100%;\n            align-items: center;\n\n            & > p {\n              margin-top: 0 !important;\n            }\n          `}>\n          <div\n            css={css`\n              width: calc(5 * 100% / 12);\n              position: absolute;\n              display: flex;\n              flex-direction: column;\n\n              & > p {\n                margin-top: var(--spectrum-global-dimension-size-225) !important;\n                margin-bottom: 0 !important;\n              }\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                width: auto;\n                padding: 0 var(--spectrum-global-dimension-size-400);\n              }\n            `}>\n            {home?.hidden !== true && home?.title && home?.href && selectedTopPage && (\n              <Breadcrumbs\n                pages={[\n                  DEFAULT_HOME,\n                  home,\n                  { ...selectedTopPage, href: withPrefix(selectedTopPage.href) },\n                  selectedTopPageMenu && { ...selectedTopPageMenu, href: withPrefix(selectedTopPageMenu.href) }\n                ]}\n              />\n            )}\n\n            <HeroHeading heading={heading} variant={variant} />\n\n            <HeroTexts texts={props} />\n          </div>\n        </div>\n      </section>\n    );\n  } else {\n    const height = 'calc(var(--spectrum-global-dimension-size-6000) + var(--spectrum-global-dimension-size-1800))';\n    if (variant === 'fullwidth' && customLayout) {\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            width: 100%;\n            background: ${background ?? \"var(--spectrum-global-color-gray-50)\"};\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              overflow-y: hidden;\n            }\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              .spectrum-Heading--sizeXL {\n                font-size: var(--spectrum-alias-heading-l-text-size);\n              }\n            }\n          `}\n        >\n          {videoUrl && image ? <div css={css`\n              display : flex;\n              justify-content:center;\n              `}>\n            <HeroImage image={image} />\n            <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\n                      display: inline;\n                      position: absolute;\n                      width: 30%;\n                      height:100%;\n                      box-sizing: border-box;\n                      padding: var(--spectrum-global-dimension-size-200);\n                  \n                      @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                        display: block;\n                        width: 100%;\n                      }\n                      }\n                    `}>\n              <source src={videoUrl} type=\"video/mp4\" />\n            </video>\n          </div>\n            :\n            image ? <HeroImage image={image} /> : videoUrl &&\n              <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\n                  display: inline;\n                  width: 90%;\n                  height:100%;\n                  box-sizing: border-box;\n                  padding: var(--spectrum-global-dimension-size-200);\n              \n                  @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                    display: block;\n                    width: 100%;\n                  }\n                  }\n                `}>\n                <source src={videoUrl} type=\"video/mp4\" />\n              </video>\n          }\n\n\n          <div\n            css={css`\n              height: 100%;\n              top: 0;\n              bottom: 0;\n              width: 100%;\n              box-sizing: border-box;\n              padding: 0;\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              justify-content: flex-end;\n              text-align: center;\n\n              h1 {\n                padding: var(--spectrum-global-dimension-size-500) var(--spectrum-global-dimension-size-300) var(--spectrum-global-dimension-size-0) !important;\n              }\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                padding: 0 !important;\n              }\n\n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                padding: 0 var(--spectrum-global-dimension-size-250);\n\n                h1 {\n                  padding: var(--spectrum-global-dimension-size-400) var(--spectrum-global-dimension-size-200) var(--spectrum-global-dimension-size-0) !important;\n                }\n              }\n            `}\n          >\n            {heading && (\n              <HeroHeading\n                heading={heading}\n                variant={variant}\n                customLayout={customLayout}\n              />\n            )}\n\n            <HeroTexts texts={props} />\n\n            {buttons ? (\n              <HeroButtons\n                buttons={buttons}\n                styles={['fill', 'outline']}\n                variants={[variantsTypePrimary, variantsTypeSecondary]}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                  margin-bottom: var(--spectrum-global-dimension-size-200);\n                `}\n              />\n            ) : (\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                `}\n              />\n            )}\n            <div className={assetsImg?.props?.children} />\n          </div>\n        </section>\n      )\n    } else if (variant === 'video' && animationVideo) {\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            width: 100%;\n            overflow: hidden;\n            height: auto;\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n          `}>\n          <div css={css`\n              @media screen and (min-width: ${DESKTOP_SCREEN_WIDTH}) {\n                position: relative;\n                max-width:${DESKTOP_SCREEN_WIDTH}\n                margin:auto;\n              }\n            `}>\n            <div css={css`\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  display: none;\n                }\n              `}>\n              <div id=\"svgContainer\"></div>\n            </div>\n\n            <div\n              css={css`\n                  display: flex;\n                  height: 100%;\n                  max-width: ${width};\n                  margin: auto;\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    display: inline;\n                  }\n              `}>\n              <div\n                css={css`\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: center !important;\n                    position: absolute;\n                    padding: 0;\n                    top: 0;\n                    text-align: left;\n                    width: 30%;\n                    align-item:center;\n                    bottom: 0;\n                    box-sizing: border-box;\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      padding: 0 !important;\n                      width: 100% !important;\n                      position: initial !important;\n                    }\n\n                    @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                      padding: 0 var(--spectrum-global-dimension-size-100);\n                      width:100% !important;\n                      top: 20px !important;\n                      position: initial !important;\n                      h1 {\n                        padding: 0 var(--spectrum-global-dimension-size-200) 0 var(--spectrum-global-dimension-size-0) !important;\n                        font-size: var(--spectrum-heading-l-text-size, var(--spectrum-alias-heading-l-text-size))\n                      }\n                    }\n                `}>\n\n                {heading && (\n                  <HeroHeading\n                    heading={heading}\n                    variant={variant}\n                    customLayout={customLayout}\n                  />\n                )}\n\n                <HeroTexts texts={props} />\n\n                <HeroButtons\n                  buttons={buttons}\n                  styles={['outline']}\n                  variants={['staticWhite']}\n                  css={css`\n                      margin-top: var(--spectrum-global-dimension-size-400);\n                    `}\n                />\n              </div>\n              <div\n                css={css`\n                    max-width: ${width};\n                    margin: auto;\n                    display: none;\n                    @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                      display: block;\n                    }\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      display: inline;\n                    }\n                `}>\n                <div className={assetsImg?.props?.children} />\n              </div>\n            </div>\n          </div>\n        </section>\n      );\n    } else if (variant === 'halfwidth' && customLayout) {\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            width: 100%;\n            overflow: hidden;\n            height: auto;\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-225);\n              box-sizing: border-box;\n            }\n        `}>\n          <div css={css`\n            @media screen and (min-width: ${DESKTOP_SCREEN_WIDTH}) {\n              display: flex;\n              justify-content: space-between;\n              position: relative;\n              max-width:${DESKTOP_SCREEN_WIDTH};\n              margin:auto;\n            }\n          `}>\n            <div\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center !important;\n                // position: absolute;\n                padding: 0;\n                top: 0;\n                text-align: left;\n                width: 36%;\n                align-item:center;\n                bottom: 0;\n                box-sizing: border-box;\n\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  padding: 0 !important;\n                  width: 100% !important;\n                  position: initial !important;\n                }\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  padding: 0 var(--spectrum-global-dimension-size-100);\n                  width:100% !important;\n                  top: 20px !important;\n                  position: initial !important;\n                  h1 {\n                    padding: 0 var(--spectrum-global-dimension-size-200) 0 var(--spectrum-global-dimension-size-0) !important;\n                    font-size: var(--spectrum-heading-l-text-size, var(--spectrum-alias-heading-l-text-size))\n                  }\n                }\n            `}>\n              {icon &&\n                cloneElement(icon, {\n                  children: cloneChildren(icon.props.children, setImageLoading),\n                  css: css`\n                  height: var(--spectrum-global-dimension-size-400);\n                  width: var(--spectrum-global-dimension-size-3600);\n                  margin-top: 0 !important;\n                  margin-bottom: var(--spectrum-global-dimension-size-300) !important;\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    width: var(--spectrum-global-dimension-size-3000) !important;\n                  }\n                  .gatsby-resp-image-wrapper {\n                    max-width: none !important;\n                    width: 100% !important;\n                    height: 100% !important;\n                  }\n\n                  .gatsby-resp-image-image {\n                    height: 100%;\n                    object-fit: contain;\n                  }\n                `\n                })}\n\n              {heading && (\n                <HeroHeading\n                  heading={heading}\n                  variant={variant}\n                  customLayout={customLayout}\n                />\n              )}\n\n              <HeroTexts texts={props} />\n\n              <HeroButtons\n                buttons={buttons}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                `}\n                variants={[variantsTypePrimary, variantsTypeSecondary]}\n                style={[\"outine\"]}\n              />\n            </div>\n            <div>\n              <div className={assetsImg?.props?.children} />\n            </div>\n          </div>\n        </section>\n      );\n    } else if (variant === 'fullwidth') {\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            position: relative;\n            width: 100%;\n            height: ${height};\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              overflow: auto;\n            }\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              height: 100vh;\n\n              .spectrum-Heading--sizeXXL {\n                font-size: var(--spectrum-alias-heading-xl-text-size);\n              }\n            }\n          `}>\n          {videoUrl && image ? <div css={css`\n              display : flex;\n              justify-content:center;\n              `}>\n            <HeroImage image={image} />\n            <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\n                      display: inline;\n                      position: absolute;\n                      width: 30%;\n                      height:100%;\n                      box-sizing: border-box;\n                      padding: var(--spectrum-global-dimension-size-200);\n                  \n                      @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                        display: block;\n                        width: 100%;\n                      }\n                      }\n                    `}>\n              <source src={videoUrl} type=\"video/mp4\" />\n            </video>\n          </div>\n            :\n            image ? <HeroImage image={image} /> : videoUrl &&\n              <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline\n                css={css`\n                  display: inline;\n                  width: 100%;\n                  text-align:center;\n                  height:100%;\n                  box-sizing: border-box;\n                  padding: var(--spectrum-global-dimension-size-200);\n              \n                  @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                    display: block;\n                    width: 100%;\n                  }\n                  }\n                `}>\n                <source src={videoUrl} type=\"video/mp4\" />\n              </video>\n          }\n\n          <div\n            css={css`\n              height: 100%;\n              position: absolute;\n              top: 0;\n              width: 100%;\n              box-sizing: border-box;\n              padding: 0 calc(var(--spectrum-global-dimension-size-3600) + var(--spectrum-global-dimension-size-125));\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              justify-content: center;\n              text-align: center;\n\n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                padding: 0 var(--spectrum-global-dimension-size-400);\n              }\n            `}>\n            <HeroHeading heading={heading} variant={variant} />\n\n            <HeroTexts texts={props} />\n\n            <HeroButtons\n              buttons={buttons}\n              variants={['accent', 'secondary']}\n              css={css`\n                margin-top: var(--spectrum-global-dimension-size-400);\n              `}\n            />\n            <div className={assetsImg?.props?.children} />\n          </div>\n        </section>\n      );\n    } else if (variant === 'halfwidth') {\n      return (\n        <section\n          className={classNames(className, `spectrum--lightest`)}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            width: 100%;\n            height: ${height};\n            overflow: hidden;\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n          `}>\n          <div\n            css={css`\n              display: flex;\n              height: 100%;\n              justify-content: center;\n            `}>\n            <div\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                width: calc(5 * 100% / 12);\n                margin-left: var(--spectrum-global-dimension-size-800);\n                margin-right: var(--spectrum-global-dimension-size-400);\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  width: 100%;\n                  margin: 0;\n                }\n              `}>\n              {icon &&\n                cloneElement(icon, {\n                  children: cloneChildren(icon.props.children, setImageLoading),\n                  css: css`\n                    height: var(--spectrum-global-dimension-size-600);\n                    width: var(--spectrum-global-dimension-size-600);\n                    margin-top: 0 !important;\n                    margin-bottom: var(--spectrum-global-dimension-size-300) !important;\n\n                    .gatsby-resp-image-wrapper {\n                      max-width: none !important;\n                      width: 100% !important;\n                      height: 100% !important;\n                    }\n\n                    .gatsby-resp-image-image {\n                      height: 100%;\n                      object-fit: contain;\n                    }\n                  `\n                })}\n\n              <HeroHeading heading={heading} isVariant />\n\n              <HeroTexts texts={props} isTextWhite={false} />\n\n              <HeroButtons\n                buttons={buttons}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                `}\n              />\n            </div>\n            <div\n              css={css`\n                flex: 1;\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  display: none;\n                }\n              `}>\n\n              {videoUrl && image ? <div css={css`\n              display : flex;\n              justify-content:center;\n              `}>\n                <HeroImage image={image} />\n                <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\n                      display: inline;\n                      position: absolute;\n                      width: 0%;\n                      height:100%;\n                      box-sizing: border-box;\n                      padding: var(--spectrum-global-dimension-size-200);\n                  \n                      @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                        display: block;\n                        width: 100%;\n                      }\n                      }\n                    `}>\n                  <source src={videoUrl} type=\"video/mp4\" />\n                </video>\n              </div>\n                :\n                image ? <HeroImage image={image} /> : videoUrl &&\n                  <div\n                    css={css`\n                      width : 100%;\n                      display: flex;\n                      justify-content: center;\n                      margin: 150px 0;\n                    `}\n                  >\n                    <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\n                        display: inline;\n                        width: 600px;\n                        height:100%;\n                        box-sizing: border-box;\n                        padding: var(--spectrum-global-dimension-size-200);\n                        border-radius : 25px ;\n                    \n                        @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                          display: block;\n                          width: 100%;\n                        }\n                        }\n                      `}>\n                      <source src={videoUrl} type=\"video/mp4\" />\n                    </video>\n                  </div>\n              }\n\n            </div>\n          </div>\n        </section>\n      );\n    }\n  }\n};\n\nHero.propTypes = {\n  background: PropTypes.string,\n  heading: PropTypes.element,\n  text: PropTypes.element,\n  image: PropTypes.element,\n  icon: PropTypes.element,\n  buttons: PropTypes.element,\n  variant: PropTypes.string,\n  width: PropTypes.string,\n  theme: PropTypes.string,\n  customLayout: PropTypes.bool,\n  assetsImg: PropTypes.element,\n  animationVideo: PropTypes.element,\n  videoUrl: PropTypes.element\n};\n\nHeroButtons.propTypes = {\n  buttons: PropTypes.element,\n  variants: PropTypes.array,\n  quiets: PropTypes.array\n};\n\nHeroImage.propTypes = {\n  image: PropTypes.element\n};\n\nexport { Hero, HeroImage, HeroButtons };\n"],"names":["setImageLoading","child","props","mdxType","cloneElement","loading","getAriaLabel","label","heading","HeroButtons","buttons","styles","variants","className","css","Children","children","item","i","style","variant","link","getElementChild","key","A","href","class","HeroImage","image","cloneChildren","HeroTexts","texts","customLayout","isTextWhite","Object","keys","filter","startsWith","map","textKey","MOBILE_SCREEN_WIDTH","HeroHeading","originalType","Hero","background","theme","icon","assetsImg","containerHeight","width","DESKTOP_SCREEN_WIDTH","primaryOutline","isPrimaryBtn","variantsTypePrimary","variantsTypeSecondary","animationVideo","videoUrl","useContext","Context","siteMetadata","location","useEffect","anim","lottie","container","document","querySelector","renderer","loop","autoplay","animationData","addEventListener","animation","currentTime","totalFrames","pause","home","pages","pathWithRootFix","rootFix","pathname","pagesWithRootFix","rootFixPages","selectedTopPage","findSelectedTopPage","selectedTopPageMenu","findSelectedTopPageMenu","classNames","muted","autoPlay","preload","playsInline","TABLET_SCREEN_WIDTH","src","type","hidden","title","DEFAULT_HOME","withPrefix","height","id","isVariant"],"sourceRoot":""}