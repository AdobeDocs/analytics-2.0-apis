{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/endpoints/segments/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,gBADR,iBAGA,mBAAG,eAAIC,WAAW,KAAf,2IAA8J,cAAGA,WAAW,KACzK,KAAQ,0BADmJ,YAA9J,kCAGH,2OAA4N,cAAGA,WAAW,IACtO,KAAQ,2FADgN,YAA5N,kEAGA,eACE,GAAM,8BADR,+BAGA,8HAA+G,uBAAYA,WAAW,KAAvB,QAA/G,MAAqK,uBAAYA,WAAW,KAAvB,YAArK,kBAA2O,uBAAYA,WAAW,KAAvB,iBAA3O,WAA+S,uBAAYA,WAAW,KAAvB,SAA/S,kEAAka,eAAIA,WAAW,KAAf,mBAAla,6CAA0f,uBAAYA,WAAW,KAAvB,4BAA1f,UAAwkB,uBAAYA,WAAW,KAAvB,YAAxkB,MAAkoB,uBAAYA,WAAW,KAAvB,iBAAloB,UAAqsB,uBAAYA,WAAW,KAAvB,SAArsB,iJAAu4B,uBAAYA,WAAW,KAAvB,QAAv4B,4GAAmiC,uBAAYA,WAAW,KAAvB,QAAniC,mGACA,mBAAG,uBAAYA,WAAW,KAAvB,mEACH,eACE,GAAM,6BADR,8BAGA,4EACA,mBAAG,uBAAYA,WAAW,KAAvB,wEACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,+KAYL,eACE,GAAM,oBADR,qBAGA,8KAA+J,uBAAYA,WAAW,KAAvB,QAA/J,uHAAsU,cAAGA,WAAW,IAChV,KAAQ,gCAD0T,iBAAtU,wCAGA,iHACA,mBAAG,uBAAYA,WAAW,KAAvB,oEACH,eACE,GAAM,oBADR,qBAGA,6DAA8C,uBAAYA,WAAW,KAAvB,OAA9C,yBAAsH,uBAAYA,WAAW,KAAvB,QAAtH,MAA4K,uBAAYA,WAAW,KAAvB,iBAA5K,UAA+O,uBAAYA,WAAW,KAAvB,mBAA/O,uBACA,0BAAW,uBAAYA,WAAW,KAAvB,OAAX,oNAA8Q,uBAAYA,WAAW,KAAvB,2BAA9Q,2FACA,mBAAG,uBAAYA,WAAW,KAAvB,wEACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,uLAYL,eACE,GAAM,oBADR,qBAGA,2UACA,mBAAG,uBAAYA,WAAW,KAAvB,2EACH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,8BAUTJ,EAAWK,gBAAiB","file":"component---src-pages-guides-endpoints-segments-index-md-1bd0942f35bd01007271.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-2.0-apis/analytics-2.0-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"segments-api\"\n    }}>{`Segments API`}</h1>\n    <p><em parentName=\"p\">{`This help page describes how to use the segments endpoint. For more information around how to use segments in Reporting API calls, see `}<a parentName=\"em\" {...{\n          \"href\": \"../reports/segments.md\"\n        }}>{`Segments`}</a>{` in the Reporting API guide.`}</em></p>\n    <p>{`The Analytics 2.0 Segments APIs allow you to retrieve, update, or create segments programmatically through Adobe I/O. The APIs use the same data and methods that are used when working with segments in the UI. See `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/analytics/components/segmentation/seg-home.html\"\n      }}>{`Segments`}</a>{` in the Analytics Components user guide for more information.`}</p>\n    <h2 {...{\n      \"id\": \"retrieve-multiple-segments\"\n    }}>{`Retrieve multiple segments`}</h2>\n    <p>{`When requesting a list of segments, you can use multiple URL query parameter filters. You can filter by `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`tagNames`}</inlineCode>{`, segment id (`}<inlineCode parentName=\"p\">{`segmentFilter`}</inlineCode>{`), and `}<inlineCode parentName=\"p\">{`rsids`}</inlineCode>{`. For example, to retrieve all segments tagged as part of the `}<em parentName=\"p\">{`SpringPromotion`}</em>{` campaign, you can add the URL parameter `}<inlineCode parentName=\"p\">{`tagNames=SpringPromotion`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`tagNames`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`segmentFIlter`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`rsids`}</inlineCode>{` filters accept comma-delimited lists. These lists should be short, with no more than 100 items. While segments are global to a company, the `}<inlineCode parentName=\"p\">{`rsid`}</inlineCode>{` filter specifically designates the Report suite ID that the segment was created/validated against. The `}<inlineCode parentName=\"p\">{`rsid`}</inlineCode>{` filter designation does not mean that it is the only report suite the segment can be used on.`}</p>\n    <p><inlineCode parentName=\"p\">{`GET https://analytics.adobe.io/api/{REPORT_SUITE_ID}/segments`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"retrieve-a-single-segment\"\n    }}>{`Retrieve a single segment`}</h2>\n    <p>{`You can retrieve segments individually by segment ID.`}</p>\n    <p><inlineCode parentName=\"p\">{`GET https://analytics.adobe.io/api/{REPORT_SUITE_ID}/segments/{ID}`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"id\": \"s300000022_5bb7c94e80f0073611afb35c\",\n  \"name\": \"Example segment\",\n  \"description\": \"\",\n  \"rsid\": \"examplersid\",\n  \"owner\": {\n    \"id\": 596983\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-a-segment\"\n    }}>{`Create a segment`}</h2>\n    <p>{`Adobe recommends using the product UI to create segments. If you opt to use the API to create segments, note that some fields are ignored. For example, `}<inlineCode parentName=\"p\">{`tags`}</inlineCode>{` are not stored in segments themselves and are ignored if included when creating segments through the API. Use the `}<a parentName=\"p\" {...{\n        \"href\": \"../componentmetadata/tags.md\"\n      }}>{`Tags endpoint`}</a>{` to set or modify a segment's tags.`}</p>\n    <p>{`This API call requires a JSON request body, representing the segment definition to create.`}</p>\n    <p><inlineCode parentName=\"p\">{`PUT https://analytics.adobe.io/api/{REPORT_SUITE_ID}/segments/`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"update-a-segment\"\n    }}>{`Update a segment`}</h2>\n    <p>{`You can edit existing segments using a `}<inlineCode parentName=\"p\">{`PUT`}</inlineCode>{` API call. Note that `}<inlineCode parentName=\"p\">{`tags`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`compatibility`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`reportSuiteName`}</inlineCode>{` cannot be edited.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`PUT`}</inlineCode>{` endpoint also supports partial updates. Instead of sending the entire JSON object to the API, you can only send fields that you want to update. For example, if you only want to update the name, use the JSON `}<inlineCode parentName=\"p\">{`{\"name\":\"Updated name\"}`}</inlineCode>{`. The entire object is returned in the response, modified by the requested expansions.`}</p>\n    <p><inlineCode parentName=\"p\">{`PUT https://analytics.adobe.io/api/{REPORT_SUITE_ID}/segments/{ID}`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"id\": \"s300000022_5bb7c94e80f0073611afb35c\",\n  \"name\": \"Updated Example segment\",\n  \"description\": \"\",\n  \"rsid\": \"examplersid\",\n  \"owner\": {\n    \"id\": 596983\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"delete-a-segment\"\n    }}>{`Delete a segment`}</h2>\n    <p>{`If you delete a segment, it is hidden from all users in all menus. It is also no longer returned when retrieving multiple segments in an API call. However, reports and other sources that reference the deleted segment can still use it. You can also continue to request it from the single segment API endpoint.`}</p>\n    <p><inlineCode parentName=\"p\">{`DELETE https://analytics.adobe.io/api/{REPORT_SUITE_ID}/segments/{ID}`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"status\": \"ok\"\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}