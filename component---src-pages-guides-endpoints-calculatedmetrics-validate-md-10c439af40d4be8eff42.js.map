{"version":3,"file":"component---src-pages-guides-endpoints-calculatedmetrics-validate-md-10c439af40d4be8eff42.js","mappings":"iNAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKU,YALF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,+BADR,gCAGA,0TAA2S,uBAAYC,WAAW,KAAvB,aAA3S,2CAA2Y,uBAAYA,WAAW,KAAvB,QAA3Y,+IACA,mBAAG,uBAAYA,WAAW,KAAvB,iFACH,eACE,GAAM,4BADR,6BAGA,2IACA,SAACV,EAAD,CAAWW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,YAAYJ,QAAQ,eAC1E,eACE,GAAM,WADR,YAGA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,eADZ,kkBA4BL,eACE,GAAM,YADR,aAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,2SAaR,CAEDH,EAAWO,gBAAiB,C","sources":["webpack://analytics-2.0-apis/./src/pages/guides/endpoints/calculatedmetrics/validate.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-2.0-apis/analytics-2.0-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"validate-calculated-metrics\"\n    }}>{`Validate calculated metrics`}</h1>\n    <p>{`Because report suites can have different configurations, dimensions, or metrics, a calculated metric that is valid in one report suite may not be valid in another. To determine which calculated metric to use in different report suites, and why it may or may not be available, you can use the `}<inlineCode parentName=\"p\">{`/validate`}</inlineCode>{` endpoint. This endpoint allows you to `}<inlineCode parentName=\"p\">{`POST`}</inlineCode>{` a definition along with a target report suite id. The validate endpoint responds with compatibility information on the calculated metric.`}</p>\n    <p><inlineCode parentName=\"p\">{`POST https://analytics.adobe.io/api/{COMPANY_ID}/calculatedmetrics/validate`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"example-validate-request\"\n    }}>{`Example validate request`}</h2>\n    <p>{`The following example shows a request to validate a target report suite id for a given calculated metric definition:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"CURL,JSON\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"request\"\n    }}>{`Request`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`curl -X POST \"http://analytics.adobe.io/api/exampleco/calculatedmetrics/validate?locale=en_US\" \\\\\n    -H \"x-api-key: {CLIENTID}\" \\\\\n    -H \"Authorization: Bearer {ACCESSTOKEN}\" \\\\\n    -d '{\n  \"rsid\": \"[report suite id]\",\n  \"definition\": {\n    \"formula\": {\n      \"func\": \"subtract\",\n      \"col2\": {\n        \"func\": \"metric\",\n        \"name\": \"metrics/reloads\"\n      },\n      \"col1\": {\n        \"func\": \"metric\",\n        \"name\": \"metrics/occurrences\"\n      }\n    },\n    \"func\": \"calc-metric\",\n    \"version\": [\n      1,\n      0,\n      0\n    ]\n  }\n}'\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"response\"\n    }}>{`Response`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"valid\": true,\n  \"identityMetrics\": [ { \"identity\": \"metrics/occurrences\" }, { \"identity\": \"metrics/reloads\" } ],\n  \"functions\": [ \"subtract\" ],\n  \"validator_version\": \"1.0.0\",\n  \"supported_products\": [ \"oberon\", \"frag\" ],\n  \"supported_schema\": [ \"schema_oberon\", \"schema_frag\" ]\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","CodeBlock","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}