{"version":3,"file":"component---src-pages-guides-endpoints-reports-search-filters-md-8bbf30cc639ad5c0f39b.js","mappings":"kNAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKU,YALF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,kBADR,mBAGA,8WACA,sCAAuB,uBAAYC,WAAW,KAAvB,UAAvB,yDAAkI,uBAAYA,WAAW,KAAvB,UAAlI,+CACA,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,UAApB,4CACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,WAApB,yEACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,kBAApB,kDACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,UAApB,wDACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,sBAApB,sIAAyN,uBAAYA,WAAW,MAAvB,SAAzN,OAEF,eACE,GAAM,0BADR,YAEe,uBAAYA,WAAW,MAAvB,UAFf,aAGA,oGAAqF,uBAAYA,WAAW,KAAvB,UAArF,gGAAuO,uBAAYA,WAAW,KAAvB,UAAvO,kEACA,SAACV,EAAD,CAAWW,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,YAAYJ,QAAQ,eAC1E,eACE,GAAM,gBADR,iBAGA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,iBADZ,kvBAsCL,eACE,GAAM,YADR,aAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,ioBAyCL,eACE,GAAM,2BADR,UAEa,uBAAYA,WAAW,MAAvB,UAFb,gBAGA,0BAAW,uBAAYA,WAAW,KAAvB,UAAX,iCAA8F,uBAAYA,WAAW,KAAvB,UAA9F,iBAAiK,uBAAYA,WAAW,KAAvB,UAAjK,2FACA,oBACE,eAAIA,WAAW,MAAf,8BAAkD,uBAAYA,WAAW,MAAvB,OAAlD,MAAwG,uBAAYA,WAAW,MAAvB,MAAxG,UAAiK,uBAAYA,WAAW,MAAvB,OAAjK,MACA,eAAIA,WAAW,MAAf,sBAA0C,uBAAYA,WAAW,MAAvB,SAA1C,MAAkG,uBAAYA,WAAW,MAAvB,YAAlG,MAA6J,uBAAYA,WAAW,MAAvB,eAA7J,UAA+N,uBAAYA,WAAW,MAAvB,aAA/N,MACA,eAAIA,WAAW,MAAf,+CACA,eAAIA,WAAW,MAAf,4CACA,eAAIA,WAAW,MAAf,mCACA,eAAIA,WAAW,MAAf,kEACA,eAAIA,WAAW,MAAf,gDACA,eAAIA,WAAW,MAAf,iDAAqE,uBAAYA,WAAW,MAAvB,KAArE,oBAAuI,uBAAYA,WAAW,MAAvB,OAAvI,OAEF,eACE,GAAM,6BADR,8BAGA,oBACE,eAAIA,WAAW,MAAf,4DAAgF,uBAAYA,WAAW,MAAvB,uBAChF,eAAIA,WAAW,MAAf,mDAAuE,uBAAYA,WAAW,MAAvB,8BACvE,eAAIA,WAAW,MAAf,8FAAkH,uBAAYA,WAAW,MAAvB,uFAClH,eAAIA,WAAW,MAAf,oEAAwF,uBAAYA,WAAW,MAAvB,mDAI7F,CAEDH,EAAWO,gBAAiB,C","sources":["webpack://analytics-2.0-apis/./src/pages/guides/endpoints/reports/search-filters.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/analytics-2.0-apis/analytics-2.0-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"search-filters\"\n    }}>{`Search filters`}</h1>\n    <p>{`Use search filters to limit the data returned so that reports show only the values you need.  For example, if you have thousands of records but only a few have needed reports, you can use filtering to return and find them quickly. Some filters also allow you to include, group, or present data in convenient formats, such as breakdown reports.`}</p>\n    <p>{`You can use the `}<inlineCode parentName=\"p\">{`search`}</inlineCode>{` parameter to filter your results more narrowly. The `}<inlineCode parentName=\"p\">{`search`}</inlineCode>{` parameter includes the following options:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`itemId`}</inlineCode>{` - A single ID to include in the report`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`itemIds`}</inlineCode>{` - A list of itemIds to include in the report (shown in the example)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`excludeItemIds`}</inlineCode>{` - A list of itemIds to exclude in the report`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`clause`}</inlineCode>{` - A search clause to use when filtering dimensions`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`includeSearchTotal`}</inlineCode>{` - Includes a special element called 'searchTotals' in the response that contains the total of the filtered items. The default is `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example-search-request\"\n    }}>{`Example `}<inlineCode parentName=\"h2\">{`search`}</inlineCode>{` Request`}</h2>\n    <p>{`The following example requests data only for campaigns \"10\" and \"11\" with the `}<inlineCode parentName=\"p\">{`search`}</inlineCode>{` parameter by using their itemIds (line 9). The response returns the data requested for the `}<inlineCode parentName=\"p\">{`itemId`}</inlineCode>{` associated with campaigns 10 and 11 (lines 18-21 and 25-28).`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON,JSON\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"request-body\"\n    }}>{`Request body`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n   \"rsid\":\"examplersid\",\n   \"globalFilters\":[\n      {\n         \"type\":\"dateRange\",\n         \"dateRange\":\"YYYY-01-31T00:00:00.000/YYYY-02-06T23:59:59.999\"\n      }\n   ],\n   \"search\":{\n      \"itemIds\":[743855946,511036305]\n   },\n   \"metricContainer\":{\n      \"metrics\":[\n         {\n            \"columnId\":\"0\",\n            \"id\":\"metrics/pageviews\",\n            \"filters\":[\n               \"0\"\n            ]\n         }\n      ],\n      \"metricFilters\":[\n         {\n            \"id\":\"0\",\n            \"type\":\"dateRange\",\n            \"dateRange\":\"YYYY-01-31T00:00:00.000/YYYY-02-06T23:59:59.999\"\n         }\n      ]\n   },\n   \"dimension\":\"variables/evar1\",\n   \"settings\":{\n      \"dimensionSort\":\"asc\",\n      \"limit\":5\n   }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"response\"\n    }}>{`Response`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n   \"totalPages\":1,\n   \"firstPage\":true,\n   \"lastPage\":true,\n   \"numberOfElements\":2,\n   \"number\":0,\n   \"totalElements\":2,\n   \"columns\":{\n      \"dimension\":{\n         \"id\":\"variables/evar1\",\n         \"type\":\"string\"\n      },\n      \"columnIds\":[\n         \"0\"\n      ]\n   },\n   \"rows\":[\n      {\n         \"itemId\":\"511036305\",\n         \"value\":\"11\",\n         \"data\":[\n            1631.0\n         ]\n      },\n      {\n         \"itemId\":\"743855946\",\n         \"value\":\"10\",\n         \"data\":[\n            2032.0\n         ]\n      }\n   ],\n   \"summaryData\":{\n      \"totals\":[\n         104310.0\n      ]\n   }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-clause-parameters\"\n    }}>{`Using `}<inlineCode parentName=\"h2\">{`clause`}</inlineCode>{` Parameters`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`search`}</inlineCode>{` parameter also includes the `}<inlineCode parentName=\"p\">{`clause`}</inlineCode>{` option. The `}<inlineCode parentName=\"p\">{`clause`}</inlineCode>{` parameter provides a powerful tool for filtering data. To use it, follow these rules:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`It uses boolean operators `}<inlineCode parentName=\"li\">{`AND`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`OR`}</inlineCode>{`, and `}<inlineCode parentName=\"li\">{`NOT`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`It uses operators `}<inlineCode parentName=\"li\">{`MATCH`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`CONTAINS`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`BEGINS-WITH`}</inlineCode>{`, and `}<inlineCode parentName=\"li\">{`ENDS-WITH`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`It uses group conditions with parenthesis.`}</li>\n      <li parentName=\"ul\">{`Strings are contained in single quotes.`}</li>\n      <li parentName=\"ul\">{`Searches are case-insensitive.`}</li>\n      <li parentName=\"ul\">{`If no operator is specified, a 'contains' match is performed.`}</li>\n      <li parentName=\"ul\">{`Valid operators are 'match' and 'contains'.`}</li>\n      <li parentName=\"ul\">{`Glob expressions are evaluated. If a literal `}<inlineCode parentName=\"li\">{`*`}</inlineCode>{` is needed, use `}<inlineCode parentName=\"li\">{`\\\\*`}</inlineCode>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"example-clause-statements\"\n    }}>{`Example Clause statements`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Only include results that match the string 'home page': `}<inlineCode parentName=\"li\">{`MATCH 'home page'`}</inlineCode></li>\n      <li parentName=\"ul\">{`Include pages that do not contain 'home page': `}<inlineCode parentName=\"li\">{`NOT CONTAINS 'home page'`}</inlineCode></li>\n      <li parentName=\"ul\">{`Include pages that do not contain 'home page' or 'about us', but do contain 'contact us': `}<inlineCode parentName=\"li\">{`(NOT CONTAINS 'home page' OR NOT CONTAINS 'about us') AND (CONTAINS 'contact us')`}</inlineCode></li>\n      <li parentName=\"ul\">{`Include pages that contain 'home page' or start with 'landing': `}<inlineCode parentName=\"li\">{`CONTAINS 'home page' OR BEGINS-WITH 'landing'`}</inlineCode></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","CodeBlock","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}